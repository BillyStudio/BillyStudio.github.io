{"pages":[{"title":"About Author","text":"应试教育的最大弊端, 是没有让我认识到学习是一件仅仅关于自己的事情. 如果你有能令我感兴趣或者是使我的生活更有趣的主意、机遇或简介，请给我发电子邮件至 wangshengdian96@gmail.com。如上文所述理由，我只会回应那些与我的日程安排相匹配或符合个人兴趣的邮件。","link":"/about/index.html"},{"title":"categories","text":"","link":"/categories/index.html"},{"title":"Tagcloud","text":"","link":"/tags/index.html"}],"posts":[{"title":"数据结构与算法笔记 | 图","text":"在计算机科学中，一个图就是一些顶点的集合，这些顶点通过一系列边结对（连接）。 顶点用圆圈表示，顶点的集合可以使用V表示。边就是这些圆圈之间的连线，每一条边可以用一个点对 $(v,w)$ 表示，其中$v,w \\in V$。如果点对顺序无关，即$(v,w)$和$(w,v)$是同一条边，那么此图就被称为无向图；反之如果点对有序，相当于边有箭头指向，那么此图就被称为有向图。 一、图的表示法以一个无向图为例，展示三种图的表示法 1.1 邻接矩阵12345[[0, 1, 1, 1, 1],[1, 0, Inf, Inf, Inf],[1, Inf, 0, Inf, Inf],[1, Inf, Inf, 0, Inf],[1, Inf, Inf, Inf, 0]] 上面矩阵数值为0表示同一个点，为1表示有边相连（边长默认1），Inf（一个很大的数）表示不可达 1.2 邻接表使用链表记录相邻点集合 123450: [1, 2, 3, 4]1: [0]2: [0]3: [0]4: [0] 1.3 边集将图中4条边记录下来： 1[(0,1), (0,2), (0,3), (0,4)] 二、最短路问题在一个连通图中, 如何求解从一个节点到另一个节点的最短路径, 称为最短路问题。Dijkstra 算法是解决单源最短路问题的经典算法，适用于边长为非负值的大多数情况。 Dijkstra 算法与优先队列第一步：使用一个数组dist储存从原点到该点的最短距离, 原点初始化为0, 其余全部初始化为不可达；另用一个数组used标记某点是否已访问。目标点point和原点到其最短距离dist[point]作为一个 pair 加入优先队列, 优先队列按照最短距离的大小逆序排列.第二步：若优先队列为空，则退出循环；否则从优先队列中取出一条最短边，遍历最短边对应目标点的所有相邻节点（故使用Dijkstra算法时宜采用临接表形式来表示图），若通过目标点到达其相邻节点的路径比原路径更短, 则更新dist路径.第三步：选出used数组中标记的未访问的节点中dist最小的节点next，将pair&lt;next, dist[next]&gt;加入优先队列。返回第二步。 123456789101112131415161718192021int dist[maxn]; // dist[i] 更新从原点到 i 点的最短距离typedef pair&lt;int, int&gt; P; // first 表示距离, second 表示目标点void dijkstra(int source) { priority_queue&lt;P, vector&lt;P&gt;, greater&lt;P&gt; &gt; pq; // 定义距离越小越靠前的优先队列 memset(dist, 0xff, sizeof dist); // 原点到各点初始化为不可达 dist[source] = 0; // 原点到原点初始化距离为0 qp.push(0, source); while(!pq.empty()) { P pair = pq.top(); pq.pop(); // 弹出到未访问节点的最短pair int shortest = p.first, point = pair.second; if (shortest &gt; dist[point]) continue; // 减枝，去除弹出最短边比暂存最短边还长的情况 for(auto &amp;e : graph[point]) { int next = e.second, dist_update = dist[point] + e.first; if(dist_update &lt; dist[next]) { dist[next] = dist_update; pq.push(dist_update, next); } } }} priority_queueC++ 中的优先队列是一个容器, 插入时为对数时间的复杂度, 读取最大值或最小值为常数时间的复杂度. 使用 STL 中的 std::priority_queue 需要包含头文件 queue. 默认是从大到小排序, 也可以通过指定 greater&lt;T&gt; 参数进行从小到大排序. 如果自定义比较方法的一定要注意, 这里需要定义一个比较 type 而不是比较函数. 在用于比较的类型(struct或class)中重写 operator() 而不是 operator&lt;. 123456789101112class Cmp{public: bool operator() (const Tri&amp; t1, const Tri&amp; t2) const{ if(t1.time == t2.time){ if(t1.send == t2.send){ return t1.receive &lt; t2.receive; } else return t1.send &lt; t2.send; } return t1.time &lt; t2.time; }}; 一些特殊案例注意有些情况下，比如存在多个source和target值的情况，Dijkstra需要都加入：如果下面这题使用图的最短路算法 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061/* * @lc app=leetcode id=815 lang=java * * [815] Bus Routes */import java.util.*;// @lc code=startclass Solution { HashMap&lt;Integer, ArrayList&lt;Integer&gt;&gt; graph = new HashMap&lt;&gt;(); HashMap&lt;Integer, Boolean&gt; searched = new HashMap&lt;&gt;(); class Pair{ public int k; public int v; public Pair(int point, int dist) { k = point; v = dist; } } PriorityQueue&lt;Pair&gt; pq = new PriorityQueue&lt;Pair&gt;(new Comparator&lt;Pair&gt;(){ @Override public int compare(Pair o1, Pair o2) { return o1.v - o2.v; } }); public int numBusesToDestination(int[][] routes, int source, int target) { for(int i=0; i&lt;routes.length; ++i) { ArrayList&lt;Integer&gt; ring = new ArrayList&lt;Integer&gt;(routes[i].length); for(int j=0; j&lt;routes[i].length; ++j) { ring.add(routes[i][j]); } for(int j=0; j&lt;routes[i].length; ++j) { if(graph.get(routes[i][j]) == null) { graph.put(routes[i][j], new ArrayList&lt;Integer&gt;()); searched.put(routes[i][j], false); } ArrayList&lt;Integer&gt; neighbors = graph.get(routes[i][j]); neighbors.addAll(ring); neighbors.remove(neighbors.indexOf(routes[i][j])); } } Pair pair = new Pair(source, 0); searched.put(source, true); pq.add(pair); while(!pq.isEmpty()) { Pair out = pq.poll(); searched.put(out.k, true); if(out.k == target) { return out.v; } ArrayList&lt;Integer&gt; neighbors = graph.get(out.k); int dist = out.v; for(int point : neighbors) if(!searched.get(point)) { pq.add(new Pair(point, dist+1)); // 减枝 } } return -1; }}// @lc code=end 上述解答会在这个用例超时： 123[[0,1,2, ..., 90000]]0900 判定是否连接的方法可以是将公交路线放在集合中，检查两个集合的交集是否为空；或者将公交路线中的车站进行递增排序，并使用双指针的方法检查是否有相同的车站。 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677/* * @lc app=leetcode id=815 lang=java * * [815] Bus Routes */import java.util.*;// @lc code=startclass Solution { HashMap&lt;Integer, ArrayList&lt;Integer&gt;&gt; graph = new HashMap&lt;&gt;(); HashMap&lt;Integer, Boolean&gt; searched = new HashMap&lt;&gt;(); class Pair{ public int k; public int v; public Pair(int point, int dist) { k = point; v = dist; } } PriorityQueue&lt;Pair&gt; pq = new PriorityQueue&lt;Pair&gt;(new Comparator&lt;Pair&gt;(){ @Override public int compare(Pair o1, Pair o2) { return o1.v - o2.v; } }); public int numBusesToDestination(int[][] routes, int source, int target) { if(source == target) return 0; for(int i=0; i&lt;routes.length; ++i) { graph.put(i, new ArrayList&lt;Integer&gt;()); searched.put(i, false); } for(int i=0; i&lt;routes.length; ++i) { for(int j=0; j&lt;routes.length; ++j) { if(intersect(routes[i], routes[j])) { graph.get(i).add(j); graph.get(j).add(i); } } } // find route of source and target for(int i=0; i&lt;routes.length; ++i) { if(Arrays.binarySearch(routes[i], source)&gt;=0) { Pair pair = new Pair(i, 0); searched.put(i, true); pq.add(pair); } } int min = Integer.MAX_VALUE; while(!pq.isEmpty()) { Pair out = pq.poll(); searched.put(out.k, true); if(Arrays.binarySearch(routes[out.k], target)&gt;=0) { min = Math.min(min, out.v+1); } ArrayList&lt;Integer&gt; neighbors = graph.get(out.k); int dist = out.v; for(int route : neighbors) if(!searched.get(route)) { pq.add(new Pair(route, dist+1)); searched.put(route, true); } } if(min == Integer.MAX_VALUE) return -1; return min; } public boolean intersect(int[] A, int[] B) { int i = 0, j = 0; while (i &lt; A.length &amp;&amp; j &lt; B.length) { if (A[i] == B[j]) return true; if (A[i] &lt; B[j]) i++; else j++; } return false; }}// @lc code=end 三、最小生成树 (minimal spanning tree)在实际应用中, 我们经常会遇到求解最小生成树的问题，比如城市之间的通信管道铺设要求总长最短。由于树可看作一种不形成环的无向连通图，对于一个带权无向连通图，最小生成树就是图中边的一个子集，该子集连接了图中的所有点，并且权值和最小。 Kruskal 算法与并查集该算法的目的是找出一个图中的最小生成树。具体做法如下： 初始化最小生成树的边的集合S。将所有的边按照升序排列，依次取出长度最小的边。 判断取出边所连接的两点是否连通，如果已经连通，说明这两点已经构成了最小生成树，则不做处理；若未连通，则将两点通过并查集连接，并将这个边加入集合S中； 当遍历完所有边后，返回集合S，即为最小生成树的边的集合 123456789101112// edges[i] = {index, from, to}List&lt;Integer&gt; kruskal(int[][] edges) { Arrays.sort(edges, comparator); List&lt;Integer&gt; MST = new ArrayList&lt;&gt;(); for(int[] edge : edges) { if(findPar(edge[1]) != findPar(edge[2])) { union(edge[1], edge[2]); MST.add(edge[0]); } } return MST;} 并查集 (union-find set)并查集是一种特殊的树状结构, 用每一棵树来表示一个集合. 使用路径压缩方法将树压缩为两层, 因此查找效率非常高. 假如分类用整型连续标记, 查找函数可以写成下面这样: 12345678910int par[maxn]; // 记录所属的父亲节点int findPar(int x){ if (par[x] == x) return x; return par[x] = findPar(par[x]); // 路径压缩}void init(int n){ for(int i=0; i&lt;n; ++i) par[i] = i; // 每个元素各自初始化为一类} 在使用的时候, 进行合并操作: 123scanf(&quot;%d%d&quot;, &amp;a, &amp;b);int x = par[a], y = par[b];if (x != y) par[x] = y; 并查集提高了查找的速度，但是也有其局限性。比如并查集判断图中是否有连通环，只能针对一个图下。来看 LeetCode[785] Is Graph Bipartite，这道题就不能用并查集做，因为两个不连通有环图图和一个单线的无环图，他们的并查集结果都是2,无法区分。 所以这道题要检查图中是否存在环，只能使用深度优先搜索： 12345678910111213boolean isCycle(int course) { if(localMarked[course]) return true; if(globalMarked[course]) return false; globalMarked[course] = true; localMarked[course] = true; if(graph[course]!=null)for(int pre : graph[course]) { if(isCycle(pre)) { return false; } } localMarked[course] = false; return false;} 例题：LeetCode 1489：找到最小生成树里的关键边和伪关键边先找关键边，再找伪关键边，剩下的都是非关键边。关键边是所有最小生成树边集合的交集，如果被去掉了，则最小生成树的权值和会增加。伪关键边是所有最小生成树边集合-关键边集合的结果。判断伪关键边的方法是： 如果此边是关键边，则其不是伪关键边； 否则，如果提前将关键边的两点连通，之后计算出的最小生成树权值如不变，则说明是伪关键边，若变化（增大），则说明是非关键边。 四、深度优先搜索与广度有限搜索五、拓扑排序4.1 拓扑排序判断是否有环使用拓扑排序可以判断有向图和无向图中是否有环。 判断有向图是否有环的步骤：Step 1：求出图中所有结点的入度Step 2：将所有入度=0的结点入队Step 3：当队列不为空时，不断弹出队首元素。将队首元素指向的相邻节点的入度-1（相当于从图中去掉这个结点和它的所有出度），当相邻节点的入度减至0时，将该相邻结点入队。Step 4：循环结束时判断已经访问的结点数是否等于n。如果等于则说明所有结点都被去掉了，图中不存在环;反之，说明存在环。 判断无向图是否有环的步骤：Step 1：求出图中所有节点的度Step 2：将所有度&lt;=1的结点入队（独立结点的度为0）Step 3：当队列不为空时，弹出队首元素。将与队首元素相邻节点的度-1（相当于从图中去掉这个结点和它的相邻边），如果相邻节点的度变为1,则将相邻结点入队。Step 4：循环结束时判断已经访问的结点数是否等于n。如果等于则说明所有结点都被去掉了，图中不存在环；反之，说明存在环。 例题： LC 207 课程表 4.2 拓扑排序的遍历顺序拓扑排序的遍历顺序不止一种，所以返回其中一个即可。使用bfs算法进行遍历，返回存储在数组中的访问路径。","link":"/2017-07-17-minimal-spanning-tree/"},{"title":"Computer emulation of reverberation using MATLAB or Python","text":"Abstract: Reverberation, in psychoacoustics and acoustics, is a persistence of sound after the sound is produced[1]Definition. It is a common sense that reverberation in the nature is usually accompanyed with other forms of background noise. In order to academically analyse this phenomenon better, Methods of generating reverberation by computer techniques are explored in this article. 摘要： 在声学和心理声学领域，混响被定义为室内声源停止发声后仍然存在的声延续现象。由于在自然界中混杂了各种背景噪音，这对于混响的单纯性研究造成很大困难。为了更加方便研究，本文探究了电脑产生声音信号的方法，然后和冲激响应函数做卷积来模拟出混响的效果。 The remainder of this paper is organized as follows. Section I introduces the background knowledge underpinning this article. Section II proposes the theories that support our evaluation. Section III reports the implementation process of emulation of reverberation. Section IV tests our experimental results and conclude this article。 I. Prerequisites数学基础这里我们先来复习一下卷积运算的一些内容。假设有两个离散序列u和v，那么我们在第k个位置求卷积（convulsion）的公式就可以写成：其中，j和k+1-j都要保证有意义。 j_{min} - 1 \\leq k \\leq j_{max} + 1物理基础声音是一种在空气中传播的机械波。波在遇到障碍的时候，会同时发生入射，反射和衍射。我们考虑的是声波遇到墙面反射回接收器，这就是混响的产生。 编程基础MATLAB子图构图函数subplot，绘制柱状图函数stem。 Python比如，下面是一段MATLAB代码 1234567891011121314x = [1, 2, 0, -1, 3, 2];ix = -2:3;h = [1, -1, 1];ih = 0:2;iy = ix(1) - 1 : ix( length(ix) ) + 1;y = conv(x, h);subplot(2, 2, 1),stem(ix, x, &apos;fill&apos;, &apos;r&apos;, &apos;LineWidth&apos;, 2), xlabel(&apos;i_x&apos;), ylabel(&apos;x&apos;), grid on;subplot(2, 2, 2),stem(ih, h, &apos;fill&apos;, &apos;b&apos;, &apos;LineWidth&apos;, 2), xlabel(&apos;i_h&apos;), ylabel(&apos;h&apos;), grid on;subplot(2, 2, 3:4),stem(iy, y, &apos;fill&apos;, &apos;m&apos;, &apos;LineWidth&apos;, 2), xlabel(&apos;i_y&apos;), ylabel(&apos;y&apos;), grid on; 在泛函分析中，卷积是通过两个函数f和g生成第三个函数的数学运算。f成为表征函数，g成为乘积函数。在信号处理中，任何一个系统的输出都可以看成是输入信号和系统冲击响应的卷积。 II. Theorems underlying computer emulationreverberation timeWe have an empirical equation from Prof. W.C.: III. Simple experimentsIV. Results &amp; Conclusions Definition. https://books.google.com/books?id=BC9XvWUzxlkC&amp;printsec=frontcover&amp;dq=9781588905208&amp;hl=zh-CN&amp;sa=X&amp;ved=0ahUKEwiyjNyrt5vbAhVHzGMKHaFmD4EQ6AEIKDAA#v=onepage&amp;q&amp;f=false “Audiology: Treatment” ↩","link":"/2018-05-30-generate-reverberation-using-MATLAB-or-Python/"},{"title":"How to install macOS High Sierra on VMware Workstation 14","text":"Lately I installed macOS High Sierra on VMware workstation 14. After installing it, I found a problem when I opened my other virtual machines as the following: 1Could not get vmci driver version: The handle is invalid. You have an incorrect version of driver &apos;vmci.sys&apos;. Try reinstalling VMware Workstation. Module &apos;DevicePowerOn&apos; power on failed. Failed to start the virtual machine. That’s a result of config change when we install the unlocker. A quick and dirty workaround would be to set 1vmci0.present = &quot;false&quot; in the .vmx file. Without details thats all I can say. A wierd problem of display resolutionI faced another problem in displaying resolution. The resolution of my monitor is $1920\\times 1080$. But my macOS vitual machine can only display a low level resolution, say $800\\times600$. The new version of VMware Tools might not work well, we need to uninstall it and then find an older version. Link: https://pan.baidu.com/s/151RAvr89Y7aD_rh9zdBH-w Pass: 6f3b Apple ID problemInstalling software from AppStore requires password. It might not be easy to download software from AppleStore as we don’t have a device ID. However, if the virtual machine use NAT linking to the Internet, The device ID will be incorrectly recognized and thus Apple ID cannot be passed. So we need to use bridge way to get accesss to the Internet. AppendixWhen I finally finished installing Xcode and gcc and then compile my c++ file. A error called “‘malloc.h’ file not found” really frightened me. And this error on MacGcc might keep me away from macOS, haha.","link":"/2018-06-22-macOS-High-Sierra-VM-installation/"},{"title":"Hexo Themes Configuration and Polishment","text":"Hexo博客支持MathJax渲染，只需要做一些简单的安装和配置。 Hexo的配置1npm install hexo-math --save 开启数学公式支持第一种方法：在next主题的文件夹下的_config.yml（不是hexo文件夹下的_config.yml）找到如下语句： 123# Math Equations Render Supportmath: enable: true 将enable修改为true 第二种方法：在加入了LaTeX数学公式的文章开头加入声明 mathjax: true 数学公式使用方法：在两个双dollar符中输入latex数学公式 两种配置文件的区分站点配置文件：Hexo博客根目录下的 _config.yml主题配置文件：./themes/主题名/_config.yml 首页置顶文章功能12npm install hexo-generator-topindex --savenpm uninstall hexo-generator-index --save 通过在文章中添加 top: 数值 来设置优先值，默认优先值为0。 Markdown与MathJax冲突问题解决网上有些做法是在写LaTeX的时候加入逃逸字符，但是这样做使得LaTeX只能在Markdown上渲染，在tex文件中还是要改回正常的状态，这样不具备拓展性。可以通过更改渲染引擎达到解决冲突的目的。 12npm uninstall hexo-renderer-marked --savenpm install hexo-renderer-kramed --save hexo-renderer-marked是Hexo自带的默认渲染引擎（注意，如果使用了其他的渲染插件，请卸载对应的插件），没有针对MathJax的改进。而hexo-renderer-kramed这个渲染插件针对MathJax支持进行了改进，对于Markdown和MathJax会分别渲染。尽管如此，对于行内公式有时还是会出现误将下划线识别为 Markdown 语法的情况。这时需要参考官方文档修改 escape 字符：https://hexo-guide.readthedocs.io/zh_CN/latest/theme/[NexT]%E9%85%8D%E7%BD%AEMathJax.html NexT主题的配置修改字体大小 / 修改文章页面宽度在next主题文件夹下, 进入 source/css/_variables/base.styl, 找到 12// Font size$font-size-base = 14px 将 14px 的大小修改为16或者18px. 修改文章页面宽度 1$content-desktop = 700px to 800 px or larger. 图片居中显示Hexo中使用的markdown渲染引擎为 marked. 想让图片居中显示, 可以修改主题渲染文件. 修改底部#标签为图标网站根目录下 themes\\next\\layout_macro\\post.swig 文件.搜索 rel=&quot;tag&quot;&gt;#, 将 # 替换成图标 &lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt;. 将阅读次数修改为热度进入 /themes/next/layout/_macro/post.swig 文件, 搜索 LeanCloud, 在 &lt;span class=&quot;leancloud-visitors-count&quot;&gt;&lt;/span&gt; 后添加 &lt;span&gt;℃&lt;/span&gt;, 然后再将 /themes/next/languages/zh-CN.yml 文件中post:框下views:阅读次数 修改为 views:热度. 添加字数统计安装字数统计插件 1npm install hexo-symbols-count-time --save 在主题配置文件中设置: 12345678# Post wordcount display settings# Dependencies: https://github.com/theme-next/hexo-symbols-count-timesymbols_count_time: separated_meta: true item_text_post: true item_text_total: false awl: 2 wpm: 275 在站点配置文件中设置: 12345symbols_count_time: symbols: true time: true total_symbols: true total_time: true If you want to add the word after the counting numbers like the following: open this file your blog dir/themes/next/layout/_macro/post.swig and find 123&lt;span title=&quot;{{ __(&apos;symbols_count_time.count&apos;) }}&quot;&gt;{##}{{ symbolsCount(post.content) }}{##} 字&lt;/span&gt; like this. 在 Github Pages 中添加 gitalk 评论功能在 Github 中新建一个 OAuth Applications, 记住 client_id, client_secret. 然后在 next 主题配置文件中添加 1234567891011121314# Gitalk# Demo: https://gitalk.github.iogitalk: enable: true github_id: BillyStudio # GitHub repo owner repo: Blog-de-Shane # Repository name to store issues client_id: 你的client_id # GitHub Application Client ID client_secret: 你的client_secret # GitHub Application Client Secret admin_user: BillyStudio # GitHub repo owner and collaborators, only these guys can initialize gitHub issues distraction_free_mode: true # Facebook-like distraction free mode # Gitalk&apos;s display language depends on user&apos;s browser or system environment # If you want everyone visiting your site to see a uniform language, you can set a force language value # Available values: en | es-ES | fr | ru | zh-CN | zh-TW language: 这样默认评论框就开启了，如果想关闭它，则在文章标签中设置： comments: false 就可以了。 取消toc栏的自动编号https://blog.guaoxiaohei.com/posts/Hexo-Level/ Minos主题的配置配置Minos主题的目的是为了写双语博客。（Current Supported Hexo version is v3.6.0） 1.在themes文件夹下： 1git clone https://github.com/ppoffice/hexo-theme-minos.git minos 2.修改语言配置，在minos文件夹下 1cp _config.yml.example _config.yml 编辑_config.yml文件下menu项，保留自己想要的部分： 12345# Navigation bar menu links.menu: Categories: /categories Tags: /tags About: /about 12cp _config.yml _config.en.ymlcp _config.yml _config.zh-cn.yml 在_config.zh-cn.yml中修改中文菜单栏： 12345# Navigation bar menu links.menu: 分类: /zh-cn/categories 标记: /zh-cn/tags 关于: /zh-cn/about 在minos/commons文件夹中，将languages.ejs中的&lt;%- partial(&apos;common/languages&apos;) %&gt;剪切，放到navbar.ejs的对应位置 3.修改文件布局在_post文件夹下新建zh-cn文件夹，将原md文件和文件夹拷贝过去；在source文件夹下新建zh-cn文件夹，将about、categories、tags等文件夹拷贝过去 4.hexo s尝试启动 1234ERROR Package hexo-generator-index is not installed.ERROR Package hexo-renderer-marked is not installed.ERROR Package hexo-renderer-sass is not installed.ERROR Please install the missing dependencies in the root directory of your Hexo site. 安装所需依赖： 123npm install hexo-generator-indexnpm install hexo-renderer-markednpm install hexo-renderer-sass","link":"/2018-06-23-hexo-next-mathjax-rendering/"},{"title":"Linux execve函数","text":"在介绍execve函数之前，我们先介绍exec函数。 execexec用被执行的程序完全替换调用它的程序的影像。fork创建一个新的进程就产生了一个新的PID，exec启动一个新程序，替换原有的进程，因此这个新的被exec执行的进程的PID不会改变，和调用exec函数的进程一样。 execveexecve（参数1，参数2，参数3），头文件在unistd.h 参数1：命令所在路径 参数2：命令的集合 参数3：传递给执行文件的环境变量集 经典shellcode实例： 123456789#include &lt;stdio.h&gt;int main(int argc, char const *argv[]){ char * name[2]; name[0] = &quot;/bin/sh&quot;; name[1] = NULL; execve(name[0], name, NULL); return 0;}","link":"/2018-06-26-linux-function-execve/"},{"title":"Linux系统静态库与共享库","text":"This article mainly introduces the statics library and shared library on Linux and has done some experiments for better comprehension. 静态库(static library)Static library，又称为归档文件(archive). 在Linux系统中一般以.a作为后缀名.用以声明除了C语言标准库之外的库文件的目录. 这个声明是静态的,也就是说,当许多应用程序同时运行并且都是用来自同一个函数库的函数时,在内存中就会存有这个函数的多份拷贝.这将大量消耗内存和磁盘空间. 类似与Windows中的静态链接库.lib文件 共享库(shared library / dynamic library)共享库克服了静态库的不足,典型的后缀名是.so。类似与Windows下的dll文件。 In Arch Linux, the paths of shared library files are declared in /etc/ld.so.conf. You can add your specified path into this file and then using sudo ldconfig for generating their so-name files if there is update of these library files happening. The naming suggestion of Linux shared libraryEvery shared library has its filename and so-name(Short for shared Object name, 简单共享名). The following naming rules are commonly obeyed:filename: libname.so.x.y.zso-name: libname.so.xx 代表了主版本号，主版本号之间不同通常是无法相互兼容的。y 代表次版本号，可以向下兼容。z 代表发布版本号，之间可以相互兼容。 当运行 ldconfig 命令后，系统会为制定目录下面的动态库文件新建与 so-name 同名的软链接。当编译完程序需要链接的时候，查找的就是这些对应的 so-name。可以用环境变量 LD_LIBRARY_PATH 指定so-name files所在的目录。 First experimentSupposing that we want to create a shared library for calling function hello declared by hello.h, we start by writing our code here: 1234567// hello.c# include &lt;stdio.h&gt;void hello(const char* name){ printf(&quot;hello %s!\\n&quot;, name);} 12// hello.hvoid hello(const char* name); Then we compile it by gcc to generate shared lib: 1gcc hello.c -fPIC -shared -Wl,-soname,libhello.so.0 -o libhello.so.0.0.1 Let me explain every option of the above command. -fPIC means generating position independent code, i.e., address jumping is relative rather than absolute. This option is required in generating library file because lib file usually locates at some place and is called by programs from other places, or the program is generated at some place but is moved to other path. -shared -o indicates a shared library file .so.x.y.z. And -Wl,-soname,libhello.so.0 specifies its so-name as ‘libhello.so.0’. Now we check our files and should see a new file like this picture: Next we update by ldconfig 1ldconfig -n shared-library/ Note that -n specifies the dir only being processed(Because we only created one lib file under shared-library, it has no need to update all). If you have added the path into /etc/ld.so.conf, you can also simply run sudo ldconfig and see the same change: As we can see, the so-name symbolic link has been created. Now we can test this new lib by writing a test code: 12345678// main.c#include &quot;hello.h&quot;int main(){ hello(&quot;handy&quot;); return 0;} Then we create a symbolic link to the so-name file in order for gcc compiler specification: Now we make these three stages of shared library prepared(.so, .so.x and .so.x.y.z), then we compile and link, with relevent paths specified: 1gcc main.c -I /home/shane/Experiments/shared-library/ -L. -lhello -o main where -I specifies the path of hello.h, -L for the path of libhello.so. Since we have specified the path of so-name to gcc compiler but have not done that for Linux executer(one of the features of shared library), an error of failing to find the so-name file appears when running the program. So we use LD_LIBRARY_PATH to set it and run again: 1export LD_LIBRARY_PATH=&quot;$HOME/Experiments/shared-library/&quot; More exploration用ldd查看其依赖的动态库:我们发现main程序依赖的动态库名字是libhello.so.0，既不是libhello.so也不是libhello.so.0.0.1。其实在生成main程序的过程有如下几步： 链接器通过编译命令-L. -lhello在当前目录查找libhello.so文件 读取libhello.so链接指向的实际文件，这里是libhello.so.0.0.1 读取libhello.so.0.0.1中的SONAME，这里是libhello.so.0 将libhello.so.0记录到main程序的二进制数据里 所以你看，程序并不知道 so-name file 在哪里，我们当然要在运行程序前 specify 一波了。 Second experimentNow we emulate the situation of updating lib files. Suppose that we modify our code: 1234567// hello.c# include &lt;stdio.h&gt;void hello(const char* name){ printf(&quot;hello %s, welcome to the world!\\n&quot;, name);} Since the change is trivial, we keep the so-name when compiling: 1gcc hello.c -fPIC -shared -Wl,-soname,libhello.so.0 -o libhello.so.0.0.2 Now there are two versions exist, we update by ldconfig and see the change:The so-name file link to the new version of lib file. And we run the program and see the immediate change: So you see, this is the significance or the essence of so-name mechanism. We don’t have to re-link the program after modifying the shared library code. SummaryIn practical production, the compilation and execution are usually departed. Generally: specify the so-name when generating shared lib files Ensure the availability of libXXX.so file by -L and -l when linking executable program Ensure the existence of shared lib file and use LD_LIBRARY_PATH to specify the directory of its so-name link when running program ReferencesLinux程序编译链接动态库版本的问题: https://blog.csdn.net/littlewhite1989/article/details/47726011","link":"/2018-06-26-linux-static-library-and-shared-library/"},{"title":"数据结构与算法笔记 | 字符串","text":"算法题中经常会遇到字符串处理题，可易可难。 子串和子序列问题辨析：子串和子序列的区别？一般说来，串要求是必须是紧挨着的，而序列允许跳跃，只要保持顺序就可以。下面来看两类经典的子串和子序列处理问题 1. 最长回文子串和最长回文子序列1.1 最长回文子串长度当一个字符串和他的逆序串完全相等时，我们称这是一个回文串(Palindrome)，如 “malayalam”, “dad”, “appa”等。输入一个字符串，输出其最长回文子串的长度来源：POJ 3974，SPOJ-IPS 奇数串与偶数串的处理：如果采取的是逆序之后和原子串比较的办法, 对于奇数子串和偶数子串可以统一处理，但由于回文的位置不定，需要遍历所有字符串所有位置一一进行逆序，复杂度比较高。故一般思路应是从中间往两边扩散的方法来进行判定. 注意从中间开始往两边扩散的方法判定时奇数串和偶数串的判定标准是不一样的. 比如对于一个奇数回文串 madam, 除去中间的 d 字符, 剩下的两两匹配. 对于一个偶数回文串, 如 elle, 都是两两匹配的. 处理奇串和偶串总结大致有以下三种方法： 第一种办法最直接，就是将奇数串与偶数串使用两段语句，分开来处理。 第二种办法是加入特殊字符进行填充，将奇数串和偶数串都转化为奇数串。 1234567891011public int getPalindromeLength(String str) { // 加入特殊符号 &apos;#&apos; StringBuilder builder = new StringBuilder(); builder.append(&apos;#&apos;); for(char c : str) { builder.append(c); builder.append(&apos;#&apos;); } // 统一处理 ......} 第三种办法利用到了一个特性，也就是偶数串最中间的两个字母一定是相同的，所以我们在循环的过程中判断相邻两个字符串是否相等，来统一识别出奇数串和偶数串。 123for (int i = 0, l, r; i &lt; str_len; ++i) { // 循环数组 for (l=i; s[i]==s[i+1];) ++i; // 定位 i 的位置，r初始便可设置为i+1} 第三种方法的判断方式最为简洁，但是复杂度没有变化，仍然属于 $O(n^2)$ 级别 选择好中心后，需要两个指针分别向左和向右扩散。扩散方式也有两种，一种是+1扩散，另一种是曼彻斯特算法，将在下一部分介绍，这里的解一就采用+1扩散的方式。 解： 12345678910111213141516171819202122#include &lt;bits/stdc++.h&gt;using namespace std;int longestPalindrome(string);int main() { string s = &quot;cbbca&quot;; int ans = longestPalindrome(s); printf(&quot;longest length of Palindrome %s is %d\\n&quot;, s.c_str(), ans); return 0;}int longestPalindrome(string s) { int longest = -1; for(int i = 0, l, r; i &lt; s.size(); ++i) { for(l = i; i+1&lt;s.size() &amp;&amp; s[i]==s[i+1]; ++i); for(r = i; l&gt;=0 &amp;&amp; r&lt;s.size() &amp;&amp; s[l]==s[r]; --l, ++r); // +1 扩散 int palindrome = r-l-1; longest = longest &gt; palindrome ? longest : palindrome; } return longest;} 1.2 寻找最大子串从中间向两边扩散:一种方法是从中间开始向两边扩展，见解一中的代码 12for(r = i; l&gt;=0 &amp;&amp; r&lt;s.size() &amp;&amp; s[l]==s[r]; --l, ++r);// l+1为回文子串位置，r-l-1即为回文子串长度 另一种办法叫做Manchester算法，这个算法在+1拓展的方法基础上加入了动态规划的思想，充分利用先前计算得到的结果进行合理跳步。具体阐述为： 初始化回文子串达到的右边界right = -1，该回文串中心id=-1， 遍历字符串，起始遍历位置 i = 0，回文串半径 r = 1 遍历过程中，如果 i 在 id 和 right 之间，以i为中心的最大子串半径 rad[i] &gt;= min(rad[2*id-i], right-i)（因为如果 rad[2*id-i]&lt;right-i ，则i和它对称点环境一样都在right内部，所以其半径相等，为 rad[2*id-i]；否则若 rad[2*id-i]&gt;right-i，则说明对称点突破了right内部环境，所以点 i 为中心的半径至少业为right-i ）；如果i在right右边则无法判断，只能暂时初始化为1，然后+1扩散进行判断。 当新的右边界i+r-1突破原有右边界right后，就可以将 i 作为新的最靠右的回文子串中心，即 right=i+r-1; id=i; 更新 rad[i] = r 遍历结束，得到以每个字符为中心的最长回文半径数组，数组中最大值即为所求最长回文子串长度。 由描述可知，该算法需要通过添加特殊字符的方式统一处理奇偶串，我们采用Manchester算法处理问题1.2 解：LeetCode链接： 1234567891011121314151617int[] rad = new int[str.length]; // rad[i] 表示以第i个字符为中心的回文子串半径int right = -1; // right表示遍历过程中回文子串所到达的右边界int id = -1; // 遍历过程中到达最远边界（right）的回文子串中心for(int i = 0; i &lt; str.length; ++i) { int r = 1; // 半径初始化为最小值1 if(i &lt;= right) { // 若此时遍历位置i小于之前遍历曾到达的最远边界，则可以借一波之前的成果 r = Math.min(rad[id]-i+id, rad[2*id-i]); // 半径起码为的最小值 } while(i-r &gt;= 0 &amp;&amp; i+r &lt;= str.length &amp;&amp; str[i-r]==str[i+r]) { ++r; } if(i+r-1 &gt; right) { right = i+r-1; id = i; } rad[i] = r;} 1.3 最长回文子序列长度子序列问题一般都会涉及到动态规划，动态规划表达式的构建是难点，好处是不用考虑奇偶串的统一的处理情况了。我们考虑构建二维dp数组，其中 dp[l][r] 表示左边界为l，右边界为r的最长回文子序列个数，则 dp[0][len-1] 即为所求。接下来分类讨论得到 dp[l][r] 的递推式，初始情况为 l==r， 此时dp[l][r]=1，此时可以将 l-- 和 r++，若 str[l-1]==str[r+1]，则可以继续推进，即dp[l-1][r+1] = dp[l][r]+2;否则若 str[l]!=str[r]，则等价于从[l-1,r] 和 [l,r+1] 范围内选出最大值，即 dp[l-1][r+1] = max(dp[l-1][r], dp[l][r+1])。令 l = l-1, r = r+1，得到 dp[l][r] 的递推公式： 12if(str[l] == str[r]) dp[l][r] = dp[l+1][r-1] + 2else dp[l][r] = max(dp[l][r-1], dp[l+1][r]) 遍历顺序应注意l是从大往小遍历，r是从小往大遍历。 解：LeetCode 516 12345678910111213141516171819202122class Solution {public: int longestPalindromeSubseq(string s) { int len = s.size(); if(len &lt;= 0) return len; int dp[len][len]; for(int i = 0; i &lt; len; ++i) { memset(dp[i], 0, len*sizeof(int)); } for(int l = s.size()-1; l &gt;= 0; --l) { dp[l][l] = 1; for(int r = l+1; r &lt; s.size(); ++r) { if(s[l] == s[r]) { dp[l][r] = dp[l+1][r-1] + 2; } else { dp[l][r] = std::max(dp[l][r-1], dp[l+1][r]); } } } return dp[0][len-1]; }}; 2. 最长公共子序列（Longest Common Sequence）和最长公共子串（Longest Common Substring）两个都可简称为LCS，最长公共子串和最长公共子序列都可以用动态规划解决。所不同的是，当串 s1[i]≠s2[j],i&gt;0,j&gt;0 时，公共子串的 dp[i][j]=0 而公共子序列的 dp[i][j]=max{dp[i-1][j],dp[i][j-1]}，最长公共子串需要用一个额外String变量存储，而最长公共子序列就是 dp[s1.len-1][s2.len-1]。下面是两个问题的动态规划算法实现 最长公共子序列 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152/** * longest common subsequence * @param s1 string字符串 the string * @param s2 string字符串 the string * @return string字符串 */public String LCS (String str1, String str2) { char[] s1 = str1.toCharArray(); char[] s2 = str2.toCharArray(); ArrayList&lt;ArrayList&lt;String&gt;&gt; dp = new ArrayList&lt;&gt;(s1.length); for(int i=0; i&lt;s1.length; ++i) { ArrayList&lt;String&gt; row = new ArrayList&lt;String&gt;(s2.length); for(int j=0; j&lt;s2.length; ++j) { String cs = null; if(i==0 &amp;&amp; j==0) { if(s1[i] == s2[j]) { cs = String.valueOf(s1[i]); } else { cs = &quot;&quot;; } row.add(j, cs); } else if(i==0) { if(s1[i] == s2[j]) { cs = String.valueOf(s1[i]); } else { cs = row.get(j-1); } row.add(j, cs); } else if(j==0) { if(s1[i] == s2[j]) { cs = String.valueOf(s1[i]); } else { cs = dp.get(i-1).get(j); } row.add(j, cs); } else { // i!=0,j!=0 if(s1[i] == s2[j]) { cs = dp.get(i-1).get(j-1) + s1[i]; } else if(dp.get(i-1).get(j).length() &gt; row.get(j-1).length()){ cs = dp.get(i-1).get(j); } else { cs = row.get(j-1); } row.add(j, cs); } } dp.add(i, row); } String lcs = dp.get(s1.length-1).get(s2.length-1); if(lcs.length() == 0) return &quot;-1&quot;; return lcs;} 最长公共子串 1234567891011121314151617181920212223242526272829303132333435363738394041/** * longest common substring * @param str1 string字符串 the string * @param str2 string字符串 the string * @return string字符串 */ public String LCS (String str1, String str2) { String lcs = &quot;&quot;; char[] s1 = str1.toCharArray(); char[] s2 = str2.toCharArray(); ArrayList&lt;ArrayList&lt;String&gt;&gt; dp = new ArrayList&lt;&gt;(s1.length); for(int i=0; i&lt;s1.length; ++i) { ArrayList&lt;String&gt; row = new ArrayList&lt;String&gt;(s2.length); for(int j=0; j&lt;s2.length; ++j) { String cs = null; if(i==0 || j==0) { if(s1[i] == s2[j]) { cs = String.valueOf(s1[i]); if(cs.length() &gt; lcs.length()) { lcs = cs; } } else { cs = &quot;&quot;; } row.add(j, cs); } else { // i!=0,j!=0 if(s1[i] == s2[j]) { cs = dp.get(i-1).get(j-1) + s1[i]; if(cs.length() &gt; lcs.length()) { lcs = cs; } } else { cs = &quot;&quot;; } row.add(j, cs); } } dp.add(i, row); } return lcs; } 大整数运算大整数运算方便Java具有优势，因为Java自带大整数处理的BigInteger类；而C/C++需要手动构建字符串，模拟手工运算来实现大整数的加减乘除。","link":"/2018-07-07-string-problems/"},{"title":"数据结构与算法笔记 | 树","text":"树结构在数据结构中有着举足轻重的地位。 1. 二叉搜索树二叉搜索树被誉为数据结构中的 “Hello World”，又被称为二叉排序树或二叉查找树。 二叉搜索树指的是树中结点的键按一定顺序排列的数据结构。它或者是一棵空树，或者是具有下列性质的二叉树： 若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值；若它的右子树不空，则右子树上所有结点的值均大于它的根结点的值。它的左、右子树也分别为二叉排序树。它没有键值相等的节点。 二叉查找树相比于其他数据结构的优势在于查找、插入的时间复杂度较低,均为O(log n)。二叉查找树是基础性数据结构，用于构建更为抽象的数据结构，如集合、multiset、关联数组等。 1.1 二叉搜索树的遍历由于，左子树的所有节点值&lt;根节点的值&lt;右子树的所有节点值，所以二叉搜索树的遍历采用DFS较多前序遍历：根节点-&gt;左子节点-&gt;右子节点中序遍历：左子节点-&gt;根节点-&gt;右子节点后序遍历：左子节点-&gt;右子节点-&gt;根节点 这里重点讲一下后序遍历，由于树都是从根到子树的顺序开始访问的，但是后续遍历需要将根节点放在最后访问。 123456789101112131415161718192021222324252627282930313233343536373839404142import java.util.*;public class Node { int val; Node left; Node right;}public class Main { // 左、右、根 public void postTraverse(Node root) { if(root == null) { return ; } Stack&lt;Node&gt; path = new Stack&lt;Node&gt;(); path.push(root); while(!path.isEmpty()) { Node node = path.pop(); while(node.left != null) { path.push(node.left); node = node.left; } if(node == null &amp;&amp; !path.isEmpty()) { node = path.pop(); } if(node.right != null) { path.push(node.right); continue ; } print(node); } return ; } public static void main(String[] args) { //Scanner in = new Scanner(System.in); //int a = in.nextInt(); //System.out.println(a); System.out.println(&quot;Hello World!&quot;); }} 既然这里都已经用到栈结构了，如果改成不用非递归方式的访问呢？ 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374import java.util.*;public class Node { public int value; public Node left; public Node right;}public class Main { // 左、右、根 public List&lt;Integer&gt; postTraverse(TreeNode root) { List&lt;Integer&gt; result = new LinkedList&lt;&gt;(); if(root == null) { return result; } Stack&lt;TreeNode&gt; stack = new Stack&lt;&gt;(); TreeNode currentNode = root; stack.push(currentNode); TreeNode previousNode = null; while(!stack.isEmpty()) { previousNode = currentNode; currentNode = stack.pop(); /* 三种情况： 1. 左右子树均未访问；2.左子树访问完，右子树没访问；3. 左右子树均已访问 对第1种情况，currentNode在下，previousNode在上 对第2种情况，previousNode在下，为currentNode的左子树 对第3种情况，previousNode在下，为currentNode的右子树 */ if(currentNode.left != previousNode &amp;&amp; currentNode.right != previousNode) { // 第1种情况，开始不断访问左子树，直至叶子节点 while(currentNode.left != null) { stack.push(currentNode); previousNode = currentNode; currentNode = currentNode.left; } // 此时currentNode即左节点 } else if (currentNode.right == previousNode){ // 第3种情况 result.add(currentNode.val); continue; } /* 两种情况： 1.currentNode为左节点，存在还没访问的右子树； 2.左子树访问完，无右子树,currentNode均不在栈中 对第1种情况，previousNode在上，currentNode在下，previousNode.left = currentNode 对第2种情况，currentNode.left = previousNode */ if(currentNode.right != null &amp;&amp; currentNode.right != previousNode) { // 右子树存在且还没访问 stack.push(currentNode); // 右子树的根节点压栈 stack.push(currentNode.right); } else { // 左右子树均已访问 result.add(currentNode.val); } } return result; } public static void main(String[] args) { Integer[] input = {5, 4, 7, 0, 3, 6, null, null, null, 1, 2}; TreeNode[] nodes = new TreeNode[input.length]; for(int i = input.length-1; i &gt;= 0; --i) { if(input[i] != null) { nodes[i] = new TreeNode(input[i]); if(2*i+1 &lt; input.length) { nodes[i].left = nodes[2*i+1]; } if(2*i+2 &lt; input.length) { nodes[i].right = nodes[2*i+2]; } } } TreeNodeTests test = new TreeNodeTests(); List&lt;Integer&gt; result = test.postTraverse(nodes[0]); System.out.println(result.stream().map(Objects::toString).collect(Collectors.joining(&quot;,&quot;))); }} 例题：Leetcode 98: Validate Binary Search Tree 1234567891011121314151617181920212223242526272829303132/** * Definition for a binary tree node. * public class TreeNode { * int val; * TreeNode left; * TreeNode right; * TreeNode() {} * TreeNode(int val) { this.val = val; } * TreeNode(int val, TreeNode left, TreeNode right) { * this.val = val; * this.left = left; * this.right = right; * } * } */class Solution { Integer prev_val; public boolean isValidBST(TreeNode root) { if(root == null) { return true; } if (isValidBST(root.left) == false){ return false; } if (prev_val != null &amp;&amp; prev_val &gt;= root.val) { return false; } prev_val = root.val; return isValidBST(root.right); }} 例题：牛客网: 二叉搜索树的后序遍历序列 123456789101112131415161718192021public class Solution { public boolean VerifySquenceOfBST(int [] sequence) { if(sequence.length == 0) return false; if(sequence.length&lt;=2) return true; boolean res = verify(sequence, 0, sequence.length-1); return res; } boolean verify(int[] s, int st, int end) { if(st &gt;= end) return true; int i=st; while(s[i] &lt; s[end]) ++i; int pivot = i; for(; i&lt;end; ++i) { if(s[i] &lt; s[end]) return false; } return verify(s, st, pivot-1) &amp; verify(s, pivot+1, end); }} 2. 平衡二叉树B+树MySQL中使用B+树建立索引。B+树比红黑树层数更少，查找速度更快，所以适合用来作为数据库索引的数据结构。 AVL树（一种自平衡二叉树）PAT 1066: Root of AVL Tree（25 分）An AVL tree is a self-balancing binary search tree. In an AVL tree, the heights of the two child subtrees of any node differ by at most one; if at any time they differ by more than one, rebalancing is done to restore this property. Figures 1-4 illustrate the rotation rules. Now given a sequence of insertions, you are supposed to tell the root of the resulting AVL tree. Input Specification:Each input file contains one test case. For each case, the first line contains a positive integer N (≤20) which is the total number of keys to be inserted. Then N distinct integer keys are given in the next line. All the numbers in a line are separated by a space. Output Specification:For each test case, print the root of the resulting AVL tree in one line. Sample Input 1:12588 70 61 96 120 Sample Output 1:170 Sample Input 2:12788 70 61 96 120 90 65 Sample Output 2:188 题目分析这道题要求根据输入数据构造一个 AVL 树. 最后输出树的根所保存的元素. 没有什么技巧, 要求会 AVL 的建立过程才行. 难点在于插入数据后不满足平衡条件时树的旋转. 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071#include&lt;bits/stdc++.h&gt;using namespace std;#define For(i,n) for(int i=0;i&lt;n;i++)struct Node{ int value; Node *left, *right; Node(int v) : value(v) { left = right = NULL; }};int getHeight(Node *root){ if (root == NULL) return 0; return max(getHeight(root-&gt;left), getHeight(root-&gt;right))+1;}Node *rotateLeft(Node *root){ Node *t = root-&gt;right; root-&gt;right = t-&gt;left; t-&gt;left = root; return t;}Node *rotateRight(Node *root){ Node *t = root-&gt;left; root-&gt;left = t-&gt;right; t-&gt;right = root; return t;}Node *rotateLeftRight(Node *root){ root-&gt;left = rotateLeft(root-&gt;left); return rotateRight(root);}Node *rotateRightLeft(Node *root){ root-&gt;right = rotateRight(root-&gt;right); return rotateLeft(root);}Node *insert(Node* root, int val){ if (root == NULL){ root = new Node(val); } else if (val &lt; root-&gt;value){ root-&gt;left = insert(root-&gt;left, val); if (getHeight(root-&gt;left)-getHeight(root-&gt;right) == 2){ root = val &lt; root-&gt;left-&gt;value ? rotateRight(root) : rotateLeftRight(root); } } else { root-&gt;right = insert(root-&gt;right, val); if (getHeight(root-&gt;right)-getHeight(root-&gt;left) == 2){ root = val &lt; root-&gt;right-&gt;value ? rotateRightLeft(root) : rotateLeft(root); } } return root;}int main(){ int N; scanf(&quot;%d&quot;, &amp;N); Node *root = NULL; For(i,N){ int val; scanf(&quot;%d&quot;, &amp;val); root = insert(root, val); } printf(&quot;%d\\n&quot;, root-&gt;value); return 0;} 3. 无根树与有根树来看一道无根树的题目.Centroid (SGU 134), 链接:https://cn.vjudge.net/problem/SGU-134 这道题给了一个树的重心的定义. 将这棵树上删除掉重心的时候, 剩余子树的节点数最大值是最小的, 换个表述也就是说剩下的子树之间是平衡的. 我们使用 dfs 来找出各个子树的节点数和节点数最大的子树. 任意找一个节点作为根节点, 遍历一遍就可以. 接下来求解剩余子树的节点数最大值就可以转化为求在这种树的构造下, 以某个节点为父节点的所有子树中节点数的最大值和除去该节点和这些子树外剩余的所有节点的个数相比较的最大值, 即 value = max(val[i], n-size[i]).","link":"/2018-07-14-binary-tree-data-structure/"},{"title":"面向对象程序设计笔记整理-1","text":"本文主要介绍面向对象的基本概念. 面向对象的定义维基百科上面给出的定义是: Object-oriented programming (OOP) is a programming paradigm based on the concept of “objects”, which may contain data, in the form of fields, often known as attributes; and code, in the form of procedures, often known as methods. 翻译: 面向对象编程 (OOP) 是一种基于”对象”概念的程序设计思想. 对象中可能包含字段形式的数据, 通常称为属性; 和处理程序的代码, 通常称为方法. 面向对象的三大特性1. 封装将项目封闭在一个物理或逻辑的包中。包只公开某些对外接口，屏蔽对细节的访问。java中使用四种访问修饰级别：public, default, protected, private 2. 继承软件复用的一种形式，在基类（父类）的基础上建立派生类（子类），添加新的属性或方法拓展其功能。 3. 多态通过同名不同方法，依赖于抽象方法，不依赖于具体方法。即调用相同方法和参数时，表现行为不同。如求图形的面积这个方法，对于三角形、正方形、圆形有不同的实现。","link":"/2018-07-15-OOP-note-1/"},{"title":"数据结构与算法笔记 | 杂项","text":"在刷算法题的时候, 不仅需要算法正确, 还要注意一些小的坑点, 才能保证程序结果的准确无误. long占几字节这个是不固定的，根据操作系数和处理器位数不同而不同，比如我的64位Archlinux上是8字节的，64位Win10上是4字节的。但是通常来说int是4字节，long long是8字节。所以在刷题时 long 是不被建议使用的。所以如果想使用固定8字节，一般用 long long 或者更进一步使用 int64_t 123#include &lt;stdint.h&gt;typedef int64_t ll;typedef uint64_t ull; 想使用固定4字节，一般用int或者更进一步使用 int32_t 123#include &lt;stdint.h&gt;typedef int32_t int;typedef uint32_t uint; 输入输出重定向1./a.out &lt; in &gt; out 输入重定向也可以用管道的方式： 1cat in | ./a.out OJ 的运算能力以LeetCode为例，下面的算法在约 1x10^7 处（10930287）超时 1234567891011121314typedef long long ll;class Solution {public: int findIntegers(int n) { int ans = 1; for(ll i = 1; i &lt;= n; ++i) { if((i &amp; i&lt;&lt;1) == 0) { ans ++; } } return ans; }}; OJ中的坑输入输出类这是最容易犯的一类错误. 比如OJ说输入是 a seperate line, 即使在样例输入中的字符串中间没有空格, 也不能保证 OJ 上的例子中字符串中间也是没有空格的. 所以这个时候如果用 scanf 读取可能只能读到一个片段, 应该用 fgets 或者是 getline. 例: UVA-10405: https://vjudge.net/problem/UVA-10405 还有输入的组数问题，比如下面的描述： There are a lot of cases. In each case, there is an integer N representing the number of integers to find. INPUT: 1232 3 4 这种情况下要用 while(scanf(&quot;%d&quot;, &amp;N) != EOF) 去读取。因为有多个cases，样例中只是展示了一个case。例 HDU 2.1.2：http://acm.hdu.edu.cn/game/entry/problem/show.php?chapterid=2&amp;sectionid=1&amp;problemid=2 而下面的描述： 输入数据的第一行为一个正整数T，表示测试数据的组数。然后是T组数据… INPUT: 123226501/6335 18468/4229359/11479 15725/19170 这种情况下要用 scanf(&quot;%d&quot;, &amp;T); 读取，使用上一种读取方式反而可能会出现 Time Limit Exceeded(读取超时) 或 Output Limit Exceeded(读取空行导致死循环输出) 的错误。例 HDU 2.1.3：http://acm.hdu.edu.cn/game/entry/problem/show.php?chapterid=2&amp;sectionid=1&amp;problemid=3 合法数据类牛客网上有一道求树的高度的题, 明明说是一棵合法的二叉树, 可是在输入数据中却包含了不合法的多叉树情况. 这是需要忽略三叉之后的情况. https://www.nowcoder.com/activity/oj?title=%E6%A0%91%E7%9A%84%E9%AB%98%E5%BA%A6&amp;page=1 读题不仔细类PAT Advanced 1002: A+B for polynomials 题目中明确说了NK到N1的指数范围是非负的, 但是我误以为系数a的范围也是非负的. 导致第二个测试点一直过不去… 其实系数的范围可正也可负. 生活常识类排名问题PAT Advanced 1012: The Best Rank给A B C三人排名时如果分数 A = B &gt; C, 那么排名为 1,1,3 题目描述不清类PAT 1032 Sharing题目中明明说了, The address of a node is a 5-digit positive integer. 可是实际上包含五位全部为 0 的合法地址… 也就是说在判定链表是否结束的时候, 使用 (next &gt; 0) 是不行的, 要用 (next &gt;= 0). 也许是出题人理解的 positive integer 和我们有点不太一样… PAT 1038 Recover the Smallest Number题目中说最后结果不能是0, 实际上有0的数据. 我在代码里写了一行测试 12345For(i,N){ scanf(&quot;%s&quot;, segments[i]); if (atoi(segments[i]) == 0) {--i;--N;}}if (N==0) {puts(&quot;0&quot;); return 1;} 结果果然产生了非零返回… 让我很是气愤. 针对C语言全局变量的坑C语言对全局变量会初始化为0，但对于LeetCode这样的在线做题网站，一个函数可能调用多次，在调用下一次的时候全局变量就已经不是0了，所以全局变量还是要在函数当中重新初始化赋值。","link":"/2018-07-16-OJ-nasty-problems/"},{"title":"数据结构与算法笔记 | 查找与排序","text":"如果只考一道最基本的数据结构与算法题, 那他一定是道排序题. —- 鲁迅 一、交换排序交换排序是一种借助记录交换进行排序的方法。比较著名的有冒泡排序和快速排序。 1.1 冒泡排序i 从 0 开始遍历到 n，相邻两个元素 r[i] 和 r[i+1] 进行比较, 将较大的元素交换到后面, 这样经过一次 i 的遍历之后, 最大的元素就会沉底. 然后 i 从 0 开始遍历到 n-1, 同样的方法, 第二大的元素就会沉底. 依次类推. 时间复杂度 O(n^2) 1.2 快速排序经典的快速排序方法首先选定某个数 (如第一个元素) 作为基准(Pivot), 接下来通过 key 的逆序比较(用 j 遍历)和正序比较 (用 i 遍历) 找出倒着数比基准小的和正着数比基准大的数, 然后把比基准小放到 i 的位置, 比基准大的放到 j 的位置, 当 i == j 时, 就找到了基准所在的位置。partition函数中，数组arr从下标l到下标r进行一次遍历，返回pivot所插入的位置。双指针遍历的代码描述有如下两种方式(assert arr.length &gt;= r+1) 1234567891011121314// 交换法int partition(int[] arr, int l, int r){ int pivot = arr[l]; int i = l, j = r; while(l &lt; r) { while(i &lt; r &amp;&amp; arr[i] &lt;= pivot) {++i;} while(j &gt; l &amp;&amp; arr[j] &gt;= pivot) {--j;} if(i &gt;= j) { break;} swap(arr, i, j); } swap(arr, l, j); return j;} 123456789101112// 填坑法int partition2(int* arr, int l, int r) { int pivot = arr[l]; while(l &lt; r) { while(r &gt; l &amp;&amp; arr[r] &gt;= pivot) --r; arr[l] = arr[r]; while(l &lt; r &amp;&amp; arr[l] &lt;= pivot) ++l; arr[r] = arr[l]; } arr[l] = pivot; return l;} 注意，这里的参数r是闭区间。partion函数分成了基准位置前和基准位置后两块, 再对其递归排序. 时间复杂度 O(nlog n) 1234567void quicksort(int[] arr, int l, int r) { if(l &lt;= r) { int pos = partition(arr, l, r); quicksort(arr, l, pos-1); quicksort(arr, pos+1, r); }} 利用快速排序的性质，可以解决一些问题，比如：利用双指针遍历一次后，pivot插入了i的位置，在pivot之前有i个数比pivot小。可以通过这个特性找最小的K个数： 牛客网 最小的K个数 二、选择排序选择排序是最符合人们思维习惯的一种排序方法. 也是考试中的常见出题范围.选择排序的基本思想是先选出最小 (或最大) 的元素, 然后在剩余的元素中选出最小 (或大) 的元素作为第二个排序好的元素, 以此类推. 选择排序目前主要分为两大类, 即直接选择排序和堆排序. 2.1 直接选择排序先从头开始遍历, 记录最小元素对应的序号 j, 遍历结束后边将第一个元素和j对应元素互换, 这样就将最小的元素放到了第一个位置. 然后从第二个元素开始遍历, 类似地就能找出第二小的元素. 这样经过 n-1 次遍历, 排序结束, 时间复杂度 O(n^2), 属于稳定排序. 2.2 堆排序如果一棵完全二叉树的每个子树, 根节点都是最大的, 那么称为大根堆, 如果根节点都是最小的, 那么称为小根堆。完全二叉树可以用数组表示，所以堆排序虽然输入的是数组，但其逻辑结构是完全二叉树。大根堆用于升序排列，小根堆用于降序排列。 例题：牛客网: 最小的K个数 1234567891011121314151617181920212223242526272829303132333435import java.util.*;public class Solution { // 对含有n个节点的完全二叉树中的第i个节点及其子节点构造堆 void heapify(int[] tree, int n, int i) { if(i &gt;= n) { return ; } int min = i; if(2*i+1&lt;n &amp;&amp; tree[2*i+1] &lt; tree[i]) { min = 2*i+1; } if(2*i+2&lt;n &amp;&amp; tree[2*i+2] &lt; tree[min]) { min = 2*i+2; } if(min != i) {//swap int temp=tree[i];tree[i]=tree[min];tree[min]=temp; } if(min==2*i+1) heapify(tree, n, 2*i+1); else if(min==2*i+2) heapify(tree, n, 2*i+2); } public ArrayList&lt;Integer&gt; GetLeastNumbers_Solution(int [] input, int k) { ArrayList&lt;Integer&gt; res = new ArrayList&lt;&gt;(); int n = input.length; if(k &gt; n) return res; for(int i=n/2-1; i&gt;=0; --i) { heapify(input, n, i); } for(int i=0; i&lt;k; ++i) { res.add(input[0]); input[0] = input[n-1-i]; heapify(input, n-1-i, 0); } return res; }} 另解：由于Java的PriorityQueue实现了堆结构，所以可以利用该数据结构解题： 1234567891011121314151617import java.util.*;public class Solution { public ArrayList&lt;Integer&gt; GetLeastNumbers_Solution(int [] input, int k) { ArrayList&lt;Integer&gt; res = new ArrayList&lt;&gt;(); PriorityQueue&lt;Integer&gt; pq = new PriorityQueue&lt;&gt;( (o1, o2) -&gt; o1-o2); if(k &gt; input.length) { return res; } for(int i=0; i&lt;input.length; ++i) { pq.add(input[i]); if(i+k&gt;=input.length) { res.add(pq.poll()); } } return res; }} 2.3 归并排序算法复杂度 O(NlogN) 利用归并排序解决数组逆序对问题 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253public class Solution { long P = 0; public int InversePairs(int [] array) { if(null==array || array.length&lt;=1) return 0; mergeSort(array, 0, array.length/2); mergeSort(array, array.length/2, array.length); merge(array, 0, array.length/2, array.length); return (int)(P % 1000000007); } void mergeSort(int[] array, int l, int r) { if(l&gt;=r-1) { return ;} int mid = l + (r-l)/2; mergeSort(array, l, mid); mergeSort(array, mid, r); merge(array, l, mid, r); } void merge(int[] arr, int l, int m, int r) { if(l &gt;= r-1) { return ;} int[] temp = new int[r-l]; int temp_i = 0; int i = l, j = m; while(i&lt;m &amp;&amp; j&lt;r) { if(arr[i] &lt; arr[j]) { temp[temp_i] = arr[i]; ++i; } else {//arr[i] &gt; arr[j] temp[temp_i] = arr[j]; P += m-i; ++j; } ++temp_i; } if(i == m) { while(j&lt;r) { temp[temp_i] = arr[j]; ++j; ++temp_i; } } else {//i&lt;m, j==m while(i&lt;m) { temp[temp_i] = arr[i]; ++i; ++temp_i; } } // 赋值 for(temp_i = 0; temp_i &lt; temp.length; ++temp_i) { arr[l+temp_i] = temp[temp_i]; } }} 2.5 排序算法的稳定性稳定排序通俗地讲就是能保证排序前2个相等的数其在序列的前后位置顺序和排序后它们两个的前后位置顺序相同。堆排序、快速排序、希尔排序、直接选择排序是不稳定的排序算法，而冒泡排序、直接插入排序、折半插入排序、归并排序是稳定的排序算法。 2.6 部分有序数组的排序这属于归并排序的一个变种。对于部分有序数组，在一个part内部是完全有序的，如果判断该部分part数量numOfParts为1，则说明是完全有序，可以直接return跳过。归并的过程只对不同part进行merge 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960public class PartMergeSort { public static void merge(int[] a, int low, int mid, int high) { int[] temp = new int[high - low]; int i = low;// 左指针 int j = mid;// 右指针 int k = 0; // 把较小的数先移到新数组中 while (i &lt; mid &amp;&amp; j &lt; high) { if (a[i] &lt; a[j]) { temp[k++] = a[i++]; } else { temp[k++] = a[j++]; } } // 把左边剩余的数移入数组 while (i &lt; mid) { temp[k++] = a[i++]; } // 把右边边剩余的数移入数组 while (j &lt; high) { temp[k++] = a[j++]; } // 把新数组中的数覆盖nums数组 for (int k2 = 0; k2 &lt; temp.length; k2++) { a[k2 + low] = temp[k2]; } } public static void mergeSort(int[] a, int low, int high, int partLength, int numOfParts) { if(numOfParts &lt;= 1) { return ; } int mid = low + partLength*(numOfParts/2); if (low &lt; high) { // 左边 mergeSort(a, low, mid, partLength, numOfParts/2); // 右边 mergeSort(a, mid, high, partLength, numOfParts-numOfParts/2); // 左右归并 merge(a, low, mid, high); System.out.println(Arrays.toString(a)); } } public static void partlyMergeSort(int[] arr) { int partLength = 0; while(arr[partLength] &lt; arr[partLength+1]) { partLength++; } partLength++; int numOfParts = arr.length / partLength; mergeSort(arr, 0, arr.length, partLength, numOfParts); } public static void main(String[] args) { int a[] = { 18, 46, 51, 20, 65, 97, 30, 77, 82 }; partlyMergeSort(a); System.out.println(&quot;部分有序数组排序结果：&quot; + Arrays.toString(a)); }} 三、二分查找给一个有序数组和目标元素，找出元素在数组中的位置，如果找不到，则返回-1比如 数组 arr=[2,3,5,6,7,9] 目标元素 5执行二分查找之前，首先要保证数组是有序的。 1234567891011121314int binarySearch(int* arr, int len, int tar) { int l = 0, r = len-1, m; while(l &lt;= r) { m = l + (r-l)/2; if(arr[m] == tar) { return m; } else if(arr[m] &gt; tar) { r = m - 1; } else { l = m + 1; } } return -1;} 二分查找有如下几种常见的变形： 返回小于这个目标的最大元素位置 lower_bound123456789101112int lower_binarySearch(int* arr, int len, int tar) { int l = 0, r = len-1, m; while(l &lt;= r) { m = l + (r-l)/2; if(arr[m] &gt;= tar) { r = m - 1; } else { l = m + 1; } } return r;} 在C++ STL中，提供了对应的库函数 12template&lt;class ForwardIt, class T&gt;ForwardIt lower_bound(ForwardIt first, ForwardIt last, const T&amp; value) 返回大于这个目标的最小元素位置 upper_bound123456789101112int upper_binarySearch(int* arr, int len, int tar) { int l=0, r=len-1, m; while(l &lt;= r) { m = l + (r-l)/2; if(arr[m] &gt; tar) { r = m - 1; } else { l = m + 1; } } return l;} 在C++ STL中，提供了对应的库函数 12template&lt;class ForwardIt, class T&gt;ForwardIt upper_bound(ForwardIt first, ForwardIt last, const T&amp; value) 对于存在重复元素的数组，要求返回重复元素的范围。有了前面两个函数之后，重复元素的范围就是 [lower_bound + 1, upper_bound - 1]1234567int low = lower_binarySearch(arr, N, T);int high = upper_binarySearch(arr, N, T);if(low+1 &gt;= high) { printf(&quot;target %d not found!\\n&quot;, T);} else { printf(&quot;arr[%d]~arr[%d]=%d.\\n&quot;, low+1, high-1, T);} 例题 Leetcode 33 四、哈希查找哈希查找是通过哈希函数将任意可能的元素映射到一个固定范围的整数值（哈希值），并将改元素储存到整数值对应的地址上，理论查找的时间复杂度是 O(1)。 实际情况中，如果需要映射的元素过大或者映射整数范围过小，会导致两个不同元素计算得到相同哈希值的情况，称为哈希冲突。哈希冲突常见有以下几种解决方法： 链地址法 开放定址法 再哈希法","link":"/2018-07-20-selection-sort/"},{"title":"To-do list after installing macOS","text":"The high-end(expensive) MacBooks/iMacs is not friendly on their prices for those economical young people （unless the employee’s company give him an MBP）, but macOS deserves a trial by installing it in a VM. 1. Config for VMWare systems1.1 Install VMware Tool1.2 Set shared folders2. ConfigsOS Security configRemove login options for guest userssudo defaults write /Library/Preferences/com.apple.loginwindow SHOWOTHERUSERS_MANAGED -bool FALSE System optimization and beautificationSpeed up ‘BackSpace’ and ‘Delete’System Preferences &gt; Keyboard &gt; Key Repeat, Turn to fastest. 3. Programming Environment ConfigurationInstall XcodeJust install it from AppStore, as long as you’ve had an Apple ID. Install HomeBrew package management toolGo to the official website of homebrew, copy and paste the following command into your Terminal: 1/usr/bin/ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot; Install VimUse homebrew install latest vim with overriding the system built-in one(as it does not provide full Vim functions) 1brew install vim --with-lua --with-override-system-vim Remember typing vim to use this vim. If you type vi, then the system built-in vim will be adopted.","link":"/2018-6-16-after-install-macOS/"},{"title":"DNS欺骗攻击","text":"DNS是有缓冲区的，利用三级域名字符串模糊匹配。","link":"/2018-6-2-DNS-cheating-introduction/"},{"title":"Algebra | SageMath computing","text":"This article introduces the application of SageMath in Algebra. Open a Jupyter notebook is easy, just type jupyter notebook in the terminal. Vectors and MatriesBasic operationsInitialization12345678910111213X = vector( [0.0769727234, 0.084649211, 0.090481564, 0.084548456])A = matrix( [[0.2, 0.5, 0.1, -0.3], [-0.5, 0.5, 0.5, -0.3], [0.2, -0.3, 0.5, 0.4], [-0.3, -0.3, 0.5, 0]])# Specify element typeB = matrix(ZZ, 3,3) # integerC = matrix(QQ, 3,3) # fractionD = matrix(RR, 3,3) # common real numbers Matrix manipulations12# transpose matrix AA = A.transpose() Working with MATLABData sharingLoad .mat data file from SageHere I leverage Scipy function to load NN.mat file generated by a MATLAB program: 1234import scipy.iodata = scipy.io.loadmat(&apos;NN.mat&apos;)x = data[&apos;NN&apos;]print(x)","link":"/2020-01-06-Algebra-SageMath-computing/"},{"title":"VSCode for LeetCode","text":"用 VS Code 刷 LeetCode？真香！ Prerequisites VSCode node.js Java programming environment Install VSCode extensions: Java development pack, LeetCode, etc. Debugger configFirst, create a file specifically for debugging, say Solution.java. 12345678910111213141516class Solution { public int func(int[] nums) { ... } public static void main(String[] args) { // Create a new Solution instance Solution solution = new Solution(); // Create a test case int testCase[] = {1,2,2,3,1,4,2}; // Get the answer int answer = solution.func(testCase); // Print the answer System.out.println(answer); }} Then open File&gt;Preferences&gt;Settings, uncheck java.debug.settings.forceBuildBeforeLaunch or add &quot;java.debug.settings.forceBuildBeforeLaunch&quot;: false into .vscode/settings.json. Next create .vscode/launch.json under the folder and add 1234567891011121314{ // Use IntelliSense to learn about possible attributes. // Hover to view descriptions of existing attributes. // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387 &quot;version&quot;: &quot;0.2.0&quot;, &quot;configurations&quot;: [ { &quot;type&quot;: &quot;java&quot;, &quot;name&quot;: &quot;Debug (Launch) - Current File&quot;, &quot;request&quot;: &quot;launch&quot;, &quot;mainClass&quot;: &quot;${file}&quot; } ]} Finally open Debug extension panel.","link":"/2020-01-30-VSCode-for-LeetCode/"},{"title":"golang-json-int64-bug","text":"Go语言在将int64进行JSON解析时，会出现几百或几千的小的偏移。解决方法时将int64转化成string表示。比如，将 1controller.Data[&quot;json&quot;] = map[string]int64{&quot;MomentId&quot;: MomentId} 改为 1controller.Data[&quot;json&quot;] = map[string]string{&quot;MomentId&quot;: strconv.FormatInt(MomentId, 10)}","link":"/2018-6-6-golang-json-int64-bug/"},{"title":"Aimi SCI writing course","text":"13-day course. Day 1Principles of good writing Have an idea to share Engage your readers and not bore them Revise Cut all unecessities Some bad habits in writing Weighted phrases before a sentence(As it is well known, It should be emphasized that…) Put many nouns rather than verbs(Adiction, Accumulation, …) Empty words or unecessary adverbs(basic tenets of, methodologic, quite, …) duplicated parts that convey the same logic(studies/examples, challenges/difficulties, successfull solutions,…) 头重脚轻 jargons and acronyms created by yourself Day 2Some more tips of cutting turn “not” to possitive(not harmful-&gt;safe, not different-&gt;comparable) cut “there be” prepositions for grammar(She say that-&gt;She say) Some practices Anti-inflammatory drugs may prevent/protect against Alzheimer’s Disease.Clinical seizures occur in 0.5% to 2.3% of newborns.Besides preventing cancer, P53 plays roles in aging, differentiation, and fertility.It is most devastating and most expensive to treat injuries to the brain and spinal cord.(Injuries to the brain and spinal cord are among the most devastating and expensive)An IQ test measures an individual’s verbal communication, reasoning, and/or motor and saptial perfomance.From Figure 2, if/Figure 2 shows that the return kinetic energy is less than 3.5 $U_p$,(yields) two electron trajectories will be associateed with it. Day 3How to use active voiceadvantage: cut more words and force you to be direct Some practices The DSMB commitee recommends that the study be halted.We found(observed) major differences in the reaction times of the two study subjects. (The two study subjects differed in reaction times.)The editors concluded that the authors falsified their data.NASA’s Hubble Space Telescope has taken the first visible-light snapshot of a planet circling another star.Therefore, we rejected the hypothesis that … Write with verbs1.Use strong verbs2.Avoid turning verbs into nouns3.Don’t bury the main verb Day 4Verb practice exampleSome teachers fear that using canned computer programs would prevent learning statistics well. would在这里是虚拟语气We monitored student achievement levels before and after the introduction of computers in our course and found no detriments(damage or injury) in performances. Review of each center’s progress in recruitment is important to ensure that the cost involved in maintaining each center’s participation is worthwhile.We should review each center’s recruitment progesss to make ensure its continued participation is cost-effective. These proportions mainly reflect mildly injured persons outside a hospital rather than increases of moderate and severe injuries.Shifting proportions in injury severity may reflect stricter hospital admission criteria rather than true increases in moderate and severe injuries. Studies have begun to describe the epidemiology of autism, including recent changes in the disorder’s prevalence and characteristics. Multiple other mechanisms play a small role or work by impacting one of the three primary mechanisms. Rejecting paths with poor signal-to-noise ratios left 678 velocity measurements of 7.5-second waves and 891 of 15-second waves. A few grammar tipsdata pl.n.compared to = point out similarities between different thingscopmare with(used more often in science) = to point out differences between similar things that/which修饰定语从句 描述，多个中的一个/特指，额外信息，可被逗号隔开 单复数一致：Each student worries about his/her grade. -&gt; All students worry about their grade. Day 5PunctuationUse them to vary sentence structure. dash(—-): emphasize or to insert an abrupt descriptioncolon(:): introduce sth., the part before a colon has at least a subject and a verbsemicolon(;): link similar small sentences, or to seperate items in a listparenthesis(()): extra material or interesting tidbit, the reader can skip over itParallelismand, or, butparellel parts should have the same structure Day 9One more tipbreak writing task into small and realistic goals writing procedure tables and figures; 2. results; 3. methods; 4. introduction; 5. discussion; 6. abstract Day 11Introduction Background, known information Knowledge gap, unknown information Hypothesis, question, purpose statement Approach, plan of attack, proposed solutionnot too professtional, not the results Day 12Discussionmore freedom answer the question asked support your conclusion(your data, others’ data) defend your conclusion(anticipate criticisms) give the “big-picture” take-home message Abstractput out snippets out of your papergive the highlight of each part of your papershould stand on its own","link":"/2020-02-22-Aimi-SCI-course/"},{"title":"Solidity Smart Contract Experiment","text":"以太坊开发团队开发了 Remix IDE 和配套的 Remix 一系列插件供智能合约实验用。当然也可以使用 Java 的 web3j 来实现这些功能 Installation12345sudo pacman -Syu nvm soliditynvm install 8.0nvm use 8.0npm install remix-ide -gremix-ide Later, every time if you want to open remix, just type: 12nvm use 8.0 # required if you installed several versionsremix-ide Procedure编写智能合约 编译智能合约在左侧找到编译插件，如果没有则需要在插件管理处安装Compile插件。注意编译插件的版本选择应和程序第一行的要求一致。 Deploy and run on localhostEnvironment 选择 Js VM, 这是浏览器虚拟出来的区块链，刷新一遍后即清空 After choosing JS VM, you will have five available accounts in the next account list. 部署和调用store ABI的过程会消耗ether，但是调用retrieve ABI的过程不会消耗，即使过程中进行了运算。 一些语法点一个函数设置成 view 之后，这个函数中不可修改合约变量的值，并且此功能不消耗eth。 为了使 Solidity 智能合约能够与其他程序交互，我们需要借助 web3.js 1npm install web3 部署到测试网络上，可以通过将钱包地址发到推特或者脸书上，然后把链接贴回网址获得一些测试币。 点开 Contract 对应的地址网址： 接下来 Verify &amp; Publish Source code verify and publish 成功 可以通过 read contract 读取合约中的public变量值： 使用 Prepros 软件或 VS Code Live Server 插件将文档部署在 localhost 的某个端口上（注意不能直接从本地用浏览器打开） 使用JavaScript开发的web3.js的一些用法按照模块分 eth.blockNumbereth.accounts # == personal.listAccountseth.getBalance(arg) # arg: 账户地址eth.sendTransaction({from: arg0, to: arg1, value: web3.toWei(3, ‘ether’)}) # arg0账户向arg1账户转账3个以太币 personal.newAccount(arg) # arg: 账户密码字符串(123)； 账户地址是随机生成的personal.unlockAccont(account, pass, duration) # 账户地址, 密码， 持续时间(秒) miner.start(arg) # arg: 挖矿线程数miner.stop() web3.fromWei(arg0, ‘ether’) # arg0 wei数量 Java下的 web3j 实验 接着上一个实验，再安装 solidity, go-ethereum, 以及 web3j 的 3.6.0 版本(https://github.com/web3j/web3j/releases/tag/v3.6.0)首先查看 版本号 根据版本号，编写一个指定了对应版本号的 Solidity 合约(当然，程序第一行也可以指定合约版本号范围，这样合约文件的适用性会更好，但是可能功能会有所局限在最早的版本。) 123456789101112131415161718192021222324252627pragma solidity ^0.6.6;contract StorageContract { mapping(string =&gt; bool) public allTokens; event logToken(string token); event logCheck(bool result); event compute_times(int256 times); function sendToken(string memory token) public { allTokens[token] = true; emit logToken(token); } function checkToken(string memory token) public returns (bool result) { if (allTokens[token] == true){ logCheck(true); return true; } else { logCheck(false); return false; } } function computeTimes(int times) public { emit compute_times(times); }} 编译合约： 1solc control.sol --bin --abi --optimize -o solidity 上个命令将编译后的abi文件和bytecode文件输出到子文件夹solidity/，如果该子文件夹中已存在同名文件，则需要添加 --overwrite 使用 web3j 打包成 Java 类： 1web3j solidity generate solidity/Control.bin solidity/Control.abi -o {directory/to/src/main/java} -p {com.your.packagename} 上面命令大括号中分别为要输出的Java主目录和要使用该类的包名，输出结果为 StorageContract.java。（也可以随意指定然后拷贝到需要的目录下，这种方法需要修改匹配包名） 启动以太坊区块链启动方法有多种，这里推荐本地搭建geth private network的方式。因为除了geth，其他的一些以太坊区块链后端如 Infura, Ganache 等，对功能进行了阉割。导致无法进行监听等功能，所以建议还是老实用geth搭一条私链。 geth private network12345678910111213141516171819202122{ &quot;config&quot;: { &quot;chainId&quot;: 1, &quot;homesteadBlock&quot;: 0, &quot;eip150Block&quot;: 0, &quot;eip155Block&quot;: 0, &quot;eip158Block&quot;: 0, &quot;byzantiumBlock&quot;: 0, &quot;constantinopleBlock&quot;: 0, &quot;petersburgBlock&quot;: 0, &quot;istanbulBlock&quot;: 0 }, &quot;alloc&quot;: {}, &quot;coinbase&quot;: &quot;0x0000000000000000000000000000000000000000&quot;, &quot;difficulty&quot;: &quot;0x20000&quot;, &quot;extraData&quot;: &quot;&quot;, &quot;gasLimit&quot;: &quot;0x2fefd8&quot;, &quot;nonce&quot;: &quot;0x0000000000000142&quot;, &quot;mixhash&quot;: &quot;0x0000000000000000000000000000000000000000000000000000000000000000&quot;, &quot;parentHash&quot;: &quot;0x0000000000000000000000000000000000000000000000000000000000000000&quot;, &quot;timestamp&quot;: &quot;0x00&quot;} 1geth --datadir ./ init genesis.json 进入geth console 的方式有两种，一种是启动geth后台之后，通过ipc方式进入： 1geth attach ipc:./geth.ipc console 另一种是直接在启动geth命令中加入console 12345678geth--datadir ./ --rpcapi personal,eth,net,web3,txpool,debug,miner,admin -rpc --rpccorsdomain &quot;chrome-extension://nkbihfbeogaeaoehlefnkodbefgpgknn&quot; --allow-insecure-unlock --wsapi personal,eth,net,web3,txpool,debug,miner,admin --ws console2&gt;&gt; /tmp/eth01.log 上面命令参数一行行解释1： 启动 geth 客户端2： 指定私链存放的数据文件夹（之前已 geth init genesis.json --datadir ./）3： enable rpc接口，并指定开放的rpcapi4： 默认只支持https访问，这里开放 metamask 插件的http跨域访问5： 允许在 console 中和 http 请求中解锁 account6： enable websocket接口，并指定开放的 wsapi7： 开放控制台8： 将一些不必要的log输出重定向（控制台会比较干净，不会被log输出干扰）下面1行方便复制粘贴 1geth --datadir ./ --rpcapi personal,eth,net,web3,txpool,debug,miner,admin -rpc -rpccorsdomain &quot;*&quot; --allow-insecure-unlock --wsapi personal,eth,net,web3,txpool,debug,miner,admin --ws console 2&gt;&gt; /tmp/eth01.log metamask 里面custom rpc remix ide 里面 injected web3 geth 里面的 keystore 不好获得私钥，所以在进行web3实验的时候用 Admin 或者 Wallet.Utils geth rinkeby test node1$ geth --rpcapi personal,db,eth,net,web3 --rpc --rinkeby 这个客户端默认工作在 localhost:8545 Infura remote test node注册使用 Infura 创建一个在线节点： 部署智能合约将编译过的合约部署到区块链节点上，这里可以通过 Remix IDE, web3.js, web3j 等多种方式部署。 Remix IDE 部署geth节点开启挖矿模式如果使用Remix IDE的 Provided Web3格式，则不需要导入 metamask 钱包点击Deploy跳出Confirm Transaction窗口 生成合约打包的交易形式： 12345678910111213141516{ blockHash: &quot;0x164a207f528d564fa5bf3e265dc7886ef927e96d19556302476ef9f80569caf5&quot;, blockNumber: 8343, from: &quot;0xcbcb8167b1f2de05d696f041bb6c5f2e127baec5&quot;, gas: 368951, gasPrice: 4000000000, hash: &quot;0x9de4e3a...96990f0c&quot;, input: &quot;0x6080604052348015610010576...&quot;, nonce: 2, r: &quot;0x6d215cdb66e10cf415795b3552cf2acc58129950b53a4ba1111788b4f2504090&quot;, s: &quot;0x4f29c1e7332a7945f6e10de69a09e0db89a9df51d1e24b901f0d411f77c38f89&quot;, to: null, transactionIndex: 0, v: &quot;0x26&quot;, value: 0} 等待一会，会提示交易打包成功，成功后可以在 Remix 控制台看到输出的结果，以及左栏会多出部署好的合约接口。 Java调用合约ABI程序Solidity 中引入了 event 机制用于监听，但要注意 event 无法直接从客户端调用，需要通过调用 ABI 函数，函数里面 emit 一个event这样才行。 添加 pom.xml 依赖： 12345&lt;dependency&gt; &lt;groupId&gt;org.web3j&lt;/groupId&gt; &lt;artifactId&gt;core&lt;/artifactId&gt; &lt;version&gt;3.6.0&lt;/version&gt;&lt;/dependency&gt; 1TransactionReceipt receipt = contract.ABImethod(args).send(); 在 Remix 控制台中显示一个带有event log输出的交易形式： 原始的交易格式 12345678910111213141516{ blockHash: &quot;0x5325ddcd2d4637639a947a04c71fe558bd4846b63e70b888c669fd6cb5948cea&quot;, blockNumber: 8346, from: &quot;0xcbcb8167b1f2de05d696f041bb6c5f2e127baec5&quot;, gas: 45120, gasPrice: 20000000000, hash: &quot;0x2d62aa...31f2ee&quot;, input: &quot;0x5ed39f42...&quot;, nonce: 3, r: &quot;0x85e7d979303becce39df32e0cc835aa24f7fadbd9f19016aa941bdbffcd5426f&quot;, s: &quot;0x47bd134df93e5e35295fb7a67574c1ef3e31b86fbacc4cf2bd411e7c30cf9ce3&quot;, to: &quot;0xdb71c8c71361d5d0b592438333a41baf6c73ead7&quot;, transactionIndex: 0, v: &quot;0x25&quot;, value: 0} web3j 中打印出的 event log 形式： 会发现 Remix 的输出格式进行了优化，而 web3j 中则是原汁原味的以太坊交易的显示。优化的方法也比较简单，通过查看源代码，发现remix里调用event时进行了记录，在显示log的时候嵌入到里面了。GitHub remix/remix-lib/src/execution/eventsDecoder.js Java端监听合约log程序在监听程序中监听 log event Subscriber.java 123456789101112131415161718192021import rx.Subscription;public class Subscriber { private static Web3j web3; private String CONTRACT_ADDRESS; Subscriber(Web3j web3j, String contract_address) { web3 = web3j; CONTRACT_ADDRESS = contract_address; } public void newEventLogFilter() { EthFilter filter = new EthFilter(DefaultBlockParameterName.EARLIEST, DefaultBlockParameterName.LATEST, CONTRACT_ADDRESS); filter.addSingleTopic(EventEncoder.encode(StorageContract.LOGTOKEN_EVENT)); Subscription subscription = web3.ethLogObservable(filter). subscribe(log -&gt; { System.out.println(log); }); }} DemoApplication.java 1234567891011121314@EnableDiscoveryClient@SpringBootApplicationpublic class GatewayApplication { public static void main(String[] args) { SpringApplication.run(GatewayApplication.class, args); Web3j web3 = Web3j.build(new HttpService()); String contract_address = &quot;0xcc87c4D1294bE775c0fD9726197F768DDCA45d56&quot;; Subscriber subscriber = new Subscriber(web3, contract_address); subscriber.newEventLogFilter(); }} 实验观察可知，同一个ABI event，它们的 topic 是相同的，故可以将 topic 和 event name 一一对应。（实际上topic值是event name 的hash，可以用EventEncoder.encode()获取topic值） 接口测试命令： 12curl -d &quot;call_address=/home/wsd/STEM/microservices/test-data&quot; http://localhost:7901/callKmeanscurl http://localhost:7901/getResults 假设每次消费过程都是一次完整合约调用过程。但已知若合约代码不变，则部署的地址也不变。 几个问题和一些想法 分网关外部和网关内部来看 Solidity 智能合约与 Spring 微服务的关系从内部来看，智能合约与微服务相对独立，智能合约更像是一个广义层面的微服务。从外部来看，如果外部的调用请求每次都要先通过智能合约来交互，那么智能合约更像是微服务的整合。 记录在区块链的 event log 最多存储256位，如何解决传递大量数据的问题通过在区块链上记录数据地址，再根据地址去获取数据。 微服务之间通过区块链进行通信时间开销比较大的问题可以考虑把传递正确结果的过程分成两部分，一是传递结果，这一步需要提高速度。二是检验结果的正确性，这一步则保证结果的正确性。 References:https://remix-ide.readthedocs.io/en/latest/run.html","link":"/2020-03-19-Solidity-Smart-Contract-Experiment/"},{"title":"Linux 反汇编教程","text":"一些工具 xxd: hex文件查看转换器（gvim自带）readelf: 二进制可执行文件查看解析器objdump: 对象/二进制文件查看解析器 objdump -d binaryfile 反汇编 objdump -d —source —line-number objfilename","link":"/2020-04-03-Disassembly-on-Linux/"},{"title":"Javascript cheatsheet","text":"Javascript 词汇表 ES声明变量var 局部级变量let 代码块级变量不带修饰符 全局变量 .on(‘ready’, …).onclick = … .on(‘closed’, …) document.querySelector() node.jsrequire(‘package name’) Electron","link":"/2020-04-20-Javascript-cheatsheet/"},{"title":"Wireshark网络包分析教程","text":"Wireshark作为网络抓包分析工具，很有学习的必要。本篇将从基本用法入手，分析几种计算机网络常用协议，带你深入计算机网络的世界。 实际情况下，可以通过多种方式进行抓包 本机环境下，可以直接使用本地网卡进行抓包 集线器环境下，集线器是广播发送的，可以抓包 交换机环境下，最正规的方式是通过在交换机上配置端口映射，将流量转发到本机；而黑客经常通过ARP欺骗和MAC泛洪这些非正常方式来抓包。 包过滤规则： 过滤地址 192.168.1.5： ip.addr==192.168.1.5源地址 192.168.1.5： ip.src == 192.168.1.5目的地址192.168.1.4: ip.dst == 192.168.1.4 传输层协议TCP/UDPTCP三次握手应用层协议HTTPHTTP2.0RPC","link":"/2020-05-07-Wireshark-cheatsheet/"},{"title":"UML diagrams --- from models to codes","text":"本文关注于利用UML框图将模型表达为代码的过程，其中穿插有设计模式。 类之间的关系整体部分关系整体-部分关系使用一条带菱形的线段表示。 整体-部分关系可再细分为以下几种。 1. Association关联类B以类属性的形式出现在关联类A中，也可能是关联类A引用了一个类型为类B的全局变量。如学生-课程-老师的关联关系：1名学生可以选0到多门课程，每门课程对应至少1名学生；1门课程有1位授课老师，一名老师可以教授0到多门课程。 2. Aggregation聚合关系是关联关系的一种特例，他体现的是整体与部分、拥有的关系，即 has-a 的关系。此时，整体与部分之间是可分离的，他们可以具有各自的生命周期，部分可以属于多个整体对象，也可以为多个整体对象共享；比如计算机与CPU、公司与员工的关系等。代码层面的表现和关联关系是一致的，只能从语义级别来区分。 1234567891011121314151617181920212223242526272829/** * 聚合关系示例 */// 运动员class Athelete { private String name; public Athelete(String _name) { name = _name; System.out.println(&quot;A new athelete:&quot; + name); }}// 比赛队class Team { private String name; private List&lt;Athelete&gt; atheletes; public Team(String _name) { name = _name; System.out.println(&quot;A new team:&quot; + name); atheletes = new List&lt;Athelete&gt;(); } public addAthelete(String athelete_name) { atheletes.add(new Athelete(athelete_name)); System.out.println(&quot;Add &quot; + athelete_name + &quot; into &quot; + name); }} 在示例中，运动员数组对象作为比赛队类中的私有对象，使用setter方法来设置。 3. Composition组合也是关联关系的一种特例，他体现的是contains-a的关系。这种关系更强，也称为强聚合。它同样体现整体与部分的关系，但此时整体与部分是不可分的，整体的生命周期结束也就意味这部分的生命周期结束，比如人和人的大脑。表现在代码层面，和关联关系是一致的，只能从语义级别来区分。 总的来说，几种关系所表现的强弱程度依次为：组合 &gt; 聚合 &gt; 关联。 关联与聚合关系的比较 从代码层面表现看，关联与聚合是一致的，只能从语义级别来区分 关联和聚合在语义上的区别在于：关联的两个对象之间一般是平等的，例如朋友关系；而聚合则一般是不平等的，如家庭-子女关系。 关联是一种结构化的关系，指一种对象和另一种对象有联系，比依赖关系要强。 关联和聚合是视问题域而定的。例如，在关心汽车的领域内，轮胎是一定要组合在汽车类中的，因为它离开了汽车就没有意义了；而在买轮胎的店铺业务里，轮胎就算离开了汽车也是有意义的，这就可以用聚合了。 一般-特殊关系继承关系 Inheritance继承关系是指子类中的成员有部分来自父类的成员，在UML类图中通常用”实线+空心三角箭头”来表示，箭头方向由子类指向父类。 1234567891011class Person { String name; int sex; public Person() {}}class Clerk implements Person { int position; double salary; public Clerk() {}} 继承关系在一些资料和设计软件中又被称为泛化关系（Generalization）。 实现关系实现关系是定义的接口与实现类的关系，在UML类图中通常以“虚线+空心三角箭头”表示，箭头方向由实现类指向接口。 1234567891011interface Tool { String use();}class Car implements Tool { public Car() {} public String use() { return &quot;drive&quot;; }} 对象之间的消息12345678910class Util { public fun1() {} public fun2() {}}class Call { public callFunc() { Util.fun1(); }} 依赖关系参考文献谈谈类之间的关联关系与依赖关系： https://www.cnblogs.com/iyangyuan/archive/2013/06/16/3138463.html","link":"/2020-05-08-UML-from-model-to-code/"},{"title":"KDE Desktop Config","text":"KDE is a highly configurable modern Linux desktop environment which is developed by OpenSUSE company. Plasma is the version alias of KDE5. I. Installing KDEI install it on my Arch Linux, so 12pacman -S plasma # kde plasma desktop grouppacman -S dolphin # file manager II. Configure KDEDisable kde wallet whenever I start Chromium/ChromeEdit ~/.config/kwalletrc, and add 12[Wallet]Enabled=false Disable Meta key for virtual machine windowsAlt+F3 &gt; More Actions &gt; Configure special window settings &gt; Add property &gt; Disable global shortcuts 几种 Linux 桌面的比较使用 Gnome 缺点：没法使用 KDE 下一些软件，比如视频剪辑软件 kdenlive II.1. Configure macOS-like themes关于主题配置多说一嘴，很多初学者撸 Linux 时酷爱折腾 macOS-like 主题，我这个菜鸟也不例外。但是经过若干年的折腾，我得出的结论是：不管GNOME还是KDE，都没法配置的和 macOS 一模一样。简简单单一个最大化就能看出端倪。三个特征： 1.最大化后是否能隐藏掉 topbar，并新开一个workspace？ 2.退出全屏后能否再回到原来的workspace？ 3.最大化后是否有全局菜单？事实上，macOS桌面的全局菜单很鸡肋，因为需要将鼠标频繁移动到桌面边缘。mbp这么设计依赖于非常大的触控板。对于绝大多数非mbp笔记本用户，触控板面积有限，频繁移动鼠标到边缘的效率低。对于追求高效的程序员来说，一些操作能用键盘最好，用鼠标也是最好集中在非屏幕边缘区域。好好深入学习技术，靠自己的努力上手一台真MacBook吧！（不管是自己挣大钱买或者公司发） II.1.a. Global menuAdd Widgets: global menuFor VScode-like electron apps, pacman -S libdbusmenu-glibFor Firefox, pacman -S appmenu-gtk-moduleFor Chrome, uncheck “Use system titlebar and borders” For features like macOS-like buttons, hiding title bar when maximized, we have two choices now: Choice 1: (Recommended for KDE version &gt; 5.22) Window Button + Window Title + Window AppMenuHiding titlebar when maximizing window for AppMenu &lt; v0.10 Hiding titlebar when maximizing window for Latte Dock &gt;= v0.10 &amp;&amp; AppMenu &gt;= v0.10In Latte Dock settings, enable “Support borderless maximized windows in different layouts” and then check “Borderless” in Layouts editor: Hiding titlebar when maximizing window AppMenu &gt;= v0.10 &amp;&amp; without Latte Dock installed ref 112kwriteconfig5 --file ~/.config/kwinrc --group Windows --key BorderlessMaximizedWindows trueqdbus org.kde.KWin /KWin reconfigure Choice 2: Active window control选择breezmite的svg图标/home/wsd/.local/share/aurorae/themes/Breezemite Chrome 设置中关闭 Use system title bar and borders，在 panel 可隐藏模式中使用。Firefox 需卸载默认版本转而aur安装firefox-appmenu-bin，设置 Mojave Theme，启动 Title bar。在 panel always visible 模式中使用 II.1.b. Window decorationsclone SierraBreeze from github and manually install.System Settings &gt; Appearance &gt; Window decorations &gt; Theme &gt; Sierra Breeze:Then go to titlebar buttons frame and drag ‘close’, ‘minimize’, ‘maximize’ buttons onto left side of titlebar. II.1.c. dockpacman -S latte-dock and launch it from applications. II.1.d. Fontssf-pro II.1.f. Plasma Style and cursorsSystem Settings &gt; Appearance &gt; Plasma Style &gt; Get New Plasma Styles:Download McMojave and set:Go to Cursors tab and choose McMojave-circle as the cursor style. II.2. 具体应用场景下的配置修正I have three main usages: 笔记本单屏幕桌面，拥有键鼠+Touchpad 笔记本合上屏幕作为主机，外接显示屏+键鼠，无Touchpad 笔记本外接屏幕作为拓展屏 第1种情况下，配置Panel为 Window can hover，最大化13寸小屏幕；使用 Touchpad 四指滑动来回切换win10虚拟机所在桌面。选择Chrome作为主浏览器。第2种情况下，外接屏幕足够大，而且无Touchpad，所以配置Panel为 Always Visible，使用鼠标点击panel 中的 Desktop 来切换虚拟机桌面和KDE桌面。由于Active Window Control和Chrome的兼容问题，选择 Firefox 作为主浏览器。第3中情况下有两块屏幕，配置外接屏幕为 Always Visible 即可，支持Touchpad和鼠标点击两种方式切换桌面 III. Restart KDE plasmatype Ctrl+Alt+F2 into a new shell, then type 1killall plasmashell &amp;&amp; kstart plasmashell or 1plasmashell --replace References","link":"/2020-06-26-KDE-desktop-config/"},{"title":"Docker词汇表","text":"更改docker镜像源为阿里云 12sudo vim /etc/docker/daemon.jsoncat /etc/docker/daemon.json { “registry-mirrors”: [“https://gvv1xf6d.mirror.aliyuncs.com“]} 拉取系统镜像并运行： 12docker pull debiandocker run -it debian bash 更改debian镜像源 12345678910cd /etc/aptcp sources.list sources.list.bakecho &quot;deb http://mirrors.tuna.tsinghua.edu.cn/debian/ buster main contrib non-free&quot; &gt; sources.list.tsinghuaecho &quot;deb http://mirrors.tuna.tsinghua.edu.cn/debian/ buster-updates main contrib non-free&quot; &gt;&gt; sources.list.tsinghuaecho &quot;deb http://mirrors.tuna.tsinghua.edu.cn/debian/ buster-backports main contrib non-free&quot; &gt;&gt; sources.list.tsinghuaecho &quot;deb http://mirrors.tuna.tsinghua.edu.cn/debian-security buster/updates main contrib non-free&quot; &gt;&gt; sources.list.tsinghuamv sources.list.tsinghua sources.listapt install apt-transport-https ca-certificatessed -E -i &apos;s/http/https/&apos; sources.listapt update docker commit e7f167a49946 wsd/testimg:1 # container iddocker run -it wsd/testimg:1 bash","link":"/2020-07-07-Docker-cheatsheet/"},{"title":"设计模式 之 适配器","text":"适配器模式是一种常用的设计模式。 适配器模式的两种用法第一种方式，是在我们写好一个接口和方法并编写调用后，出现了一种新的需求接口，为了使接口能够兼容，定义一个Adapter类。这种写法在做安卓开发兼容时经常用到。 假设我们已经写好了一个匹配的插座和插头，如上图所示。 假设现在又有了一个圆孔的插座（右），但是现在买回了一个方孔的插头（左）。为了使原本无法匹配的接口通用，我们可以使用这样一个适配器类（中），在适配器中进行接口的转换，如下图所示。 示例代码如下： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051class ReceptacleA { public void work(PlugA plugA) { plugA.plugRound(); System.out.println(&quot;插座工作&quot;); }}class PlugA { public void plugRound() { System.out.println(&quot;插入圆孔插头&quot;); }}class Adapter extends PlugA { PlugB plugB; Adapter(PlugB plugB) { this.plugB = plugB; } @Override public void plugRound() { plugB.plugSquare(); }}class PlugB { public void plugSquare() { System.out.println(&quot;插入方孔插头&quot;); }}class Test { public static void testPlugA() { ReceptacleA receptacleA = new ReceptacleA(); PlugA plugA = new PlugA(); receptacleA.work(plugA); } public static void testPlugB() { ReceptacleA receptacleA = new ReceptacleA(); PlugB plugB = new PlugB(); Adapter adapter = new Adapter(plugB); receptacleA.work(adapter); } public static void main(String[] args) { testPlugA(); testPlugB(); }} 代码运行结果： 第二种方式，是我们只希望实现接口中的部分方法时，通过定义一个抽象适配器类，再通过具体类继承来覆写其中的部分方法以达到继承接口部分方法的目的。 1234567891011121314151617181920212223242526272829303132333435interface Behaviours { void run(); void swim(); void fly();}abstract class Animal implements Behaviours { public void run(){} public void swim(){} public void fly(){}}class Dog extends Animal { public void run() { System.out.println(&quot;Dogs run&quot;); } public void swim() { System.out.println(&quot;Dogs swim&quot;); } public static void main(String[] args){ Dog dog = new Dog(); dog.run(); dog.swim(); }}class Sparrow extends Animal { public void fly() { System.out.println(&quot;Sparrows fly&quot;); } public static void main(String[] args){ Sparrow sparrow = new Sparrow(); sparrow.fly(); }} 项目实例Eureka 项目 In eureka-core 客户端com.netflix.discovery.shared.transport.EurekaHttpClient.java 123456789101112131415161718192021222324252627282930313233/** * Low level Eureka HTTP client API. * * @author Tomasz Bak */public interface EurekaHttpClient { EurekaHttpResponse&lt;Void&gt; register(InstanceInfo info); EurekaHttpResponse&lt;Void&gt; cancel(String appName, String id); EurekaHttpResponse&lt;InstanceInfo&gt; sendHeartBeat(String appName, String id, InstanceInfo info, InstanceStatus overriddenStatus); EurekaHttpResponse&lt;Void&gt; statusUpdate(String appName, String id, InstanceStatus newStatus, InstanceInfo info); EurekaHttpResponse&lt;Void&gt; deleteStatusOverride(String appName, String id, InstanceInfo info); EurekaHttpResponse&lt;Applications&gt; getApplications(String... regions); EurekaHttpResponse&lt;Applications&gt; getDelta(String... regions); EurekaHttpResponse&lt;Applications&gt; getVip(String vipAddress, String... regions); EurekaHttpResponse&lt;Applications&gt; getSecureVip(String secureVipAddress, String... regions); EurekaHttpResponse&lt;Application&gt; getApplication(String appName); EurekaHttpResponse&lt;InstanceInfo&gt; getInstance(String appName, String id); EurekaHttpResponse&lt;InstanceInfo&gt; getInstance(String id); void shutdown();} In eureka-client-jersey2com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.java 1234567891011121314151617181920212223public abstract class AbstractJerseyEurekaHttpClient implements EurekaHttpClient { private static final Logger logger = LoggerFactory.getLogger(AbstractJerseyEurekaHttpClient.class); protected static final String HTML = &quot;html&quot;; protected final Client jerseyClient; protected final String serviceUrl; protected AbstractJerseyEurekaHttpClient(Client jerseyClient, String serviceUrl) { this.jerseyClient = jerseyClient; this.serviceUrl = serviceUrl; logger.debug(&quot;Created client for url: {}&quot;, serviceUrl); } @Override ...... protected abstract void addExtraHeaders(Builder webResource); private static Map&lt;String, String&gt; headersOf(ClientResponse response) { ...... }} In eureka-clientcom.netflix.discovery.shared.transport.jersey.JerseyApplicationClient.java 12345678910111213141516171819/** * A version of Jersey1 {@link EurekaHttpClient} to be used by applications. * * @author Tomasz Bak */public class JerseyApplicationClient extends AbstractJerseyEurekaHttpClient { private final Map&lt;String, String&gt; additionalHeaders; public JerseyApplicationClient(Client jerseyClient, String serviceUrl, Map&lt;String, String&gt; additionalHeaders) { super(jerseyClient, serviceUrl); this.additionalHeaders = additionalHeaders; } @Override protected void addExtraHeaders(Builder webResource) { ...... }} eureka-core 服务器端PeerAwareInstanceRegistryImpl.java 1234@Singletonpublic class PeerAwareInstanceRegistryImpl extends AbstractInstanceRegistry implements PeerAwareInstanceRegistry { ......} 责任链加适配器模式 12345678910111213141516@Singleton@ProvidedBy(MyDataCenterInstanceConfigProvider.class)public class MyDataCenterInstanceConfig extends PropertiesInstanceConfig implements EurekaInstanceConfig { public MyDataCenterInstanceConfig() { } public MyDataCenterInstanceConfig(String namespace) { super(namespace); } public MyDataCenterInstanceConfig(String namespace, DataCenterInfo dataCenterInfo) { super(namespace, dataCenterInfo); }} ProvidedBy是Guice的注解，表示等同于 12bind(MyDataCenterInstanceConfig.class) .toProvider(MyDataCenterInstanceConfigProvider.class)","link":"/2020-06-28-Design-patterns-Adapter-pattern/"},{"title":"使用Swagger构建接口文档","text":"新建一个Spring Boot项目 添加Swagger-ui和Swagger依赖 @EnableSwagger2","link":"/2020-07-11-Swagger-tutorial/"},{"title":"Design patterns --- Dynamic proxy","text":"  动态代理模式是借助proxy对象执行被代理接口方法的设计模式。 动态代理模式的“动态”体现在代理对象代理的接口所来自的实例方法是可以动态指配的。动态代理模式可以应用于： 网络服务接口的调用 对一些方法做统一的处理以减少重复代码   动态代理模式的特征是代理类（ProxyClass）和被代理类（RealSubject）实现同一个接口（doAction），使用者（Client）不直接访问被代理类的接口，而是借助代理类实现对接口的访问。 图 1 动态代理模式UML示意图   在Java中，实现动态代理模式的相关工具有JDK自带的动态代理模块、CgLib和JavaAssist等。动态代理的典型应用场景有RPC和Spring AOP。接下来分别结合实例代码理解动态代理模式的使用： 一、RPC中的动态代理模式 图 2 RPC中的动态代理模式使用者（Client）对Service接口的调用通过Proxy转化为了对invoke函数的调用，在invoke函数中会调用http/tcp客户端发送调用请求。 以JDChain为例，queryService是通过动态代理模式生成的服务接口 HttpBlockchainBrowserService 的实例。客户端调用getLedgerHashs()方法实际上调用的是 ServiceInvocationHandler 中的 invoke 方法。 二、Spring AOP中的动态代理模式与发送http/tcp请求不同，aop在invoke函数中运行了method.invoke进行原方法的调用。在method.invoke之前执行的就是前置切面，在method.invoke之后执行的就是后置切面。 AOP使用方法在SpringBoot项目中添加依赖： 1234&lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-aop&lt;/artifactId&gt;&lt;/dependency&gt; 注入切面类： 1234567891011121314@Aspect@Componentpublic class LogAspect { /** * 定义拦截规则：拦截org.springframework.cloud.netflix.eureka.server.InstanceRegistry.register方法 */ @Pointcut(&quot;execution(* org.springframework.cloud.netflix.eureka.server.InstanceRegistry.register(..))&quot;) public void controllerRequestPointcut() {} @Around(&quot;controllerRequestPointcut()&quot;) public Object Interceptor(ProceedingJoinPoint pjp) { // aspect code here }} 三、JuLiuSc合约平台中的使用获取jar包执行方法并展示 123456789101112131415161718192021URLClassLoader contractCLassLoader = contractService.loadContractJar(contractJarName);Class clazz = Class.forName(contractRefName, false, contractCLassLoader);Object argObj = null;String contractAddr = rand.nextString();// select the constructor based on args to initialize,// else the default constructor is usedif (null != argsMap) { List&lt;Class&gt; argClasses = new ArrayList&lt;&gt;(); List&lt;Object&gt; argObjects = new ArrayList&lt;&gt;(); for (Map.Entry&lt;String, Object&gt; arg : argsMap.entrySet()) { Class argClazz = Class.forName(arg.getKey()); argClasses.add(argClazz); argObjects.add(argClazz.cast(arg.getValue())); } Constructor constructor = clazz.getConstructor(argClasses.toArray(new Class[argClasses.size()])); argObj = constructor.newInstance(argObjects.toArray(new Object[argObjects.size()]));} else { Constructor constructor = clazz.getConstructor(); argObj = constructor.newInstance();} 注意 clazz.getConstructor 函数的参数由 List 转 [] 类型，不可以直接使用强制类型转换 (Class[]) argClasses.toArray()，不然会报错如下： 1java.lang.ClassCastException: [Ljava.lang.Object; cannot be cast to [Ljava.lang.Class;","link":"/2020-07-14-Design-patterns-Dynamic-proxy/"},{"title":"Operating System Maintainance and Cleaning","text":"Win 10Clean log filesC:\\Windows\\System32\\winevt\\Logs按Ctrl+A全选后使用 Shift + Delete 删除，一些正被services使用的文件无法被删除。 Open Administrator Powershell： 12Get-EventLog -ListRemove-EventLog -LogName &quot;some Log from list&quot; 禁用休眠休眠会将系统内存保存到磁盘文件hiberfil.sys中。可以通过 1powercfg /hibernate off 关闭休眠功能 LinuxRefer to https://billystudio.github.io/2018/05/16/Command-of-the-day-May-sixteenth-2018/","link":"/2020-10-06-System-maintainance-and-cleaning/"},{"title":"git 操作中的一些小技巧","text":"整理记录平时遇到的一些git技巧 1. branch for fixing issue123456789101112git checkout -b fix-bug// git add 一些修改文件git commit -m &quot;fix 1&quot;// git add 再一些修改文件git commit -m &quot;fix 2&quot;git checkout mastergit pull -r origin mastergit checkout fix-buggit rebase mastergit checkout mastergit merge --squash fix-buggit commit -m &quot;fix bug&quot; 2. Pull a remote branchEnsure in advance that you ref all branches in .git/config, then 12git fetch --allgit checkout -b branchname origin/branchname A successful example: TroubleShooting: Cannot git pull from github 123456kex_exchange_identification: read: Connection reset by peerConnection reset by 20.205.243.166 port 22fatal: Could not read from remote repository.Please make sure you have the correct access rightsand the repository exists. Try ssh -T git@github.com and then git pull. 3. prevent typing password in http protocol3.1 Git Credential store1git config --global credential.helper store After enabling this you will be prompted for your creds on your next commit. your token will be stored in plain text in ~/.git-credentials. 3.2 Microsoft Git Credential ManagerStep 1: aur install git-credential-manager-core-bin developed by Microsoft then config: 1git-credential-manager-core configure Step 2: For Linux system, a default strategy for storing credential passwords doesn’t exist. So one of the four options of storing credentials should be configured by setting the GCM_CREDENTIAL_STORE environment variable or credential.credentialStore git configuration setting.environment variable way: 1export GCM_CREDENTIAL_STORE=secretservice # secretservice / gpg / cache / plaintext Or 1git config --global credential.credentialStore secretservice # secretservice / gpg / cache / plaintext","link":"/2020-10-09-Git-cheatsheet/"},{"title":"On Typesetting a Thesis by Using Either LaTeX or Word","text":"学术论文写作过程中的一些经验记录总结。 字体1.1 LaTeX 字体一些名词解释PostScript (PS): Adobe公司开发的一种图灵完备的编程语言，目的是使用数学化的方式来描述几何图形和图片。Portable Document Format: 也有Adobe公司开发，属于PostScript的子集。pdf不是一种编程语言，因为其缺乏PostScript语言的条件分支能力。Pdf对编号和超链接的支持很好，主要用于文件组合与分享。Type 1 fonts: 矢量字体Type 3 fonts: bitmap位图字体Computer Modern (CM) fonts: Computer Modern 字体，由高德纳设计。它的一大优点是拥有非常完备的数学符号集。该字体是使用METAFONT语言（也是Knuth开发的）创建的。不幸的是，METAFONT从未在打印机中广泛使用（不像PostScript那样）。所以在使用dvips生成PostScript时，Computer Modern字体的栅格化（从METAFONT转换为Type 3 bitmap）通常是较旧的（pre-teTEX 2.0）LATEX系统的默认行为。当LATEX系统使用此类Type 3字体时，生成的PostScript（或PDF）文件将不会总是在每台打印机上产生最佳质量，因为栅格化（rasterization）过程仅对于给定的打印分辨率才是最佳的。CM-Super fonts: 2001年由Vladimir Volovich公开发布，它拓展了 Computer Modern 字体集并且完全使用type 1字体。CM-Super字体集支持一些原先Computer Modern中不支持的字体和字形（如bold smallcaps字形，见下图）。当使用T1编码想去获取拓展字形的时候，需要引入以下两行以获取Type 1版本的CM字体： 12\\usepackage{type1ec}\\usepackage[T1]{fontenc} 字体编码传统使用 fontenc 宏包来切换字体编码，默认的是高德纳设计的 Computer Modern 字体(OT1)。 xelatex 和 lualatex 使用 fontspec 宏包满足用户设置字体的需求，支持直接调用系统和Texlive中的.ttf或.otf格式字体。 常用字体编码集OT1: TeX textT1: TeX extended textcmr: Computer Modern Romancmss: Computer Modern Sanscmtt: Computer Modern Typewriterptm: Adobe Timesphv: Adobe Helveticapcr: Adobe Courier 字体大小对应关系1磅=0.35mm1英寸=72磅=25.4mm10pt = 3.52mm = 0.352 cm 字号、磅数与大小像素对应表 中文字号 英文字号(磅) 毫米 像素 初号 42pt 14.82mm 56px 小初 36pt 12.70mm 48px 一号 26pt 9.17mm 34.7px 小一 24pt 8.47mm 32px 二号 22pt 7.76mm 29.3px 小二 18pt 6.35mm 24px 三号 16pt 5.64mm 21.3px 三号 16pt 5.64mm 21.3px 小三 15pt 5.29mm 20px 四号 14pt 4.94mm 18.7px 小四 12pt 4.23mm 16px 五号 10.5pt 3.70mm 14px 小五 9pt 3.18mm 12px 六号 7.5pt 2.56mm 10px 小六 6.5pt 2.29mm 8.7px 七号 5.5pt 1.94mm 7.3px 八号 5pt 1.76mm 6.7px 常用字体大小控制命令对应表size 10pt (default) 11pt option 12pt option\\tiny 5pt 6pt 6pt 七号\\scriptsize 7pt 8pt 8pt 小六号\\footnotesize 8pt 9pt 10pt 六号\\small 9pt 10pt 11pt 小五号\\normalsize 10pt 11pt 12pt 五号\\large 12pt 12pt 14pt 小四号\\Large 14pt 14pt 17pt 四号\\LARGE 17pt 17pt 20pt 三号\\huge 20pt 20pt 25pt 二号\\Huge 25pt 25pt 25pt 一号 1.2 Word 字体在一些Word版本或软件中，不支持中文字体名，比如宋体、仿宋等，而是显示成 SimSun，FangSong等，需要注意。 图片2.1 LaTeX图片裁剪在\\includegraphics命令的参数中使用trim进行裁剪：参数顺序为 左 下 右 上例： 1\\includegraphics[witdh=\\linewidth,trim=0 10cm 0 0.5cm]{FigName} LaTeX图片加边框1\\fbox 2.2 Word插图Word插入图片可分为嵌入式和非嵌入式两种。参考：https://zhuanlan.zhihu.com/p/35979312 显示不全的图片Word插入图片有时只显示最下面一行，原因大多数是行距设置成了固定值，使用 Ctrl+1 给图片设置单倍行距（或设置图片样式为单倍行距，再设置图片样式） 表格3.1 LaTeX 表格控制字体大小：在begin{tabular} 前面添加控制字体大小命令，如 \\scriptsize 3.2 Word 三线表首先绘制一个Word表格： 然后将边框全部取消，选择1磅的画笔绘制顶部和底部两条框线。然后选用0.5磅的框线绘制内部标题和内容的框线： 遇到这样小标题间的连线重合的情况，将他们的分割线中线增加3磅宽度，笔颜色设为白色： 禁止表格分页右键表格属性 &gt; 行 &gt; 取消勾选“允许跨页断行” 编号与引用4.1 LaTeX编号LaTeX使用enumerate环境进行有序编号，itemize环境进行无序编号 自定义编号123456\\begin{enumerate}\\def\\labelenumi{\\arabic{enumi}.}\\setcounter{enumi}{1}\\item 实验验证\\end{enumerate} 4.2 Word编号图表链接章节编号在插入章节编号后出现“错误!文档中没有指定样式的文字。”的字样，需要右键-&gt;编辑域-&gt;StyleRef-&gt;域属性选择要链接的样式名（如u正文1级标题），确定后，选中F9刷新即可。 对于每一章节开始的第一个图表标注为1，需要右键编辑域-&gt;将\\s 1修改为\\r 1，对于后面的图标序号，应标注为\\n，这样就能顺序编号了 公式数学公式是 LaTeX 的强项。在数学公式中，一般变量都是斜体，只有函数是正体。而在 LaTeX 中自动就会用斜体表示。在 Word 中，可以给变量设置斜体，但是之后在统一调整格式的时候会被统一调整，所以 Word 对于数学变量使用 MathType 或自带公式模式。 公式右编号Word 自带公式新建题注标签为公式左括号（使用添加题注的方式增加序号，然后补全右括号）在公式结束位置添加井号#，然后将序号 Ctrl+X Ctrl+V 到公式的#后，回车即可。之后的序号变动 Word 会自动更新。 MathTypeMathType 有自动插入标号的能力，不过关于标号右对齐，则需要手动设置段落的制表位来实现。 算法WordWord中通过表格来实现，在表格中设置制表位来控制缩进在表格中移动到下一制表位与正文中按键稍有不同，正文中是按 Tab 即可，表格中需要 Ctrl + Tab 参考文献WordWord 推荐采用参考文献编为列表，然后文中使用交叉引用。 Word中查找引用采用通配符^#表示数字，查找所有交叉引用：[^#]查找第9条交叉引用: [9] 即可 批量替换引用处为上脚标由于刚刚插入的交叉引用没有设置上脚标，所以每次都需要选中后按 Ctrl+Shift+= 设置一下，这样操作比较繁琐。优化方法是首先不管上脚标的事，做好所有参考文献的引用之后批量设置格式，具体步骤： 第一步：Ctrl+H，更多里打开“使用通配符” 第二步：查找内容处：\\[[0-9]{1,2}\\] 第三步：鼠标点击“替换为”后的框框 第四步：同时按住“Ctrl”“Shift”“=”，框框下就会显示“上标” 第五步：全部替换 文献次序调整选中文献那一整行，鼠标拖动即可 git版本管理由于latex是文本形式文件，所以天然适合使用git进行版本管理。 而对于office格式的非文本文件，直接使用git管理会将其看作二进制文件，既无法及时预览也无法查看修改历史。对于word而言，可以使用pandoc将其转化为markdown文件来管理。这里需要设置git钩子，使得每次提交的时候都能将.doc/.docx文件自动使用pandoc命令转化为.md文件并添加（amend）这次提交中，方法： 安装pandoc 拷贝pre-commit和post-commit文件或添加软链接到当前仓库的 .git/hooks 文件夹下：12ln -s ~/Clouds/my-config-files-for-linux/git_hooks/pre-commit-git-diff-docx.sh pre-commitln -s ~/Clouds/my-config-files-for-linux/git_hooks/post-commit-git-diff-docx.sh post-commit 注意添加软链接时要保证两个源文件pre-commit-git-diff-docx.sh和post-commit-git-diff-docx.sh的可执行权限。 对于diff的功能可以添加alias来实现，方法如下：1.编辑.git/config添加对diff 12345[diff &quot;pandoc&quot;] textconv=pandoc --to=markdown prompt=false[alias] wdiff = diff --word-diff=color --unified=1 2.添加.gitattributes文件添加diff docx文件时使用pandoc 1*.docx diff=pandoc word editing tips‘Ctrl+Z’: Undo last edit‘Shift+F5’: Go back to last cursor position (after click the super-link and you want to redirect to the previous location) 一份（不太）简短的LaTeX指南 p.63： http://ctan.math.utah.edu/ctan/tex-archive/info/lshort/chinese/lshort-zh-cn.pdfLaTeX 2e font selection: https://www.latex-project.org/help/documentation/fntguide.pdfhttp://ctan.mirrors.hoobly.com/macros/latex/contrib/IEEEtran/testflow/testflow_doc.pdf如何实现docx文档的版本管理：https://xiaofengwo.github.io/2018/03/18/howtotrackdocxfilewithgit/","link":"/2020-11-06-LaTeX-for-writing-paper/"},{"title":"C++ Notes --- Function Pointers","text":"在多链的源码中，多次出现函数指针的身影： 123456789101112typedef json_spirit::Value(*rpcfn_type)(const json_spirit::Array&amp; params, bool fHelp);class CRPCCommand{public: std::string category; std::string name; rpcfn_type actor; bool okSafeMode; bool threadSafe; bool reqWallet;}; 阅读的难点在于，源码中的 json_spirit::Value 和 (*rpcfn_type)(const json_spirit::Array&amp; params, bool fHelp) 中间没有空格。 调用函数指针，获取结果： 1json_spirit::Value result = pcmd-&gt;actor(params, false);","link":"/2020-12-16-Cpp-notes-Function-pointers/"},{"title":"Design patterns ── Singleton","text":"单例模式是最常用的设计模式之一，同时也是面试中最容易考到的设计模式。 下面介绍几种典型的单例模式实现。 一、懒汉单例模式懒汉是指在第一次使用（调用getInstance()）时才会创建单例对象。 12345678910111213// Lazy man Singletonpublic class LazyManSingleton { private LazyManSingleton lazyManSingleton; private LazyManSingleton() {} public LazyManSingleton getInstance() { if (lazyManSingleton == null){ lazyManSingleton = new LazyManSingleton(); } return lazyManSingleton; }} 二、饿汉单例模式与懒汉不同，饿汉是在类中就已经创建好了这个类的单例对象，使用时全是调用该对象。 12345678910// Hungry man Singletonpublic class HungryManSingleton { private HungryManSingleton lazyManSingleton = new HungryManSingleton(); private HungryManSingleton() {} public HungryManSingleton getInstance() { return hungryManSingleton; }} 上述两种属于最简单的单例模式写法，各有优缺点： 在资源使用方面，懒汉单例是在外部调用到时才初始化创建对象；而饿汉式在类加载阶段就创建了对象，所以饿汉式的缺点是可能会浪费堆内存。 在多线程访问方面，饿汉式能保证线程安全；而懒汉式在多个线程第一次同时访问时，可能产生多个对象，所以缺点是线程不安全。 不过我们可以通过加同步锁保证懒汉式的安全性，下面介绍第三种单例模式写法： 三、volatile+双重检查锁单例模式 1234567891011121314151617// Double check Singletonpublic class DoubleCheckSingleton { private volatile static DoubleCheckSingleton doubleCheckSingleton; private DoubleCheckSingleton() {} public static DoubleCheckSingleton getInstance() { if(doubleCheckSingleton == null) { synchronized(DoubleCheckSingleton.class) { if(doubleCheckSingleton == null) { doubleCheckSingleton = new DoubleCheckSingleton(); } } } return doubleCheckSingleton; }} 这里比较关键的写法有3处，一是将单例对象设置为了volatile类型，二是两次判定doubleCheckSingleton == null，三是同步锁synchronized锁住DoubleCheckSingleton.class。讲解的时候倒过来讲。 synchronized 要锁住什么呢？synchronized 关键字可以锁方法、锁变量、锁代码块。锁方法getInstance() 可以吗？是可以的，但缺点是每次调用对象都会锁一次，效率很低。我们只需要在创建时锁住。锁变量呢？synchronized(doubleCheckSingleton)，这是不行的，由于已经判断出了doubleCheckSingleton == null为真，所以这等价于synchronized(null)，等于没有锁东西。 为什么需要两次判定？因为第一个if判断拦不住多个线程，而synchronized锁只是在有线程占用的时候阻止了其他线程，当占用线程执行完毕，其他线程就能继续执行。如果没有第二个if拦截，依然会（顺序）创建多个对象。所以需要第二个if拦截调后面的线程。类似单片机编程中的防抖写法。 为什么将单例对象设置成volatile类型？这里用到了 volatile 的“禁止指令重排”特性。因为赋值语句 doubleCheckSingleton = new DoubleCheckSingleton(); 解析为字节码指令分为三步执行：(a) 分配新对象的堆内存 new(b) 初始化新对象 DoubleCheckSingleton()(c) 设置引用doubleCheckSingleton指向新分配的内存地址在多线程情况下，jvm随时可能进行优化重排。假如(b)和(c)调换了位置，由于 synchronized 锁住的是类，即(b)，而(c)是没有锁的，所以当线程1先执行了(a)(c)后暂停；而线程2判定doubleCheckSingleton不为空，直接返回了一个未被初始化的对象。所以需要使用volatile关键字禁止这样的指令优化重排。 爱思考的同学可能会想，既然懒汉式可以通过改进变成线程安全的，那么饿汉式能不能也改进克服资源浪费的缺点呢？答案是可以的。下面介绍第四和第五种单例模式写法： 四、静态内部类 1234567891011121314// Internal static class singletonpublic class InternalStaticSingleton { private InternalStaticSingleton() {} public static InternalStaticSingleton getInstance() { return InternalStatic.instance; } private static class InternalStatic { private static final InternalStaticSingleton instance = new InternalStaticSingleton(); }} 利用java对static的单例支持来实现单例模式。 五、内部枚举类 12345678910111213141516171819202122// Internal enum class singletonpublic class InternalEnumSingleton { private InternalEnumSingleton() {} public static InternalEnumSingleton getInstance() { return InternalEnum.INSTANCE.getInstance(); } private enum InternalEnum { INSTANCE; private InternalEnumSingleton singleton; InternalEnum() { singleton = new InternalEnumSingleton(); } public InternalEnumSingleton getInstance() { return singleton; } }} 单例模式实例应用 —- Eureka源码项目DiscoveryManager.javaDiscoveryManager 的作用是通过读取配置文件来配置 Discovery Client。这里 DiscoveryManager 作为管理员，只需要一个对象就可以了，所以源码中使用了饿汉式单例模式来实现： 1234567891011121314151617181920212223242526/** * &lt;tt&gt;Discovery Manager&lt;/tt&gt; configures &lt;tt&gt;Discovery Client&lt;/tt&gt; based on the * properties specified. * * &lt;p&gt; * The configuration file is searched for in the classpath with the name * specified by the property &lt;em&gt;eureka.client.props&lt;/em&gt; and with the suffix * &lt;em&gt;.properties&lt;/em&gt;. If the property is not specified, * &lt;em&gt;eureka-client.properties&lt;/em&gt; is assumed as the default. * * @author Karthik Ranganathan * */public class DiscoveryManager { private static final DiscoveryManager s_instance = new DiscoveryManager(); private DiscoveryManager() { } public static DiscoveryManager getInstance() { return s_instance; } ...... } 考虑并发的情况ConfigurationManager.java在 DynamicPropertyFactory 中调用时加同步锁： 123synchronized (ConfigurationManager.class) { AbstractConfiguration configFromManager = ConfigurationManager.getConfigInstance();} 单例模式典型应用 —- 操作数据库例：SPESC-Java-Contract-Service 项目1234567891011public class ContractDAO { private static final ContractDAO s_instance = new ContractDAO(); private ContractDAO() {} public static ContractDAO getInstance() { return s_instance; } ...} 使用： 12345private final ContractDAO contractDAO = ContractDAO.getInstance();public boolean addContract(Object contract) { return contractDAO.putContract((ContractTemplate) contract);} 例：JavaContract项目以 LevelDB 为例，每次新建一个数据库操作对象的时候都会在磁盘中新建一个数据库。如果只操作一个数据库，那么程序中只能存在一个全局对象，这就可以利用单例模式的方法来编写程序。 1. 类的定义类的定义没有什么特殊的地方。src/contracts/contracts_db_wrapper.h 2. 对象的声明是通过全局对象来声明的。 src/chainparams/state.h 1234567891011121314151617181920212223242526typedef struct mc_State{ mc_State() { InitDefaults(); } ~ mc_State() { Destroy(); } ... ContractsDB *m_Contracts; void InitDefaults() { ... m_Contracts = NULL; } void Destroy() { ... if (m_Contracts) { delete m_Contracts; } }} src/contracts/contracts_db_wrapper.cpp 123456void ContractsItem::Zero(){ ... contracts_DB = new mc_Database; mc_GetFullFileName(name, &quot;contracts&quot;, &quot;.db&quot;, MC_FOM_RELATIVE_TO_DATADIR|MC_FOM_CREATE_DIR, m_FileName);} 由此可以看出，单例模式是一种思想，具体实现不拘泥与教科书上的几种形式。 3. 对象的使用在系统初始化的时候新建这个对象src/core/init-cold.cpp 12345if(mc_gState-&gt;m_Contracts-&gt;Initialize(mc_gState-&gt;m_Params-&gt;NetworkName())){ seed_error=strprintf(&quot;ERROR: Couldn&apos;t initialize contract database for blockchain %s. Please restart multichaind with reindex=1.\\n&quot;,mc_gState-&gt;m_Params-&gt;NetworkName()); return InitError(_(seed_error.c_str()));} 单例模式经典应用 —- 配置文件读取参考文章： 用单例模式来讲讲线程安全 线程安全，饿汉式，懒汉式 synchronized到底锁住的是谁？ 深入理解 Java 之 synchronized 到底锁住了什么 【死磕Java并发】——-深入分析synchronized的实现原理 Java并发编程：volatile关键字解析 同步方法","link":"/2020-5-20-Design-patterns-singleton/"},{"title":"Shellchain笔记：序列化与反序列化","text":"leveldb的储存仅支持字符串和leveldb切片（即bytes），交易作为自定义类型，存储到数据库中需要进行序列化，从数据库中恢复需要反序列化。 在 streams.h 中也有定义 CDataStream： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275/** Double ended buffer combining vector and stream-like interfaces. * * &gt;&gt; and &lt;&lt; read and write unformatted data using the above serialization templates. * Fills with data in linear time; some stringstream implementations take N^2 time. */class CDataStream{protected: typedef CSerializeData vector_type; vector_type vch; unsigned int nReadPos;public: int nType; int nVersion; typedef vector_type::allocator_type allocator_type; typedef vector_type::size_type size_type; typedef vector_type::difference_type difference_type; typedef vector_type::reference reference; typedef vector_type::const_reference const_reference; typedef vector_type::value_type value_type; typedef vector_type::iterator iterator; typedef vector_type::const_iterator const_iterator; typedef vector_type::reverse_iterator reverse_iterator; explicit CDataStream(int nTypeIn, int nVersionIn) { Init(nTypeIn, nVersionIn); } CDataStream(const_iterator pbegin, const_iterator pend, int nTypeIn, int nVersionIn) : vch(pbegin, pend) { Init(nTypeIn, nVersionIn); }#if !defined(_MSC_VER) || _MSC_VER &gt;= 1300 CDataStream(const char* pbegin, const char* pend, int nTypeIn, int nVersionIn) : vch(pbegin, pend) { Init(nTypeIn, nVersionIn); }#endif CDataStream(const vector_type&amp; vchIn, int nTypeIn, int nVersionIn) : vch(vchIn.begin(), vchIn.end()) { Init(nTypeIn, nVersionIn); } CDataStream(const std::vector&lt;char&gt;&amp; vchIn, int nTypeIn, int nVersionIn) : vch(vchIn.begin(), vchIn.end()) { Init(nTypeIn, nVersionIn); } CDataStream(const std::vector&lt;unsigned char&gt;&amp; vchIn, int nTypeIn, int nVersionIn) : vch(vchIn.begin(), vchIn.end()) { Init(nTypeIn, nVersionIn); } void Init(int nTypeIn, int nVersionIn) { nReadPos = 0; nType = nTypeIn; nVersion = nVersionIn; } CDataStream&amp; operator+=(const CDataStream&amp; b) { vch.insert(vch.end(), b.begin(), b.end()); return *this; } friend CDataStream operator+(const CDataStream&amp; a, const CDataStream&amp; b) { CDataStream ret = a; ret += b; return (ret); } std::string str() const { return (std::string(begin(), end())); } // // Vector subset // const_iterator begin() const { return vch.begin() + nReadPos; } iterator begin() { return vch.begin() + nReadPos; } const_iterator end() const { return vch.end(); } iterator end() { return vch.end(); } size_type size() const { return vch.size() - nReadPos; } bool empty() const { return vch.size() == nReadPos; } void resize(size_type n, value_type c=0) { vch.resize(n + nReadPos, c); } void reserve(size_type n) { vch.reserve(n + nReadPos); } const_reference operator[](size_type pos) const { return vch[pos + nReadPos]; } reference operator[](size_type pos) { return vch[pos + nReadPos]; } void clear() { vch.clear(); nReadPos = 0; } iterator insert(iterator it, const char&amp; x=char()) { return vch.insert(it, x); } void insert(iterator it, size_type n, const char&amp; x) { vch.insert(it, n, x); } void insert(iterator it, std::vector&lt;char&gt;::const_iterator first, std::vector&lt;char&gt;::const_iterator last) { assert(last - first &gt;= 0); if (it == vch.begin() + nReadPos &amp;&amp; (unsigned int)(last - first) &lt;= nReadPos) { // special case for inserting at the front when there&apos;s room nReadPos -= (last - first); memcpy(&amp;vch[nReadPos], &amp;first[0], last - first); } else vch.insert(it, first, last); }#if !defined(_MSC_VER) || _MSC_VER &gt;= 1300 void insert(iterator it, const char* first, const char* last) { assert(last - first &gt;= 0); if (it == vch.begin() + nReadPos &amp;&amp; (unsigned int)(last - first) &lt;= nReadPos) { // special case for inserting at the front when there&apos;s room nReadPos -= (last - first); memcpy(&amp;vch[nReadPos], &amp;first[0], last - first); } else vch.insert(it, first, last); }#endif iterator erase(iterator it) { if (it == vch.begin() + nReadPos) { // special case for erasing from the front if (++nReadPos &gt;= vch.size()) { // whenever we reach the end, we take the opportunity to clear the buffer nReadPos = 0; return vch.erase(vch.begin(), vch.end()); } return vch.begin() + nReadPos; } else return vch.erase(it); } iterator erase(iterator first, iterator last) { if (first == vch.begin() + nReadPos) { // special case for erasing from the front if (last == vch.end()) { nReadPos = 0; return vch.erase(vch.begin(), vch.end()); } else { nReadPos = (last - vch.begin()); return last; } } else return vch.erase(first, last); } inline void Compact() { vch.erase(vch.begin(), vch.begin() + nReadPos); nReadPos = 0; } bool Rewind(size_type n) { // Rewind by n characters if the buffer hasn&apos;t been compacted yet if (n &gt; nReadPos) return false; nReadPos -= n; return true; } // // Stream subset // bool eof() const { return size() == 0; } CDataStream* rdbuf() { return this; } int in_avail() { return size(); } void SetType(int n) { nType = n; } int GetType() { return nType; } void SetVersion(int n) { nVersion = n; } int GetVersion() { return nVersion; } void ReadVersion() { *this &gt;&gt; nVersion; } void WriteVersion() { *this &lt;&lt; nVersion; } CDataStream&amp; read(char* pch, size_t nSize) { // Read from the beginning of the buffer unsigned int nReadPosNext = nReadPos + nSize; if (nReadPosNext &gt;= vch.size()) { if (nReadPosNext &gt; vch.size()) { throw std::ios_base::failure(&quot;CDataStream::read() : end of data&quot;); } memcpy(pch, &amp;vch[nReadPos], nSize); nReadPos = 0; vch.clear(); return (*this); } memcpy(pch, &amp;vch[nReadPos], nSize); nReadPos = nReadPosNext; return (*this); } CDataStream&amp; ignore(int nSize) { // Ignore from the beginning of the buffer assert(nSize &gt;= 0); unsigned int nReadPosNext = nReadPos + nSize; if (nReadPosNext &gt;= vch.size()) { if (nReadPosNext &gt; vch.size()) throw std::ios_base::failure(&quot;CDataStream::ignore() : end of data&quot;); nReadPos = 0; vch.clear(); return (*this); } nReadPos = nReadPosNext; return (*this); } CDataStream&amp; write(const char* pch, size_t nSize) { // Write to the end of the buffer vch.insert(vch.end(), pch, pch + nSize); return (*this); } template&lt;typename Stream&gt; void Serialize(Stream&amp; s, int nType, int nVersion) const { // Special case: stream &lt;&lt; stream concatenates like stream += stream if (!vch.empty()) s.write((char*)&amp;vch[0], vch.size() * sizeof(vch[0])); } template&lt;typename T&gt; unsigned int GetSerializeSize(const T&amp; obj) { // Tells the size of the object if serialized to this stream return ::GetSerializeSize(obj, nType, nVersion); } template&lt;typename T&gt; CDataStream&amp; operator&lt;&lt;(const T&amp; obj) { // Serialize to this stream ::Serialize(*this, obj, nType, nVersion); return (*this); } template&lt;typename T&gt; CDataStream&amp; operator&gt;&gt;(T&amp; obj) { // Unserialize from this stream ::Unserialize(*this, obj, nType, nVersion); return (*this); } void GetAndClear(CSerializeData &amp;data) { data.insert(data.end(), begin(), end()); clear(); }};","link":"/2020-Dec-7th-Shellchain-note-serialize-unserialize/"},{"title":"Chrome 浏览器插件推荐","text":"Several extensions that I use frequently. Ad-block plus屏蔽百度热搜 123www.baidu.com##div[tpl=&quot;right_toplist1&quot;]www.baidu.com##div[tpl=&quot;right_toplist&quot;]www.baidu.com##div[class=&quot;cr-content&quot;] 屏蔽知乎热搜 1www.zhihu.com##div[class=&quot;Card TopSearch TopSearch--new&quot;] 补：一些常用快捷键Alt+Left/Right 用于单标签浏览时回退到前一条和快进到后一条Alt+Tab 切换标签页Alt+W 关闭当前标签页","link":"/2020-May-30-Chrome-extensions/"},{"title":"C/C++ 开源项目构建","text":"构建 C/C++ 开源项目目前有两大类，一是gnu build tools，二是cmake。 GNU Build Toolsconfigure.ac &amp;&amp; m4使用dnl表示注释 一些编译宏的解释AC_COMPILE_IFELSE(input, [action-if-true], [action-if-false])根据对input进行编译，如果成功则执行action-if-true，如果失败则执行action-if-false AC_SUBST 将定义的变量赋值到makefile中 AC_DEFINE_UNQUOTED或AC_DEFINE 添加宏定义，如 AC_DEFINE_UNQUOTED([ENABLE_WALLET],[1],[Define to 1 to enable wallet functions]) 等价于 #define ENABLE_WALLET 1所不同的是，AC_DEFINE_UNQUOTED 支持shell语言的替换，如：variable expansion (‘$’), command substitution (‘`’), and backslash escaping (‘\\’) Cmake","link":"/2021-Apr-11th-Make-open-source-c-cpp-project/"},{"title":"数据结构与算法笔记 | 分治","text":"分治思想又被称为分类讨论，将复杂问题分为易于讨论的简单子问题，不仅是计算机学科，在解决数理问题中的应用都很广泛。 1. 分类讨论状态LC 58 最后一个单词的长度 1234567891011121314151617181920212223242526272829303132#define MAX_N 10002char word[MAX_N];class Solution {public: int lengthOfLastWord(string s) { int N = s.size(); int state = 0; // 0：待读取字符串，1：字符串读取完毕，2：正在读取字符串 memset(word, 0, sizeof(word)); for(int i=0,j=0; i&lt;N; ++i) { if(s[i]==&apos; &apos;) { if(state == 2) { state = 1; } } else { if(state == 0) { word[j++] = s[i]; state = 2; } else if(state == 1) { memset(word, 0, sizeof(word)); j = 0; word[j++] = s[i]; state = 2; } else { word[j++] = s[i]; } } } return strlen(word); }}; 2. 分类讨论余数r的情况统计1-n的n个数中出现的1的次数 123456789101112131415161718192021222324typedef long long ll;class Solution {public: int countDigitOne(int n) { int res = 0; ll base = 1; int rebuild = 0; while(n &gt; 0) { int r = n % 10; n /= 10; rebuild += r*base; if (r == 0) { res += n*base; } else if(r==1) { res += n*base+(rebuild-base+1); } else { res += (n+1)*base; } base *= 10; } return res; }};","link":"/2021-Apr-19-Data-structure-and-algorithms-divide-and-conquer/"},{"title":"从C++到Java —— C系列编程语言辨析总结","text":"学习了各个主流编程语言后，经常学了这个忘了那个，故写此文对各语言进行总结和辨析。 基本类型Java 拥有8大基本类型：byte, boolean, char, short, int, long, float, doubleC++ 的基本类型包括：bool, (signed) char, (unsigned) short, (unsigned) int, (unsigned) long, float, doubleC语言的基本数据类型有：(signed) char, (unsigned) short, (unsigned) int, (unsigned) long, float, double 注意，布尔类型Java叫boolean，C++叫bool，C语言默认没有。字符类型Java使用双字节存储，而C/C++则使用单字节存储。Java拥有字节类型byte，而C/C++没有。 数组Java创建一个长度为n的数组： 1boolean[] flags = new boolean[n]; Java创建数组的方式非常单一，就是在堆内存中开辟一段空间，然后赋值给一个引用。而C/C++中更加常用的是创建栈空间数组： 12int nums[3] = {1,2,3};int *cnt = {1,2,3}; 唯一不太灵活的地方是无法指定一个变量作为栈空间数组的大小（因为编译生成函数栈时就需要确定栈区大小） 所以，C/C++也是支持在堆空间中创建数组滴～ 但是注意，别忘了用完后释放内存！重新申请了新地址拷贝过去后也要释放原来地址的内存！C++创建一个长度为n的数组： 123bool *flags = new bool[n];...delete[] flags; C语言创建一个长度为n的数组： 1char *flags = (char *)malloc(n * sizeof(char)); 由于C/C++通过指针创建数组，所以没法根据指针获得数组长度，而Java获取数组长度的方法为 1int len = flags.length; 指针C语言的概念，C++中引入了智能指针。Java采用引用替代了指针。 全局变量C/C++中，在函数外部定义的变量称为全局变量，或外部变量。全局变量储存在静态存储区，在文件作用域范围内都能访问到。Java为完全面向对象语言，不能在类作用域的外部定义全局变量。不过Java可以通过单例模式实现全局唯一对象。 类和对象Java 根据类实例化一个对象的一般做法： 1Test test = new Test(); C++根据类实例化一个对象的一般做法： 1Test test = Test(); 注意，C++中的new关键字是用来分配内存的，和delete关键字相对应；类似于C语言的malloc和free函数；而Java语言拥有垃圾回收机制，一般不需要手动处理内存分配和回收。 常量Java中使用final来表示常量固定值对于集合类型的转化方法 1final List&lt;?&gt; constList = Collections.unmodifiableList(list); 接口Java传递接口作为参数的三种方法以sort函数中常用的比较器Comparator为例展示接口作为参数的3种实现方法。先看比较器的源码定义： 1234public interface Comparator&lt;T&gt; { int compare(T o1, T o2); ...} Lambda函数(最简洁)1234String[] strs = {&quot;dog&quot;, &quot;apple&quot;, &quot;cat&quot;};Arrays.sort(strs, (o1, o2)-&gt;{ return o2.comparesTo(o1);}); 这种方式比较特殊，仅用在接口里面只有一个抽象方法的情况。这种接口也成为Single Abstract Method（SAM）Interface。Java8中新引入了 @FunctionalInterface 用来帮助在编译阶段检查是否为SAM接口。 new接口，并重写接口方法（最常用） 1234567Integer arr[] = {2, 1, 3};Arrays.sort(arr, new Comparator&lt;Integer&gt;() { @Override public int compare(Integer n1, Integer n2) { return n2 - n1; }}); 接口实现类（最传统） 12345678Arrays.sort(list, new MyComparator());...class MyComparator implements Comparator&lt;Integer&gt; { @Override public int compare(Integer n1, Integer n2) { return n2 - n1; }} 常用类型字符串C语言使用指向字符类型的指针 char* 作为字符串，通过’\\0’ 标识字符串的末尾。C++标准库加入了 std::string 作为字符串。C语言和C++字符串之间的转化操作为： 12345char* hello_c = &quot;hello, C&quot;;std::string str = std::string(hello_c); // C转C++字符串std::string hello_cpp(&quot;hello, Cpp&quot;);const char* hello_cpp = hello_cpp.c_str(); // C++转C字符串，注意这里const指针表示不可以通过hello_cpp修改string的指针，但是string中内容修改是可以反映到hello_cpp的 到了Java语言，使用 java.lang.String 类作为常量字符串，涉及字符串修改的多用 java.lang.StringBuilder。 字符串常用操作去除前后字符串C语言和C++没有trim函数，需要手动处理 12345678void trim(char* str) { while(str[0] == &apos; &apos;) { str++; } while(str[strlen(str)-1] == &apos; &apos;) { str[strlen(str)-1] = 0; }} 字符串反转C++借用了std::reverse的反转功能实现字符串的反转 123cout &lt;&lt; str &lt;&lt; end;reverse(str.begin(), str.end());cout &lt;&lt; str &lt;&lt; end; 栈C语言没有提供stack，需要自己构建。C++标准库提供了stack。Java提供了Stack实现 std::stack （C++）获取栈顶元素top() 去除栈顶元素pop() 向栈中压入元素push(v) java.util.Stack弹出栈顶元素value = pop() 向栈压入元素push(v) 队列C++的栈和队列都是使用双端队列（deque）去实现的。Java提供了Queue接口，常用实现有LinkedList std::queue (C++)获取队首元素front() 加入队尾push(v) 从队首弹出pop() java.util.Queue获取队首元素top() 加入队尾push(v) 从队首弹出pop() 优先队列std::priority_queue (C++)获取队首元素： top()从队首弹出：pop() 集合C语言没有提供set，需要自己构建。C++标准库提供了set。Java提供了Set接口，实现类有HashSet。 std::set（C++）插入元素 insert(const value_type&amp; val) 删除元素 erase (const_iterator position) erase (const value_type&amp; val) 检查元素是否存在 const_iterator find (const value_type&amp; val) const iterator find (const value_type&amp; val)找不到则返回 set.end() 迭代器 java.util.Set插入元素boolean add(E e); 删除元素boolean remove(Object o); 检查元素是否存在boolean contains(Object o); 内存数据区","link":"/2021-Apr-5th-C-Cpp-Java/"},{"title":"设计模式 之 门面模式","text":"门面（façade，读作[fasad]）设计模式，又称为外观设计模式，属于结构性设计模式的一种。门面设计模式通过将对系统的一系列操作封装成门面（外观）类，方便外部使用类对系统功能接口的调用。 产生背景如下类图所示，一个系统中拥有多个子系统，每个子系统都有一系列操作供外部使用类（Client）调用。当子系统较多时，这种调用方式很不利于维护。 门面改造所以通过增加一个门面类，将多个子系统聚合起来，对所需的各种操作进行封装，如下图所示： 对门面模式的三个特征小结如下：1）子系统：子系统/模块的集合处理外观类指派的任务，是功能的实际提供者2）调用者：外观接口的调用类（Client）3）外观类：为调用者提供统一的调用接口，并将调用请求指派给适当的子系统对象（Facade）","link":"/2021-Dec-18th-Design-patterns-Facade/"},{"title":"Scala sbt 学习笔记","text":"几个基本概念 build definition 什么是构建？build.sbt文件采用类Scala语言编写。 scopes 什么是作用域？ task graph 什么是任务图 使用sbt在Java项目目录下输入 sbt 即可进入sbt的REPL(Read Eval Print Loop: 交互式解释器)环境REPL环境下，输入compile编译 Referenceshttps://www.scala-sbt.org/1.x/docs/sbt-by-example.htmlhttps://www.scala-sbt.org/1.x/docs/Running.html","link":"/2021-Dec-2nd-Scala-sbt-learning-note/"},{"title":"设计模式 之 访问者模式","text":"访问者模式允许在不改变对象的类定义的情况下，新增对于对象的操作。 主要意图是将数据结构和数据操作分离，适用于稳定的数据结构和易变的操作耦合问题。 以SPESC-Compiler项目中的TermVisitor为例： Parser在生成AST的过程中，访问到节点时通过调用visit方法，返回对应节点的对象。所以就需要重写访问对应节点context的visit方法 123456789public class ContractVisitor extends SpescBaseVisitor&lt;ContractDefinition&gt; { private Scope scope; @Override public ContractDefinition visitContractDefinition(SpescParser.ContractDefinitionContext ctx) { ... return new ContractDefinition(contractTitle, parties, terms); }} ContractDefinition中各种属性的填充也依赖于其子节点的visit方法。 通过对象的accept方法唤起visit方法 123456public &lt;T&gt; T accept(ParseTreeVisitor&lt;? extends T&gt; visitor) { if ( visitor instanceof SpescVisitor ) return ((SpescVisitor&lt;? extends T&gt;)visitor).visitContractDefinition(this); else return visitor.visitChildren(this);} 这里会判断访问者是否为根访问者SpescVisitor，如果是，则从顶端ContractDefinition开始访问如果不是，则访问child","link":"/2021-Feb-18th-Design-patterns-Visitor/"},{"title":"JVM language development","text":"开发基于JVM的声明式编程语言 PreRequisitesantlr4asm-plugin: https://github.com/kamiiel/asm-intellij-plugin/releases Intellij IDEA Install plugin from disk 排错记录编译过程没问题，执行时报错：Exception in thread “main” java.lang.ClassFormatError: Field “out” in class test has illegal signature “Ljava/io/PrintStream” 错误原因：在产生字节码的过程中，调用PrintStream忘记加分号 12methodVisitor.visitFieldInsn(GETSTATIC, &quot;java/lang/System&quot;, &quot;out&quot;, &quot;Ljava/io/PrintStream&quot;); 应为： 12methodVisitor.visitFieldInsn(GETSTATIC, &quot;java/lang/System&quot;, &quot;out&quot;, &quot;Ljava/io/PrintStream;&quot;); JVM结构1.类加载器2.运行时数据区3.执行引擎4.本地方法库 double和long需要占据2个slot，其余基本类型和引用都是1个slot。slot可以重复利用 垃圾回收（Garbage Collection）查看Java进程使用的垃圾回收器： 查看默认垃圾回收器 JVM字节码解析一个接口接口定义： 1234package edu.ustb.spesc.element;public interface InterfaceLook {} javap -v 结果： 123456789101112131415161718Classfile /home/wsd/STEM/Experiments/SPESC-Java-Compiler/compiler/target/test-classes/edu/ustb/spesc/element/InterfaceLook.class Last modified Apr 1, 2021; size 130 bytes MD5 checksum 849d09ca95f1ed5733cca527dce9ed9c Compiled from &quot;InterfaceLook.java&quot;public interface edu.ustb.spesc.element.InterfaceLook minor version: 0 major version: 52 flags: ACC_PUBLIC, ACC_INTERFACE, ACC_ABSTRACTConstant pool: #1 = Class #5 // edu/ustb/spesc/element/InterfaceLook #2 = Class #6 // java/lang/Object #3 = Utf8 SourceFile #4 = Utf8 InterfaceLook.java #5 = Utf8 edu/ustb/spesc/element/InterfaceLook #6 = Utf8 java/lang/Object{}SourceFile: &quot;InterfaceLook.java&quot; 一些操作码助记符：除了比较容易记住的 i=int, l=long, s=short, b=byte, c=char, f=float, d=double,还有 z=boolean, a=reference DUP这是一条直接操作操作数栈的指令，表示复制操作数栈栈顶的值，并插入到栈顶比如最常见的： 123Object create() { return new Object();} 编译后字节码如下： 12345Method java.lang.Object create() 0 new #1 // Class java.lang.Object 3 dup 4 invokespecial #4 // Method java.lang.Object.&lt;init&gt;()V 7 areturn 第0行通过new创建了一个Object类型的对象，并将其引用压入栈顶第3行复制栈顶的引用一份第4行调用invokespecial为Object的构造函数，这里会消耗一个引用所以第3行需要复制一份，不然调用invokespecial后会导致无法返回实例引用 解析一个类类定义： 1234package edu.ustb.spesc;public class bytecodeTest {} javap -v 结果： 12345678910111213141516171819202122232425262728293031323334353637383940Classfile /home/wsd/STEM/Experiments/SPESC-Java-Compiler/compiler/target/test-classes/edu/ustb/spesc/bytecodeTest.class Last modified Apr 1, 2021; size 291 bytes MD5 checksum 58439c875ed1b27cf7a5a68507efbf13 Compiled from &quot;bytecodeTest.java&quot;public class edu.ustb.spesc.bytecodeTest minor version: 0 major version: 52 flags: ACC_PUBLIC, ACC_SUPERConstant pool: #1 = Methodref #3.#13 // java/lang/Object.&quot;&lt;init&gt;&quot;:()V #2 = Class #14 // edu/ustb/spesc/bytecodeTest #3 = Class #15 // java/lang/Object #4 = Utf8 &lt;init&gt; #5 = Utf8 ()V #6 = Utf8 Code #7 = Utf8 LineNumberTable #8 = Utf8 LocalVariableTable #9 = Utf8 this #10 = Utf8 Ledu/ustb/spesc/bytecodeTest; #11 = Utf8 SourceFile #12 = Utf8 bytecodeTest.java #13 = NameAndType #4:#5 // &quot;&lt;init&gt;&quot;:()V #14 = Utf8 edu/ustb/spesc/bytecodeTest #15 = Utf8 java/lang/Object{ public edu.ustb.spesc.bytecodeTest(); descriptor: ()V flags: ACC_PUBLIC Code: stack=1, locals=1, args_size=1 0: aload_0 1: invokespecial #1 // Method java/lang/Object.&quot;&lt;init&gt;&quot;:()V 4: return LineNumberTable: line 3: 0 LocalVariableTable: Start Length Slot Name Signature 0 5 0 this Ledu/ustb/spesc/bytecodeTest;}SourceFile: &quot;bytecodeTest.java&quot; 由于JVM解析Java文件是按照行来解析的，一行Java代码可能对应多行字节码，所以设置 LineNumberTable 这个属性就是表示java文件的某行与字节码某行的对应关系。比如上面的显示 line 3: 0 就表示bytecodeTest.java的第3行对应解析到jvm字节码的第0行即 aload_0Slot是字节码中的存储单位，1个Slot大小为32bit（4 bytes） 使用ASM操作字节码methodVisitor.visitMethodInsn五个参数 INVOKE 调用函数的内部全类名 函数名 返回类型 是否接口调用 一些与标准文档的出入之处3.1 .用作结构体访问的操作符，用做结束符会冲突6.3 当事人描述中的 field 不止属于当事人，还可以作为合约的全局变量另外，在filed定义中 attribute : (constant | type)实际匹配过程应该是先匹配type，再匹配constant。否则如果出现类似 name : String 会将其匹配到constant所以程序中使用 name : (type | value) 的方式匹配name : IDENTIFIERtype : BOOLEAN (‘[‘ ‘]’) | INTEGER (‘[‘ ‘]’) ;value : NUMBER | STRING ;其中，(‘[‘ ‘]’)*用于匹配数组 6.8 有关系符号，但缺少关系表达式关系表达式属于谓词，可返回Yes,No,Unknown关系表达式中可再分所属关系和比较关系，所属关系的关键词是belongsTo，比较关系的关键词有 &gt; &gt;= &lt; &lt;= == !=所以在规则中添加了relationalExpression 实验探究 invokespecial 和 invokevirtual 的区别12345public class LibSayHello { public void sayHello() { System.out.println(&quot;Hello&quot;); }} bytecode如下： 12345678910111213public sayHello()V L0 LINENUMBER 5 L0 GETSTATIC java/lang/System.out : Ljava/io/PrintStream; LDC &quot;Hello&quot; INVOKEVIRTUAL java/io/PrintStream.println (Ljava/lang/String;)V L1 LINENUMBER 6 L1 RETURN L2 LOCALVARIABLE this Ledu/ustb/spesc/LibSayHello; L0 L2 0 MAXSTACK = 2 MAXLOCALS = 1 123456public class MainTest { public static void main(String[] args) { LibSayHello testObj = new LibSayHello(); testObj.sayHello(); }} bytecode如下： 12345678910111213141516171819public static main([Ljava/lang/String;)V L0 LINENUMBER 5 L0 NEW edu/ustb/spesc/LibSayHello DUP INVOKESPECIAL edu/ustb/spesc/LibSayHello.&lt;init&gt; ()V ASTORE 1 L1 LINENUMBER 6 L1 ALOAD 1 INVOKEVIRTUAL edu/ustb/spesc/LibSayHello.sayHello ()V L2 LINENUMBER 7 L2 RETURN L3 LOCALVARIABLE args [Ljava/lang/String; L0 L3 0 LOCALVARIABLE testObj Ledu/ustb/spesc/LibSayHello; L1 L3 1 MAXSTACK = 2 MAXLOCALS = 2 可以看到，init构造函数使用的是INVOKESPECIAL，普通方法sayHello使用的是INVOKEVIRTUAL 再来进行一层抽象，将LibHello写成接口的形式，类LibHelloImpl用于实现，此时测试main函数的bytecode变为如下： 12345678910111213141516171819public static main([Ljava/lang/String;)V L0 LINENUMBER 5 L0 NEW edu/ustb/spesc/LibHelloImpl DUP INVOKESPECIAL edu/ustb/spesc/LibHelloImpl.&lt;init&gt; ()V ASTORE 1 L1 LINENUMBER 6 L1 ALOAD 1 INVOKEINTERFACE edu/ustb/spesc/LibHello.sayHello ()V (itf) L2 LINENUMBER 7 L2 RETURN L3 LOCALVARIABLE args [Ljava/lang/String; L0 L3 0 LOCALVARIABLE testObj Ledu/ustb/spesc/LibHello; L1 L3 1 MAXSTACK = 2 MAXLOCALS = 2 可以看到对sayHello的调用由原来的invokespecial变成了invokeinterface 假如LibHello是abstract类呢？实验后可以发现，不管LibHelloImpl是否重写hello方法，对sayHello的调用都变回了invokevirtual并且只要LibHello不变，即使改变了LibHelloImpl，也不会触发对于MainTest的字节码重新编译 FunctionalInterface底层实现12345678910111213141516171819202122 ││ [Verified Entry Point]1.54% ↘│ 0x00007f6db5299a80: mov %eax,-0x14000(%rsp)2.23% │ 0x00007f6db5299a87: push %rbp0.80% │ 0x00007f6db5299a88: sub $0x30,%rsp ;*aload_1 │ ; - cn.wsd.benchmark.functionalinterface.TestMain::lambda$dynamicMethodCall$0@0 (line 30)2.00% ││ 0x00007f6db5299a8c: mov 0xc(%rdx),%eax ;*arraylength ││ ; - cn.wsd.benchmark.functionalinterface.TestMain::lambda$dynamicMethodCall$0@1 (line 30) ││ ; implicit exception: dispatches to 0x00007f6db5299aa00.94% ││ 0x00007f6db5299a8f: mov 0xc(%rsi),%esi ;*getfield offset ││ ; - cn.wsd.benchmark.functionalinterface.TestMain::lambda$dynamicMethodCall$0@3 (line 30)0.78% ││ 0x00007f6db5299a92: add %esi,%eax0.85% ││ 0x00007f6db5299a94: add $0x30,%rsp1.21% ││ 0x00007f6db5299a98: pop %rbp0.95% ││ 0x00007f6db5299a99: test %eax,0x177c7661(%rip) # 0x00007f6dcca61100 ││ ; {poll_return}0.74% ││╭ 0x00007f6db5299a9f: retq │││ 0x00007f6db5299aa0: callq 0x00007f6db5100a80 ; OopMap{rsi=Oop off=69} │││ ;*arraylength │││ ; - cn.wsd.benchmark.functionalinterface.TestMain::lambda$dynamicMethodCall$0@1 (line 30) │││ ; {runtime_call} │ │ 0x00007f6db5299aa5: nop │ │ 0x00007f6db5299aa6: nop 先看下总得分： 12345Benchmark Mode Cnt Score Error UnitsFunctionalInterfaceTest.dynamicMethodCall avgt 5 7.902 ± 0.807 ns/opFunctionalInterfaceTest.dynamicMethodCall:·asm avgt NaN ---FunctionalInterfaceTest.normalMethodCall avgt 5 4.139 ± 0.081 ns/opFunctionalInterfaceTest.normalMethodCall:·asm avgt NaN --- 函数式调用方式较差，但没有数量级上的差距。这比较符合预期。 normalMethod的汇编实现： 123456789101112131415161718192021222324252627282930c2, level 4, cn.wsd.benchmark.functionalinterface.CounterImpl::work, version 2, compile id 6875 # parm0: rdx:rdx = &amp;apos;[B&amp;apos; # [sp+0x20] (sp of caller) 0x00007fef9c3c9320: mov 0x8(%rsi),%r10d 0x00007fef9c3c9324: movabs $0x800000000,%r12 0x00007fef9c3c932e: add %r12,%r10 0x00007fef9c3c9331: xor %r12,%r12 0x00007fef9c3c9334: cmp %r10,%rax 0x00007fef9c3c9337: jne 0x00007fef9464b080 ; {runtime_call ic_miss_stub} 0x00007fef9c3c933d: data16 xchg %ax,%ax [Verified Entry Point] 1.51% 0x00007fef9c3c9340: mov %eax,-0x14000(%rsp) 5.94% 0x00007fef9c3c9347: push %rbp 0.04% 0x00007fef9c3c9348: sub $0x10,%rsp ;*synchronization entry ; - cn.wsd.benchmark.functionalinterface.CounterImpl::work@-1 (line 17) 1.49% ╭ 0x00007fef9c3c934c: mov 0xc(%rdx),%eax ; implicit exception: dispatches to 0x00007fef9c3c9362 5.46% │ 0x00007fef9c3c934f: add 0xc(%rsi),%eax ;*iadd {reexecute=0 rethrow=0 return_oop=0} │ ; - cn.wsd.benchmark.functionalinterface.CounterImpl::work@6 (line 17) 0.30% │ 0x00007fef9c3c9352: add $0x10,%rsp 1.39% │ 0x00007fef9c3c9356: pop %rbp 0.15% │ 0x00007fef9c3c9357: mov 0x108(%r15),%r10 5.24% │ 0x00007fef9c3c935e: test %eax,(%r10) ; {poll_return} 0.28% │ 0x00007fef9c3c9361: retq ↘ 0x00007fef9c3c9362: mov $0xfffffff6,%esi 0x00007fef9c3c9367: callq 0x00007fef94649e00 ; ImmutableOopMap{} ;*arraylength {reexecute=0 rethrow=0 return_oop=0} ; - cn.wsd.benchmark.functionalinterface.CounterImpl::work@1 (line 17) ; {runtime_call UncommonTrapBlob} 0x00007fef9c3c936c: hlt 调用它的地方： 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061c2, level 4, cn.wsd.benchmark.functionalinterface.jmh_generated.FunctionalInterfaceTest_normalMethodCall_jmhTest::normalMethodCall_avgt_jmhStub, version 4, compile id 6989 0x00007fef9c3d41e4: mov 0x40(%rsp),%r10 0x00007fef9c3d41e9: movzbl 0x94(%r10),%r11d ;*getfield isDone {reexecute=0 rethrow=0 return_oop=0} ; - cn.wsd.benchmark.functionalinterface.jmh_generated.FunctionalInterfaceTest_normalMethodCall_jmhTest::normalMethodCall_avgt_jmhStub@30 (line 192) ; implicit exception: dispatches to 0x00007fef9c3d4318 0x00007fef9c3d41f1: mov $0x1,%ebp 0x00007fef9c3d41f6: test %r11d,%r11d ╭ 0x00007fef9c3d41f9: jne 0x00007fef9c3d4258 ;*ifeq {reexecute=0 rethrow=0 return_oop=0} │ ; - cn.wsd.benchmark.functionalinterface.jmh_generated.FunctionalInterfaceTest_normalMethodCall_jmhTest::normalMethodCall_avgt_jmhStub@33 (line 192) │ 0x00007fef9c3d41fb: nopl 0x0(%rax,%rax,1) ;*aload_1 {reexecute=0 rethrow=0 return_oop=0} │ ; - cn.wsd.benchmark.functionalinterface.jmh_generated.FunctionalInterfaceTest_normalMethodCall_jmhTest::normalMethodCall_avgt_jmhStub@36 (line 193) 0.31% │↗ 0x00007fef9c3d4200: mov 0x50(%rsp),%r10 1.44% ││ 0x00007fef9c3d4205: mov 0x14(%r10),%r11d ;*getfield coder {reexecute=0 rethrow=0 return_oop=0} ││ ; - cn.wsd.benchmark.functionalinterface.FunctionalInterfaceTest::normalMethodCall@1 (line 29) ││ ; - cn.wsd.benchmark.functionalinterface.jmh_generated.FunctionalInterfaceTest_normalMethodCall_jmhTest::normalMethodCall_avgt_jmhStub@17 (line 190) 0.17% ││ 0x00007fef9c3d4209: mov 0x10(%r10),%r10d ;*getfield inBytes {reexecute=0 rethrow=0 return_oop=0} ││ ; - cn.wsd.benchmark.functionalinterface.FunctionalInterfaceTest::normalMethodCall@5 (line 29) ││ ; - cn.wsd.benchmark.functionalinterface.jmh_generated.FunctionalInterfaceTest_normalMethodCall_jmhTest::normalMethodCall_avgt_jmhStub@17 (line 190) 5.39% ││ 0x00007fef9c3d420d: mov 0x8(%r12,%r11,8),%r9d ; implicit exception: dispatches to 0x00007fef9c3d42d4 7.70% ││ 0x00007fef9c3d4212: cmp $0xfa768,%r9d ; {metadata(&amp;apos;cn/wsd/benchmark/functionalinterface/CounterImpl&amp;apos;)} ││ 0x00007fef9c3d4219: jne 0x00007fef9c3d4291 5.56% ││ 0x00007fef9c3d421b: lea (%r12,%r11,8),%rsi ;*invokeinterface work {reexecute=0 rethrow=0 return_oop=0} ││ ; - cn.wsd.benchmark.functionalinterface.FunctionalInterfaceTest::normalMethodCall@8 (line 29) ││ ; - cn.wsd.benchmark.functionalinterface.jmh_generated.FunctionalInterfaceTest_normalMethodCall_jmhTest::normalMethodCall_avgt_jmhStub@17 (line 190) 0.05% ││ 0x00007fef9c3d421f: mov %r10,%rdx 1.49% ││ 0x00007fef9c3d4222: shl $0x3,%rdx ;*getfield inBytes {reexecute=0 rethrow=0 return_oop=0} ││ ; - cn.wsd.benchmark.functionalinterface.FunctionalInterfaceTest::normalMethodCall@5 (line 29) ││ ; - cn.wsd.benchmark.functionalinterface.jmh_generated.FunctionalInterfaceTest_normalMethodCall_jmhTest::normalMethodCall_avgt_jmhStub@17 (line 190) 0.11% ││ 0x00007fef9c3d4226: nop 5.45% ││ 0x00007fef9c3d4227: callq 0x00007fef9464ad80 ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [8]=Oop } ││ ;*invokeinterface work {reexecute=0 rethrow=0 return_oop=0} ││ ; - cn.wsd.benchmark.functionalinterface.FunctionalInterfaceTest::normalMethodCall@8 (line 29) ││ ; - cn.wsd.benchmark.functionalinterface.jmh_generated.FunctionalInterfaceTest_normalMethodCall_jmhTest::normalMethodCall_avgt_jmhStub@17 (line 190) ││ ; {optimized virtual_call} 1.63% ││ 0x00007fef9c3d422c: mov 0x8(%rsp),%rsi 5.43% ││ 0x00007fef9c3d4231: mov %eax,%edx 0.28% ││ 0x00007fef9c3d4233: callq 0x00007fef9464ad80 ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [8]=Oop } ││ ;*invokespecial consumeFull {reexecute=0 rethrow=0 return_oop=0} ││ ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 382) ││ ; - cn.wsd.benchmark.functionalinterface.jmh_generated.FunctionalInterfaceTest_normalMethodCall_jmhTest::normalMethodCall_avgt_jmhStub@20 (line 190) ││ ; {optimized virtual_call} 1.67% ││ 0x00007fef9c3d4238: mov 0x40(%rsp),%r10 5.12% ││ 0x00007fef9c3d423d: movzbl 0x94(%r10),%r11d ;*ifeq {reexecute=0 rethrow=0 return_oop=0} ││ ; - cn.wsd.benchmark.functionalinterface.jmh_generated.FunctionalInterfaceTest_normalMethodCall_jmhTest::normalMethodCall_avgt_jmhStub@33 (line 192) 0.30% ││ 0x00007fef9c3d4245: mov 0x108(%r15),%r10 1.49% ││ 0x00007fef9c3d424c: add $0x1,%rbp ; ImmutableOopMap{[64]=Oop [72]=Oop [80]=Oop [8]=Oop } ││ ;*ifeq {reexecute=1 rethrow=0 return_oop=0} ││ ; - cn.wsd.benchmark.functionalinterface.jmh_generated.FunctionalInterfaceTest_normalMethodCall_jmhTest::normalMethodCall_avgt_jmhStub@33 (line 192) 0.16% ││ 0x00007fef9c3d4250: test %eax,(%r10) ; {poll} 5.16% ││ 0x00007fef9c3d4253: test %r11d,%r11d │╰ 0x00007fef9c3d4256: je 0x00007fef9c3d4200 ;*aload_1 {reexecute=0 rethrow=0 return_oop=0} │ ; - cn.wsd.benchmark.functionalinterface.jmh_generated.FunctionalInterfaceTest_normalMethodCall_jmhTest::normalMethodCall_avgt_jmhStub@36 (line 193) ↘ 0x00007fef9c3d4258: movabs $0x7fefb409bc20,%r10 0x00007fef9c3d4262: callq *%r10 ;*invokestatic nanoTime {reexecute=0 rethrow=0 return_oop=0} ; - cn.wsd.benchmark.functionalinterface.jmh_generated.FunctionalInterfaceTest_normalMethodCall_jmhTest::normalMethodCall_avgt_jmhStub@37 (line 193) 0x00007fef9c3d4265: mov 0x48(%rsp),%r10 0x00007fef9c3d426a: mov %rax,0x30(%r10) ;*putfield stopTime {reexecute=0 rethrow=0 return_oop=0} ; - cn.wsd.benchmark.functionalinterface.jmh_generated.FunctionalInterfaceTest_normalMethodCall_jmhTest::normalMethodCall_avgt_jmhStub@40 (line 193) 0x00007fef9c3d426e: movq $0x0,0x20(%r10) ;*putfield realTime {reexecute=0 rethrow=0 return_oop=0} ; - cn.wsd.benchmark.functionalinterface.jmh_generated.FunctionalInterfaceTest_normalMethodCall_jmhTest::normalMethodCall_avgt_jmhStub@46 (line 194) lambda函数的汇编实现： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051c2, level 4, cn.wsd.benchmark.functionalinterface.FunctionalInterfaceTest$$Lambda$49.0x00000008000d3840::work, version 2, compile id 6885 dependencies [0x00007ff0e03ca928,0x00007ff0e03ca930] = 8 handler table [0x00007ff0e03ca930,0x00007ff0e03ca948] = 24 ---------------------------------------------------------------------- cn/wsd/benchmark/functionalinterface/FunctionalInterfaceTest$$Lambda$49.work([B)I [0x00007ff0e03ca7c0, 0x00007ff0e03ca868] 168 bytes [Entry Point] [Constants] # {method} {0x00007ff08fcf8ba0} &amp;apos;work&amp;apos; &amp;apos;([B)I&amp;apos; in &amp;apos;cn/wsd/benchmark/functionalinterface/FunctionalInterfaceTest$$Lambda$49&amp;apos; # this: rsi:rsi = &amp;apos;cn/wsd/benchmark/functionalinterface/FunctionalInterfaceTest$$Lambda$49&amp;apos; # parm0: rdx:rdx = &amp;apos;[B&amp;apos; # [sp+0x20] (sp of caller) 0.05% 0x00007ff0e03ca7c0: mov 0x8(%rsi),%r10d 3.30% 0x00007ff0e03ca7c4: movabs $0x800000000,%r12 0.07% 0x00007ff0e03ca7ce: add %r12,%r10 0.05% 0x00007ff0e03ca7d1: xor %r12,%r12 0.03% 0x00007ff0e03ca7d4: cmp %r10,%rax 0x00007ff0e03ca7d7: jne 0x00007ff0d864b080 ; {runtime_call ic_miss_stub} 3.08% 0x00007ff0e03ca7dd: data16 xchg %ax,%ax [Verified Entry Point] 0.05% 0x00007ff0e03ca7e0: mov %eax,-0x14000(%rsp) 0.10% 0x00007ff0e03ca7e7: push %rbp 3.07% 0x00007ff0e03ca7e8: sub $0x10,%rsp ;*synchronization entry ; - cn.wsd.benchmark.functionalinterface.FunctionalInterfaceTest$$Lambda$49/0x00000008000d3840::work@-1 0.06% 0x00007ff0e03ca7ec: mov 0xc(%rsi),%r10d ;*getfield arg$1 {reexecute=0 rethrow=0 return_oop=0} ; - cn.wsd.benchmark.functionalinterface.FunctionalInterfaceTest$$Lambda$49/0x00000008000d3840::work@1 0.07% 0x00007ff0e03ca7f0: test %r10d,%r10d ╭ 0x00007ff0e03ca7f3: je 0x00007ff0e03ca810 ;*invokespecial lambda$dynamicMethodCall$0 {reexecute=0 rethrow=0 return_oop=0} │ ; - cn.wsd.benchmark.functionalinterface.FunctionalInterfaceTest$$Lambda$49/0x00000008000d3840::work@5 3.11% │ 0x00007ff0e03ca7f5: lea (%r12,%r10,8),%rsi ;*getfield arg$1 {reexecute=0 rethrow=0 return_oop=0} │ ; - cn.wsd.benchmark.functionalinterface.FunctionalInterfaceTest$$Lambda$49/0x00000008000d3840::work@1 0.05% │ 0x00007ff0e03ca7f9: xchg %ax,%ax 0.02% │ 0x00007ff0e03ca7fb: callq 0x00007ff0d864ad80 ; ImmutableOopMap{} │ ;*invokespecial lambda$dynamicMethodCall$0 {reexecute=0 rethrow=0 return_oop=0} │ ; - cn.wsd.benchmark.functionalinterface.FunctionalInterfaceTest$$Lambda$49/0x00000008000d3840::work@5 │ ; {optimized virtual_call} 6.98% │ 0x00007ff0e03ca800: add $0x10,%rsp 0.04% │ 0x00007ff0e03ca804: pop %rbp 0.06% │ 0x00007ff0e03ca805: mov 0x108(%r15),%r10 3.10% │ 0x00007ff0e03ca80c: test %eax,(%r10) ; {poll_return} 0.04% │ 0x00007ff0e03ca80f: retq ↘ 0x00007ff0e03ca810: mov $0xfffffff6,%esi 0x00007ff0e03ca815: mov %rdx,%rbp 0x00007ff0e03ca818: data16 xchg %ax,%ax 0x00007ff0e03ca81b: callq 0x00007ff0d8649e00 ; ImmutableOopMap{rbp=Oop } ;*invokespecial lambda$dynamicMethodCall$0 {reexecute=0 rethrow=0 return_oop=0} ; - cn.wsd.benchmark.functionalinterface.FunctionalInterfaceTest$$Lambda$49/0x00000008000d3840::work@5 ; {runtime_call UncommonTrapBlob} 0x00007ff0e03ca820: mov %rax,%rsi 0x00007ff0e03ca823: add $0x10,%rsp 0x00007ff0e03ca827: pop %rbp 调用它的地方： 12345678910111213141516171819202122232425262728293031323334c2, level 4, cn.wsd.benchmark.functionalinterface.FunctionalInterfaceTest::bynamicMethod, version 2, compile id 6881 # parm1: rcx:rcx = &amp;apos;[B&amp;apos; # [sp+0x20] (sp of caller) 0x00007ff0e03c99a0: mov 0x8(%rsi),%r10d 0x00007ff0e03c99a4: movabs $0x800000000,%r12 0x00007ff0e03c99ae: add %r12,%r10 0x00007ff0e03c99b1: xor %r12,%r12 0x00007ff0e03c99b4: cmp %r10,%rax 0x00007ff0e03c99b7: jne 0x00007ff0d864b080 ; {runtime_call ic_miss_stub} 0x00007ff0e03c99bd: data16 xchg %ax,%ax [Verified Entry Point] 3.14% 0x00007ff0e03c99c0: mov %eax,-0x14000(%rsp) 0.08% 0x00007ff0e03c99c7: push %rbp 0.04% 0x00007ff0e03c99c8: sub $0x10,%rsp ;*synchronization entry ; - cn.wsd.benchmark.functionalinterface.FunctionalInterfaceTest::bynamicMethod@-1 (line 19) 3.19% 0x00007ff0e03c99cc: mov %rdx,%rsi 0.03% 0x00007ff0e03c99cf: mov %rcx,%rdx 0.05% 0x00007ff0e03c99d2: data16 xchg %ax,%ax 3.35% 0x00007ff0e03c99d5: movabs $0xffffffffffffffff,%rax 0.06% 0x00007ff0e03c99df: callq 0x00007ff0d864aa80 ; ImmutableOopMap{} ;*invokeinterface work {reexecute=0 rethrow=0 return_oop=0} ; - cn.wsd.benchmark.functionalinterface.FunctionalInterfaceTest::bynamicMethod@2 (line 19) ; {virtual_call} 0.06% 0x00007ff0e03c99e4: add $0x10,%rsp 2.95% 0x00007ff0e03c99e8: pop %rbp 0.06% 0x00007ff0e03c99e9: mov 0x108(%r15),%r10 0.05% 0x00007ff0e03c99f0: test %eax,(%r10) ; {poll_return} 0.06% 0x00007ff0e03c99f3: retq ;*invokeinterface work {reexecute=0 rethrow=0 return_oop=0} ; - cn.wsd.benchmark.functionalinterface.FunctionalInterfaceTest::bynamicMethod@2 (line 19) 0x00007ff0e03c99f4: mov %rax,%rsi 0x00007ff0e03c99f7: add $0x10,%rsp 0x00007ff0e03c99fb: pop %rbp 0x00007ff0e03c99fc: jmpq 0x00007ff0d86f9900 ; {runtime_call _rethrow_Java} reexperiment0x00007f95a864ad80 一些思考条款对应实现的Java数据结构是怎样的？一个函数、多个函数还是一个类一个函数表达不出条款的意思多个函数方案可以将when，while，where分别对应到一个函数，不过难以统一判断条款的参与方party，需要每个函数前面都加一个判断。一个类的方案目前还没遇到问题。 条款中的动作参数是形参还是实参使用形参parametersList。因为条款里的动作相当于AOP中的PointCut，定义为ActionSignature与此区分，test函数里的action调用定义为 functionCall，使用实参argumentList 关于不支持函数重载一般说来，虽然Action中支持定义参数，但是我们一般不使用同名不同参来进行函数重载（即不支持函数重载）原因是我们使用的是方法名作为唯一标示去查找和判定的。为什么不用Method？因为 Method 不支持 Berkeley DB持久化存储。 ContractEngine 的设计根据Action是由自主触发还是AOP外部触发将工作模式分为自实现和AOP两种。 自实现 AOP handleAction触发，内部调用method.invoke执行动作 Spring Bean中方法执行动作，@Pointcut拦截触发 两种模式对于duty的处理: Duty 自实现 AOP can 通过调用handleAction触发 拦截外部调用后检查termObj, termObj.when 通过后执行 must runMustActions 中触发调用must动作 和can对待是一样的。所以需要另写breach term处理must动作如果一直不触发的情况 cannot handleAction中检查出来，则不发生动作执行 termObj.when 通过后，则不执行pjp.proceed 两种模式对于条件的处理： Condition 自实现 AOP when termObj.when 和自实现一样 while termObj.while，和method.invoke 并列执行 termObj.while，和 pjp.proceed 并列执行 where termObj.where 和自实现一样","link":"/2021-Feb-4th-Spesc-JVM-language/"},{"title":"配置网络文件共享","text":"Mapping network driveWindows clientwindows 支持 ftp、samba、nfs（win10新加入）等多种文件共享协议。在没有防火墙的情况下都是好用的。nfs 协议需要提前在控制面板&gt;程序&gt;新增/删除Windows功能&gt;nfs功能 中开启。hostname可在C:\\Windows\\System32\\drivers\\etc\\hosts文件中配置 挂载nfs右键我的电脑-&gt;Map Network Drive(注意nfs协议不能是添加网络位置)-&gt;如lab-nas:/mnt/HD/HD_a2/Public 由于nfs默认没有用户认证，注意配置nfs的匿名uid和gidBusyBox nfs: 编辑 /etc/exports 文件的 anonuid=500 和 anongid=1000（admin用户访问）然后更新配置文件 exportfs -rv Windows NFS Client: Ctrl+R管理员regedit进入注册表：Computer\\HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\ClientForNFS\\CurrentVersion\\Default设置用户AnonymousUid 和 组 AnonymousGid 的 Decimal 值和服务器对应用户相同（500和1000） 注：nfs需要两机器时间尽量同步 挂载samba绕过在一些网络环境中比如校园网屏蔽了smb的445端口时，需要采用端口绕过的方式来配置。 Linux服务器Samba配置在smb.conf文件中改变端口(避开2000以内的约定俗成端口) 1smb ports = 2222 # 默认配置 smb ports = 445 139 Win客户端配置管理员身份打开 Powershell 12345678# 开启端口转发（Portproxy）lab-server替换为服务器地址netsh interface portproxy add v4tov4 listenaddress=127.0.0.1 listenport=445 connectaddress=inspiron-7537 connectport=2222# 查看所有的代理netsh interface portproxy show all# 检查445端口监听状况netstat -ano | findstr :445# 删除代理(后期不用删除操作)# netsh interface portproxy delete v4tov4 listenport=445 listenaddress=127.0.0.1 挂载方法如下图所示：其中选项“Reconnect at sign-in”需要勾选以便重启后仍可以记住网络磁盘，选项“Connect using different credentials”若之前已经挂载成功过，则不勾选。 OpenvpnArchwiki: https://wiki.archlinux.org/index.php/OpenVPN","link":"/2021-Jan-03-Network-file-sharing/"},{"title":"Postman 使用笔记","text":"Postman 是谷歌公司提供的一款API测试工具，支持多平台。平时开发可用于替代 Apache Jmeter 自动化测试点击这个类似眼睛的按键进入环境变量设置 添加环境变量 在测试脚本中添加获取环境变量的 Js 代码，例如通过截取字符串获取 使用该环境变量的方法是双大括号里加该变量名即可","link":"/2021-Jan-5th-Postman-testing/"},{"title":"Spring cloud 总线实验","text":"微服务总线实验 Prerequisites kafka/rabbitmq jdk1.8 spring: https://start.aliyun.com/ 一、实验1.1 Kafka实验启动 Kafka 服务，默认端口9092 1.2 RabbitMQ C 发送接收测试先启动消费者客户端开启监听： 1./examples/amqp_listen 192.168.123.1 5672 amq.direct test 执行 amqp_listen 命令会自动创建一个queue，这里是test，如果想直接使用已有的queue，可以采用amqp_listenq 命令 然后启动生产者客户端 1./examples/ampq_sendstring 192.168.123.1 5672 amq.direct test &quot;some message&quot; 发送成功后生产者无返回消息，消费者将返回显示 Note: debug listen 程序过程中返回 socket -9 error 是调试超时导致的 rabbitmq服务端的log显示： 1232021-03-30 20:11:26.678 [info] &lt;0.3044.4&gt; accepting AMQP connection &lt;0.3044.4&gt; (192.168.123.100:38380 -&gt; 192.168.123.1:5672)2021-03-30 20:11:28.556 [error] &lt;0.3044.4&gt; closing AMQP connection &lt;0.3044.4&gt; (192.168.123.100:38380 -&gt; 192.168.123.1:5672):{handshake_timeout,frame_header} 有时候frame_header会改成handshake 所以为了调试方便，服务端的rabbitmq.conf中需要加入这3行设置： 123handshake_timeout = 120000ssl_handshake_timeout = 60000heartbeat = 100 handshake_timeout 和 ssl_handshake_timeout 的单位都是 ms，heartbeat 的单位是 s 二、 Kafka 和 RabbitMQ 的对比Kafka的设计初衷是分布式流式系统，而RabbitMQ是分布式消息队列。RabbitMQ的特点是：使用Erlang编写，消息延迟率低（ms级别），但是不支持JMS通信协议，底层协议为AMQP，最大的特点是添加对于交换机的支持。而Kafka没有队列这个概念，而是按照类别（topic）进行存储，尤其擅长处理大数据日志。它支持高并发情况和Java Spring集成，持久化数据存储使用 ZooKeeper，支持多topic模式的分布式部署，需要使用Scala进行编写。 2.1 AMQP协议 2.1.1 RoutingKey交换机（Exchange）可以根据 RoutingKey 的值绑定不同的队列。消息发往不同的 RoutingKey 的过程即发送不同的消息队列的过程。 2.2.2 Channel生产者或消费者与RabbitMQ的连接通道称为Channel 2.2.3 AMQP 消息格式 发送消息头（8字节）：AMQP0xyz，AMQP协议版本号 content-type: 消息类型 content-encoding： 消息编码 message-id：唯一标识1条消息 timestamp：消息创建时间 expiration：消息过期时间 delivery-mode： 在RabbitMQ中表明将消息写入磁盘或者内存队列 app-id 和 user-id： 帮助追踪出现问题的消息发布者应用程序 type： 定义发布者和消费者之间的契约 reply-to： 实现响应消息的路由 消息内容使用字节流传输 如何避免消息的重复发送和重复接收重复发送问题存在多种可能的触发场景： 发送方成功将消息发送给RabbitMQ后，因为网络或者服务宕机、导致中间件没有及时向消息发送confirm，触发了发送方的重新发送。 重复接收问题可能的触发场景： 为了防止中间件进程中止或者宕机产生了消息的丢失问题，需要配置消息中间件的持久化存储： 配置消息队列为 consistent（持久化）模式 发送的消息也需要添加 persistent=2 参数，表示消息需要持久化存储到中间件。 参考文献： RabbitMQ 配置：https://www.rabbitmq.com/configure.html RabbitMQ消息持久化","link":"/2021-Jan-8th-Spring-cloud-bus-experiments/"},{"title":"Process, Thread and Coroutine","text":"Processes, threads and coroutines, are common and important concepts in OS and programming learning. Explanation from OS perspective进程是操作系统资源分配的基本单位。保存在外存的程序运行起来的时候，操作系统会在内存空间内形成一个独立的内存体，这个内存体有自己独立的地址空间。即操作系统会以进程为单位分配系统资源（CPU时间片、内存等资源），进程是资源分配的最小单位，是操作系统进行资源分配和调度的一个独立单位。 A thread is the real unit running on a CPU whose execution is scheduled by the OS. One process contains at least one thread. One or more threads inside a process share their common resources while executing individually. Composition of a process进程一般由程序、数据和进程控制块（PCB）三部分组成。 如何通俗地理解进程和线程的关系？ Coroutine协程不是由操作系统内核管理的，而是完全由程序所控制（也就是在用户态执行）。 线程通信的同步与异步、阻塞与非阻塞同步与异步是针对线程一次调用得到结果的时间来分类的。 同步情况下，返回的结果就是调用的结果；或者说在没有得到结果之前，调用就不返回。 异步情况下，调用会立即返回一个空值，调用方不会直接获得真正的结果，真正的结果由被调用方来主动通知或发送给调用方。 阻塞与非阻塞是根据多线程并发的相互影响程度来分类的。 若一个线程是阻塞的，那么当该线程期待获得的临界区资源被其他线程占用未释放时，该线程就会调用阻塞原语将自己挂起，直到获取临界区资源才会调用唤醒原语进入就绪状态。阻塞是最严格的并发级别。 对非阻塞线程，当前线程对资源的使用不妨碍其他线程的继续执行。 举个例子，Java编程的三个IO模型中，BIO属于同步阻塞，NIO属于同步非阻塞，AIO属于异步非阻塞。而在线程池中处理BIO则属于异步阻塞。 同步 异步 阻塞 BIO 线程池 非阻塞 NIO AIO","link":"/2021-July-11th-Processes-threads-and-coroutines/"},{"title":"数据结构与算法笔记 | 栈和队列","text":"栈和队列是使用相当广泛的两种数据结构，它们都属于线性数据结构。栈结构的特点是FILO（First In Last Out），队列结构的特点是FIFO（First In First Out）。性质随简单易懂，但真正掌握灵活运用还是需要一定功夫的。面试时候考察也多以结合其他算法数据结构（如串、树、动态规划等）来进行考察。本篇接下来主要介绍栈和队列相结合的一些考察点，之后再介绍一些特殊的栈/队列结构，如双端队列和单调栈/队列。 栈和队列的结合使用栈实现队列用两个栈实现一个队列，方法是数据常存在一个主栈中，出队列操作会用到另一个辅助栈，出队列操作主栈和辅助栈地位相互调换。入队列操作即为入主栈操作。 使用队列实现栈用两个队列实现一个栈 既用到栈又用到队列的一道题 —— 反转字符串中的元音字母题目让反转字符串中的元音字母，其余字母照常输出。而栈天生就具备这种反转的性质。所以考虑元音字母使用一个栈保存，而元音字母所在序号恰好可以用队列存，这样便使元音字母从栈依次弹出时，队列序号能依次指向对应位置。LeetCode链接 123456789101112131415161718192021string reverseVowels(string s) { stack&lt;char&gt; vowels; queue&lt;int&gt; indices; for(int i=0; i&lt;s.size(); ++i) { if(isVowel(s[i])) { indices.push(i); vowels.push(s[i]); } } while(!vowels.empty()) { s[indices.front()] = vowels.top(); vowels.pop(); indices.pop(); } return s;}inline bool isVowel(char c) { c = tolower(c); return c==&apos;a&apos;||c==&apos;e&apos;||c==&apos;i&apos;||c==&apos;o&apos;||c==&apos;u&apos;;} 一些特殊的栈/队列结构1. 双端队列 —— 更加广义的栈和队列双端队列既可以当作栈用，也可以当作队列用，实际上C++ std库中stack和queue的底层实现就是这玩意。来一道题感受一下双端队列的强大之处： 2. 单调队列和单调栈单调队列可以解决滑动窗口最大值的问题。 例题：包含min函数的栈牛客网链接 和 AC代码 运用单调栈的经典问题当属曼哈顿天际线问题","link":"/2021-Mar-12th-Data-structure-stack-and-queue/"},{"title":"数据结构与算法笔记 | 递归与回溯","text":"递归部分精髓在于： 一、把重复操作的子问题提取出来。二、找到跳出递归条件 反转链表假如将节点head的后续部分看作已经调整好顺序的反向链表，头部为newHead，尾部为next，next.next=null那么反转操作就变成两个节点的反转了： 操作前 123newHead = reverseList(next); // 重复子问题next.next = head;head.next = null; 经过代码操作后： 弹出条件则是当递归到原链表的底部时 123if(head.next == null) { return head;} 例题链接 @Leetcode-cnAC代码 这道题也可以使用一个临时结点和多指针来完成，代码链接 找出所有可能的组合例题：Leetcode 77 我们对 1…n 的数标记是否取到，当递归到长度为 k 时说明到达了递归边界。若还未到达递归边界则继续按顺序加入标记数组，进行递归。递归后记得取消标记完成回溯操作。算法Java语言描述 1234567891011121314151617181920212223242526272829303132333435/* 给定两个整数 n 和 k (0 &lt;= k &lt;= n) 返回 1 ... n 中所有可能的 k 个数的组合*/List&lt;List&lt;Integer&gt;&gt; combine(int n, int k) { boolean[] flags = new boolean[n+1]; List&lt;List&lt;Integer&gt;&gt; res = new ArrayList&lt;&gt;(); findCombination(res, flags, k, new ArrayList&lt;&gt;(), 1); return res;}/* res: 储存所有可能的组合结果 flags: 标记1...n是否被取 k: 剩余还需加进comb的数 n: 数据总数 comb: 记录当前的组合 i: 指针在1...n的位置*/void findCombination(List&lt;List&lt;Integer&gt;&gt; res, boolean[] flags, int k, List&lt;Integer&gt; comb, int i) { if(k == 0) { res.add(new ArrayList&lt;&gt;(comb)); return ; } else if(i == flags.length) { return ; } // 递归 comb.add(i); flags[i] = true; findCombination(res, flags, k-1, comb, i+1); // 取 // 回溯 flags[i] = false; comb.remove(comb.size()-1); findCombination(res, flags, k, comb, i+1); // 不取} 算法C++语言描述： 123456789101112131415161718192021222324252627282930313233343536/* 给定两个整数 n 和 k (0 &lt;= k &lt;= n) 返回 1 ... n 中所有可能的 k 个数的组合*/vector&lt;vector&lt;int&gt;&gt; combine(int n, int k) { vector&lt;vector&lt;int&gt;&gt; res = vector&lt;vector&lt;int&gt;&gt;(); bool* flags = new bool[n]; vector&lt;int&gt; comb = vector&lt;int&gt;(); findComb(res, n, flags, k, comb, 0); return res;}/* res: 储存所有可能的组合结果 n: 1...n的长度 flags: 标记1...n是否被取 remain：剩余需要的个数 comb：一个可能的组合 i：遍历指针*/void findComb(vector&lt;vector&lt;int&gt;&gt;&amp; res, int n, bool flags[], int remain, vector&lt;int&gt;&amp; comb, int i) { if(remain == 0) { res.push_back(comb); return ; } else if(i == n) { return ; } // 递归 comb.push_back(i+1); flags[i] = true; findComb(res, n, flags, remain-1, comb, i+1); // 取i // 回溯 comb.pop_back(); flags[i] = false; findComb(res, n, flags, remain, comb, i+1); // 不取i} 算法C语言描述： 123456789101112131415161718192021222324252627282930313233343536373839404142434445#define MAX_N 10001int** ans;int ans_size;int temp_size;void findComb(int** ans, int n, int k, int* temp, int i);/** * Return an array of arrays of size *returnSize. * The sizes of the arrays are returned as *returnColumnSizes array. * Note: Both returned array and *columnSizes array must be malloced, assume caller calls free(). */int** combine(int n, int k, int* returnSize, int** returnColumnSizes){ ans = malloc(MAX_N * sizeof(int*)); int* tmp = malloc(k * sizeof(int)); ans_size = temp_size = 0; findComb(ans, n, k, tmp, 0); *returnSize = ans_size; *returnColumnSizes = malloc(ans_size * sizeof(int)); for(int i=0; i&lt;ans_size; ++i) { (*returnColumnSizes)[i] = k; } return ans;}void findComb(int** ans, int n, int k, int* temp, int i) { if (temp_size == k) { int* comb = malloc(k * sizeof(int)); // memcpy(comb, temp, k * sizeof(int)); for (int i = 0; i &lt; k; i++) { comb[i] = temp[i]; } ans[ans_size++] = comb; return ; } else if(i == n) { return ; } // 递归 temp[temp_size++] = i+1; findComb(ans, n, k, temp, i+1); // 取 // 回溯 temp_size--; findComb(ans, n, k, temp, i+1);}","link":"/2021-Mar-13th-Algorithm-recursion-and-backtracking/"},{"title":"数据结构与算法笔记 | 动态规划","text":"动态规划算法的两大特征是递推公式和记忆数组。根据递推公式，大问题分解为重叠子问题（overlap sub-problem），子问题的解储存起来形成记忆。动态规划算法的应用场景很多，具体构造也非常灵活。 一、动态规划与字符串结合剑指Offer - 正则表达式匹配这道题的输入是字符串str和匹配模式串pattern，字符串”aaa”可以匹配模式”a.a”和”abaca”，模式中的通配符只有 ‘.’ 和 ‘‘ 两种，和正则表达式标准所不同的是，’‘表示它前面的字符可以出现任意次，而不是匹配任意长度的字符。 假设布尔型 dp[m][n] 表示长度从1至m的字符串和长度从1至n的模式是否匹配，那么当递推到 dp[str.length][pattern.length]即为所求。 dp[1][1] 表示第一个字符是否匹配。如果 pattern[2]==&apos;.&apos; || str[2] == pattern[2]，则 dp[2][2] = dp[1][1]，否则需要考虑通配符（比如字符串&quot;0ab&quot;与模式`”0ab”匹配，字符串“0ab”与模式“0a*c”`不匹配）可以有如下几种情况考虑 匹配掉双方第一个字符，如abc和a*bc匹配剩下：bc 和 bc 匹配掉字符串的第一个字符，如aabc和a*bc匹配剩下：abc 和 a*bc 匹配掉模式的两个字符，如bc和a*bc匹配剩下：bc和bc上述几种考虑编写代码段如下：123456789if(pattern[2] == &apos;.&apos; || str[2] == pattern[2]) { dp[2][2] = dp[1][1]; // 第1种情况} else if(pattern[2] == &apos;*&apos;) { if(dp[2][0] == true) { dp[2][2] = true; // 第3种情况 } else if(pattern[1]==&apos;.&apos; || pattern[1]==str[2]) { dp[2][2] = dp[1][2]; // 第2种情况 }} 二、背包问题背包问题的目标是将总价值尽可能高的物品塞到背包中，有以下几类常考问题： 01背包有N件商品和容量为V的背包，第i(0&lt;=i&lt;N)件商品的体积是 c[i]，价值是 w[i]，每件商品最多只能用1次。求解将哪些商品放入背包中可在不超过背包容量的情况下使总价值达到最大。我们设 dp[i][j] 为考虑前 i 件商品的情况下，容量不超过 j 的最大价值，则 dp[N][V] 即为所求。初始值 dp[0][j]=0, dp[i][0]=0，考虑第 i 件商品放或者不放，如果放，那么前i-1件商品的允许容量会减小c[i]，价值会加上第i件商品的价值w[i]，此时 dp[i][j] = dp[i-1][j-c[i]] + w[i]；如果不放，那么等价于前i-1件商品不超过容量j的最大价值，此时 dp[i][j] = dp[i-1][j]，故可以得到递推公式： dp[i][j] = max(dp[i-1][j-c[i]] + w[i], dp[i-1][j])注意01背包问题不能使用贪心思想求解，看下面的例子： 12345容量 V = 53件商品：(体积=1, 价值=2) 单位体积价值=2(体积=2, 价值=4) 单位体积价值=2(体积=3, 价值=3) 单位体积价值=1 如果采用贪心思想，那么先放体积为1和2的物品，此时总价值达到6。剩余体积为2,放不下体积为3的商品了。而我们知道最优解是放体积为2和3的商品，总价值为7。所以过度贪心，将会导致胸怀不够大，看不到全局最优解。 例题：分割等和子集 一些一维DP问题丑数定义丑数为质因子只包含2、3、5的数，给你一个正整数n，找出第n个丑数通常认为，第一个丑数为1。 分析除了1之外，第n个丑数只能是前面某个丑数乘2或乘3或乘5得到的结果。令p2,p3,p5储存前面某个丑数的下标，那么第i个丑数应为 dp[p2]*2,dp[p3]*3,dp[p5]*5 的最小值。特征是假如第i个新丑数是第p2个丑数乘2得到的，则下标p2+1，第i+1个丑数为 dp[p2+1]*2,dp[p3]*3,dp[p5]*5 最小值；第p3个丑数乘3得到的第i个丑数则下标p3+1，第i+1个丑数为 dp[p2]*2,dp[p3+1]*3,dp[p5]*5 最小值；第p5个丑数乘5得到的则下标p5+1，第i+1个丑数为dp[p2]*2,dp[p3]*3,dp[p5+1]*5 最小值。 前缀和前缀和数组细分有两种：如果preSum[i]记录从0累加到i的和，那么计算数组第i到j个元素的累加和即为 preSum[j]-preSum[i]+arr[i]如果preSum[i]（i&gt;0）记录从下标0累加到下标i-1的和，preSum[0]=0，那么计算数组下标i到j的元素累加和即为 preSum[j+1]-preSum[i] 例题：所有奇数长度子数组的和 利用前缀和还可以构造差分数组，例题：航班预订统计","link":"/2021-Mar-20th-Algorithm-Dynamic-programming/"},{"title":"Advanced MySQL and Database Optimization","text":"This article mainly helps to deepen the understanding of MySQL and optimize database performance in large data scenarios based on the foundation of learning MySQL basics. MySQL ArchitectureThe design of MySQL reflects the idea of layered architecture, and can be divided from top to bottom as follows: Connection Layer: Includes various connectors and MySQL shell. Service Layer: SQL interface, parser, optimizer, cache, etc. Engine Layer: Includes storage engines such as InnoDB and MyISAM. Storage Layer: Handles interactions with disks and log files. Engine LayerDifferences between InnoDB and MyISAM: InnoDB is designed for handling large datasets and high concurrency, while MyISAM focuses on performance. InnoDB supports row-level locking, transactions, and foreign keys, whereas MyISAM only supports table-level locking. InnoDB uses clustered indexes, while MyISAM uses non-clustered indexes as the following content shows. The MyISAM storage engine supports spatial data indexes (R-Tree), which can be used for geographic data storage. MySQL CacheThe smallest unit of interaction between MySQL and disk is a page (default 1 page = 16KB).The default size of the memory pool (Buffer Pool) is 128MB.Thus, the default number of pages in the memory pool can be calculated as 128M / 16KB = 8172. redo.log 和 bin.logThe redo log is the log at the InnoDB storage engine layer, while the binlog is the log recorded at the MySQL server layer. These two logs have some overlapping content (different formats). They can be used to recover data after a MySQL crash and restart. Execution Process of an Update Statement Modify buffer (generate dirty pages). Generate corresponding redo.log and bin.log (log-ahead principle). Persist redo.log and bin.log. Return modification success. ## TransactionsTransactions refer to a set of operations that satisfy the ACID properties (Atomicity, Consistency, Isolation, Durability). A transaction can be committed using COMMIT, or rolled back using ROLLBACK. MySQL Transaction Execution Process Start transaction. Apply for lock resources, place exclusive lock on row with id=2. Read the data pages to be modified into innodb_buffer_cache. Record the data with id=2 into the undo log. Record the modified data with id=2 into the redo log buffer. Change the name of id=2 in the buffer cache to “test”. Commit, trigger two-phase commit (2PC). End transaction. Two-Phase Commit of Redo LogsThe writing of redo logs is split into two steps: prepare and commit. This is called “two-phase commit.”It mainly ensures that the order of redo log transactions matches the order of binlog transactions (ensured by transaction IDs). Prepare phase: Persist redo to disk (redo group commit), and set the rollback segment to prepared status. Binlog does not perform any operations during this phase. Commit phase: InnoDB releases locks, releases rollback segments, sets the redo log commit status, persists binlog to disk, and then commits at the storage engine layer.In simple terms, after executing an update statement, first set the redo log status to prepared, and then set it to committed after the update content is written to binlog. Redo log persistence strategy configuration:=0: Do not persist immediately upon transaction commit; instead, let background processes handle it.=1: …Persist immediately.=2: …Immediately hand over to operating system cache. Concurrent Consistency Issues: Lost updates. Dirty reads. Non-repeatable reads. Phantom reads. The following table shows the concurrent consistency issues that difference isolation levels can solve: Lost updates Dirty reads Non-repeatable reads Phantom reads Read Uncommited ❌ ❌ ❌ ❌ Read Commited ❌ ✅ ❌ ❌ Repeatable Read ❌ ✅ ✅ ❌ Serialization ✅ ✅ ✅ ✅ MVCC （Multi-Version Concurrency Control）Under the Read Uncommitted mode: The transaction connection list can change.Under the Repeatable Read mode: The pointer to the transaction connection list remains fixed. IndexesExplanation: A sorted data structure for fast lookup. There are two ways to add indexes (index) to a data table: CREATE INDEX ALTER TABLE Indexes also exist on disk and need to be loaded into memory for retrieval when required. Advantages and Disadvantages of IndexesAdvantages: Speed up query and sorting.Disadvantages: Creating an index duplicates pointers to table data, which slows down insertion and update speeds. Reasons Why Indexes Are Slow Poorly written query statements. Indexes become ineffective. Too many join queries. Clustered Indexes and Non-Clustered IndexesClustered indexes have data nodes as their leaf nodes, while non-clustered indexes still have index nodes, but they point to corresponding data blocks.Generally, the primary key will automatically create a clustered index, and a table allows only one clustered index. Index MatchingBest Left Prefix Principle # Large Table OptimizationDatabase Logical Design Three Normal Forms:1NF: Requires attributes to be atomic.2NF: Requires records to have unique identifiers, i.e., no partial dependencies.In 2NF, non-primary attributes must fully depend on primary attributes.3NF: No field can be derived from other fields, no field redundancy, i.e., no transitive dependencies. Each normal form necessarily satisfies the previous normal form. There are also BCNF and 4NF.If there are cases where key fields determine key fields, it does not meet BCNF. ### Optimization Object: Data tablesBased on business types, data is generally divided into three categories: Flow-type data. Stateful data: Multiple business data depend on stateful data, and the correctness of this data must be ensured. For example, when making a payment or recharge, the original balance must be obtained to ensure successful payment. Configuration-type data. Depending on the type of data, the optimization way also varies. Here is a summary: Data Growth Situation Table Type Business Characteristics Optimization Core Idea Millions of records relatively stable data volume Status table OLTP business direction Don’t split if possible; horizontally scale read demand Millions of records may reach billions or even higher Flow table OLTP business historical data Business splitting, distributed storage design Millions of records may reach billions or even higher Flow table OLTP business statistical data source Design distributed expansion for statistical data needs Millions of records shouldn’t have so much data Configuration table General business Small and concise, avoid monolithic Vertical and Horizontal Partitioning of Databases and TablesVertical partitioning splits a table with many columns into multiple tables.General partitioning principles: Place less commonly used fields in a separate table. Split out text, blob, and other large fields into sub-tables. Place frequently combined query columns in the same table. Horizontal partitioning refers to the splitting of rows in a data table. When the number of rows exceeds 2 million, performance decreases. At this point, the data from one table can be split into multiple tables.Some partitioning principles: Modulo partitioning: For example, a user table with 4 million records can be split into four tables to improve query efficiency. Part of the business logic can also be split by region, year, and other fields. Problems Brought by Sharding Databases and Tables Transaction consistency issues, leading to distributed transactions. Cross-node join queries. Cross-node pagination, sorting functions. Primary key duplication: Consider using global primary keys. Common tables (parameter tables, data dictionary tables) need to be saved in each database, and all updates to common tables need to be executed multiple times. References:1、MySQL官网结构图： https://dev.mysql.com/doc/refman/8.0/en/pluggable-storage-overview.html2、MySQL千万级大表优化，看这一篇就忘不掉了!： https://database.51cto.com/art/202002/610289.htm3、表的垂直拆分和水平拆分：https://www.kancloud.cn/thinkphp/mysql-design-optimalize/393264、MYSQL索引：对聚簇索引和非聚簇索引的认识：https://blog.csdn.net/alexdamiao/article/details/51934917#:~:text=%E8%81%9A%E7%B0%87%E7%B4%A2%E5%BC%95%E6%98%AF%E5%AF%B9,%E5%AD%98%E5%9C%A8%E4%B8%80%E4%B8%AA%E8%81%9A%E7%B0%87%E7%B4%A2%E5%BC%95%E3%80%82","link":"/2021-Mar-27th-MySQL-Query-and-Optimization/"},{"title":"通过案例学习OriginPro绘图","text":"学习过程中用到的若干案例详细绘图过程 案例1：绘制一张带正负双轴和ErrorBar的Bar图 注意Bar数据的x轴是纵轴，y轴是横轴。 Step 1：填充数据设置服务名称(service)、条款名称(term)、合约条款执行时间及正负误差（95%置信区间）、服务接口执行时间及正负误差（95%置信区间） Step 2：选中数据生成Bar，然后设置ErrorBar和Overlap 按理来说，两套数据最好使用两个图层，但是OriginPro对于第二图层的bar显示有问题，所以将数据都放到一个图层。 Step 3：设置四个方向的边框这里由于左Y形成了中间框，所以需要新建一个图层来画出左Y.新建图层：右键 &gt; New Layer(Axis) &gt; Left-Y，然后隐藏图层1双击坐标轴可以设置左右两个Y如下图所示然后隐藏图层2，打开图层1删掉左右Y 设置图层之间的坐标轴关联（同x轴或同y轴）：右键 &gt; New Layer(Axis) &gt; Right Y 或者 Left Y 建立之后可以右键图层数字&gt;Layer Properties 查看 Top X 的生成可以通过双击坐标轴，进入 “Title &amp; Format” 部分找到 这里有个小技巧是数据设置正负值来区分方向。现在，我们需要将负值显示为正值： 以及添加Top X的数值显示 添加对齐虚线 目前的Layer1： Step 4: 合并图层，细调双击errorBar，调节颜色为红色 将column宽度调细一些调整一下坐标轴说明，效果图： 调节一下字体 裁边，右键&gt;Fit Page To Layers ,设置border width为2或3 案例2：在案例1基础上，正负轴的scale不一样这次我们需要将两套数据画在两个图层上了，并且在用上2021新版的OriginPro后，原来Column全部从底部涂色的bug也消失了～ Step 1: 选中左边的数据（合约条款计时） Plot &gt; 绘制bar图 Step 2: 添加新图层: New Layer(Axes) &gt; Open Dialog自定义坐标轴，Left和Buttom不勾选 隐藏图层1。之后选中右边数据，点击当前图片窗口，然后点击Insert &gt; Plot to Layer &gt; 绘制column即可 因为Origin中column和bar的区别只是在于X-Y坐标轴的位置互换。将column变成bar只需要点击菜单 &gt; Graph，选中 Exchange X-Y Axes Step 3: 统一坐标轴 只要将坐标轴的正负绝对值设置相等，就可以保持x轴（垂直）的重合： Step 4: 设置ErrorBar双击Error Bar，设置一正一负（对于正态分布，正负误差相等），并替换颜色为红色，增加bar两头的宽度（Cap值） 对于Layer的ErrorBar也是同理操作： Step 5: : Label值设定Layer1 x轴(垂直)标签值加前缀Term，旋转45度，之后可去掉标题”term”。 Layer2 x轴(垂直)的标签数据来源设置为service列 亦设置格式旋转45度： 接下来设置y轴的tick labels。双击y轴（Top 水平轴）数据点，从自定义dataset（新建的Sheet2）中获取 调整dataset中的值，使之与原来的刻度水平匹配： 接着，隐藏layer1的bottom line和tick labels，将layer2 top的数据复制到bottom显示出来。复制粘贴坐标轴标题匹配对应部分： Step 6: Update legends右键图例更新， 选择 Reconstruct 和 One Legend for Whole Page Step 7: 美化修改宽度 修改颜色 设置Layer1和2的x轴（垂直轴）的minor ticks和minor grids为none；设置y轴（水平轴）的major grids和minor grids 右键图例&gt;Properties, 设置frame的border为none Preferences &gt; Text Fonts修改默认字体为Times New Roman，Axis&gt;Unit Display for Axis Title 修改单位显示为 /&lt;U&gt; 调节字体为Times New Roman，大小为18/20 裁边:右键&gt;Fit Layers to Page… 案例3：栅图+组图我们先绘制比较简单的散点图部分Step 1: 选中前两列的数据，绘制散点图 点击菜单栏 Plot &gt; Scatter 修改坐标轴，添加grids，字体统一 Times New Roman 24号 Step 2: 复制Graph窗口右键&gt;Duplicate 然后右键copy Graph &gt; Properties，去掉Long Name 接着右键图层1 &gt; Plot setup，选择新的X和Y轴数据，点击Replace 同理绘制出第3张散点图 3张图都出来后，统一一下大小格式 Step 3: 选中左边数据，点击 TrellisTrellis图是Origin2017后提供的新功能，我们用它来制作Before-After图 在弹出窗口设置中加入C列Action Name，作为Panel的分类依据： Step 4: 修正坐标轴 Step 5: 为线段添加文本 设置颜色在panel内部递增： Step 6: 合并 我们给每张图标上序号，然后点击某一个Graph，记住要排列的图片序号，然后进入Merge Graph Windows Dialog… 调整Gap为2，Margin为1，鼠标可以拖动图片调整相对位置。再加上小标题(a)(b)(c)(d)的文本框。","link":"/2021-May-28th-OriginPro-with-examples/"},{"title":"Psychological Effects Applied in Life","text":"学以致用 I. 破窗效应原指汽车玻璃被打破后，里面的东西很快就丢了。 负向应用别人看到自己对一个物品很随便，别人借用了也会对其很随便 正向应用扔废纸之前将废纸撕碎，这样保洁阿姨在看到的时候就不会把它们当成重要文件，而会没有顾虑地作为回收品收集了。 II. Six rhetorical techniques for speaking like leaders1.Three breathless sentences (asyndeton)Example: Look left, look right, look center.Government of the people, by the people, for the people.We find the rule of three here, there, and everywhere. 2.Three repetitive sentences -&gt; free balance in statementsExample: We shall fight on the beaches; we shall fight on the landing grouds; we shall fight on the fields and in the streets.I’m not asking £20, I’m not asking £15, I’m not even asking £10. 3.Balancing statementsExample: Ask not what your country can do for you, ask what you can do for your country.To be or not to be.We’re looking to the future, not the past. 4.Metaphor(Beautiful images or disgusting images)Example: the Arab SpringFinacial stormgovernment as a baby with a huge appetite at one end, no sense of responsibility at the other 5.Exaggeration My god, I’ve been waiting to give this talk my whole life. 6.rhyme One, two, buckle my shoe.An apple a day keeps the doctor away. ReferencesTED Talks: Speak like a leader","link":"/2021-May-8th-Psychological-effect-in-living/"},{"title":"MySQL双机热备份环境搭建","text":"双机热备份的特点是任一台数据库均可作为主机，另一台作为从机冗余备份，在某一时刻保证有且仅有一台主机接收数据库系统外部请求。 一、环境准备1.两台能联网的 Ubuntu 16.042.安装MySQL 5.7root用户下： 12apt updateapt install mysql-server mysql-client 安装成功后通过mysql -uroot -p 进入mysql终端： 123USE mysql;GRANT ALL PRIVILEGES ON *.* TO &apos;root&apos;@&apos;%&apos; IDENTIFIED BY &apos;密码&apos; WITH GRANT OPTION; # 将密码处替换为root密码FLUSH PRIVILEGES; 3.安装Keepalived 1234apt updateapt install libssl-dev openssl libpopt-devapt install libnl-3-dev libnl-genl-3-devapt install daemon libc-dev libnfnetlink-dev keepalived vim /etc/rsyslog.d/50-default.conf 取消下列配置的注释 1234*.=info;*.=notice;*.=warn;\\ auth,authpriv.none;\\ cron,daemon.none;\\ mail,news.none -/var/log/messages 1cp /usr/share/doc/keepalived/samples/keepalived.conf.sample /etc/keepalived/keepalived.conf 二、 配置主从复制配置节点1 vim /etc/mysql/mysql.conf.d/mysqld.cnf 12345678910111213141516[mysqld]# bind-address = 127.0.0.1# The following can be used as easy to replay backup logs or for replication.# note: if you are setting up a replication slave, see README.Debian about# other settings you may need to change.server-id = 1 # 节点IDlog_bin = /var/log/mysql/mysql-bin.log # 日志binlog_format = &quot;ROW&quot; # 日志格式auto_increment_increment = 2 # 自增ID间隔（=节点数，防止ID冲突）auto_increment_offset = 1 # 自增ID起始值（节点ID）#binlog_do_db = include_database_namebinlog_ignore_db = mysql # 不用于同步的数据库binlog_ignore_db = information_schema # 同上binlog_ignore_db = performance_schema # 同上binlog_ignore_db = sys # 同上 重启mysql ： service mysql restart 后进入MySQL： 1234567mysql&gt; show master status;+------------------+----------+--------------+-------------------------------------------------+-------------------+| File | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |+------------------+----------+--------------+-------------------------------------------------+-------------------+| mysql-bin.000001 | 154 | | mysql,information_schema,performance_schema,sys | |+------------------+----------+--------------+-------------------------------------------------+-------------------+1 row in set (0.00 sec) 配置节点2 vim /etc/mysql/mysql.conf.d/mysqld.cnf 12345678910111213141516171819[mysqld]#bind-address = 127.0.0.1server-id = 2 # 节点IDlog_bin = /var/log/mysql/mysql-bin.log # 日志relay_log = /var/log/mysql/mysql-relay-bin.log # 中继日志log_slave_updates = ON # 中继日志执行后，变化计入日志read_only = 0binlog_format = &quot;ROW&quot; # 日志格式auto_increment_increment = 2 # 自增ID间隔（=节点数，防止ID冲突）auto_increment_offset = 2 # 自增ID起始值（节点ID）#binlog_do_db = include_database_namebinlog_ignore_db = mysql # 不用于同步的数据库binlog_ignore_db = information_schema # 同上binlog_ignore_db = performance_schema # 同上binlog_ignore_db = sys # 同上replicate_ignore_db = mysql # 不用于同步的数据库replicate_ignore_db = information_schema # 同上replicate_ignore_db = performance_schema # 同上replicate_ignore_db = sys # 同上 service mysql restart重启服务后进入MySQL终端： 123456CHANGE MASTER TO MASTER_HOST=&apos;192.168.179.86&apos;, MASTER_USER=&apos;root&apos;, MASTER_PASSWORD=&apos;ustb_scce&apos;, MASTER_LOG_FILE=&apos;mysql-bin.000001&apos;, MASTER_LOG_POS=154; 显示 Query OK, 0 rows affected, 2 warnings (0.03 sec)开启主从同步并查看节点2状态： 12start slave; show slave status\\G 注意观察Slave_IO_Running和Slave_SQL_Running需要均为Yes 测试主从从其他地方找一个库dump下来： mysqldump -uroot cs_notes &gt; create-cs_notes.sql -p在节点1机器上创建库 create database cs_notes;然后导入文件 mysql -uroot cs_notes &lt; create-cs_notes.sql -p可以在节点1和节点2都观察到数据库表文件的更新 三、Keepalived配置虚拟IP实现双主节点在云管理平台为2个节点分配内网虚拟IP，如172.16.10.15。节点1keepalived配置 123456789101112131415161718192021222324252627282930313233343536373839global_defs { notification_email { root@localhost } notification_email_from node07_keepalived@localhost smtp_server 127.0.0.1 smtp_connect_timeout 30 router_id node07 # 主机名}vrrp_script chk_mysql_port { # 检测mysql服务是否在运行 script &quot;/opt/chk_mysql.sh&quot; # 这里通过运行脚本检测 interval 2 # 脚本执行间隔2s weight -5 # 脚本结果导致的优先级变更，检测失败（脚本返回非0）则优先级-5 fall 2 # 连续2次检测失败才算 rise 1 # 检测1次成功就算成功}vrrp_instance VI_1 { state MASTER # 节点1 interface eth0 # 绑定虚拟IP的网络接口 mcast_src_ip 192.168.179.86 virtual_router_id 51 # VRRP组名，两个节点的设置必须一样，以指明各个节点属于同一VRRP组 priority 101 # 节点1的优先级，越大优先级越高，节点2的优先级比这个低一点 advert_int 1 # 组播消息发送间隔，两个节点必须设置一样 authentication { # 设置验证信息，两个节点必须一致 auth_type PASS auth_pass test1234 } virtual_ipaddress { # 指定虚拟IP，两个节点必须设置一样 172.16.10.15 } notify_master &quot;/etc/keepalived/mail_notify.sh master&quot; notify_backup &quot;/etc/keepalived/mail_notify.sh backup&quot; notify_fault &quot;/etc/keepalived/mail_notify.sh fault&quot; track_script { chk_mysql_port }} 节点2 keepalived配置： 123456789101112131415161718192021222324252627282930313233343536373839global_defs { notification_email { root@localhost } notification_email_from node08_keepalived@localhost smtp_server 127.0.0.1 smtp_connect_timeout 30 router_id node08 # 主机名}vrrp_script chk_mysql_port { # 检测mysql服务是否在运行 script &quot;/opt/chk_mysql.sh&quot; # 这里通过运行脚本检测 interval 2 # 脚本执行间隔2s weight -5 # 脚本结果导致的优先级变更，检测失败（脚本返回非0）则优先级-5 fall 2 # 连续2次检测失败才算 rise 1 # 检测1次成功就算成功}vrrp_instance VI_1 { state BACKUP # 两台配置节点均为BACKUP interface eth0 # 绑定虚拟IP的网络接口 mcast_src_ip 192.168.179.85 virtual_router_id 51 # VRRP组名，两个节点的设置必须一样，以指明各个节点属于同一VRRP组 priority 99 # 节点1的优先级，节点2的优先级比这个低一点 advert_int 1 # 组播消息发送间隔，两个节点必须设置一样 authentication { # 设置验证信息，两个节点必须一致 auth_type PASS auth_pass test1234 } virtual_ipaddress { # 指定虚拟IP，两个节点必须设置一样 172.16.10.15 } notify_master &quot;/etc/keepalived/mail_notify.sh master&quot; notify_backup &quot;/etc/keepalived/mail_notify.sh backup&quot; notify_fault &quot;/etc/keepalived/mail_notify.sh fault&quot; track_script { chk_mysql_port }} vim /opt/chk_mysql.sh 12345678910111213141516171819202122232425262728293031323334353637#!/bin/bashcounter=$(netstat -na|grep &quot;LISTEN&quot;|grep &quot;3306&quot;|wc -l)if [ &quot;${counter}&quot; -eq 0 ]; then /etc/init.d/keepalived stopfi``编写异常处理脚本，复制到两台机器&gt; vim /etc/keepalived/mail_notify.sh```shell#!/bin/bashcontact1=&apos;yaoqijun@xs.ustb.edu.cn&apos;contact2=&apos;wenyoupeng@xs.ustb.edu.cn&apos;notify() { local mailsubject=&quot;$(hostname) to be $1, vip floating&quot; local mailbody=&quot;$(date +&apos;%F %T&apos;): vrrp transition, $(hostname) changed to be $1&quot; echo &quot;$mailbody&quot; | mail -s &quot;$mailsubject&quot; $contact1 echo &quot;$mailbody&quot; | mail -s &quot;$mailsubject&quot; $contact2}case $1 inmaster) notify master ;;backup) notify backup ;;fault) notify fault ;;*) echo &quot;Usage: $(basename $0) {master|backup|fault}&quot; exit 1 ;;esac 退出后分配权限： chmod +x /etc/keepalived/mail_notify.sh 四、配置报警邮件通知1apt install mailutils 测试发送： 1echo &quot;test email&quot; | sendmail &lt;email_addr&gt; 读邮件操作： 123mailt *q 配置SMTP服务器，这里以QQ邮箱为例： vim /etc/mail.rc 123456set from=用于发送邮箱set smtp=smtp.qq.comset smtp-auth-user=用于发送的邮箱set smtp-auth-password=认证密码set smtp-auth=loginset ssl-verify=ignore","link":"/2021-Nov-2nd-MySQL-hot-redundancy-system/"},{"title":"SOA web service架构学习","text":"面向服务架构（SOA）是目前软件架构发展的趋势，它伴随云计算（Cloud computing）而产生。SOA八大设计原则：1.标准化服务合约2.3.4.","link":"/2021-Oct-10th-SOA-web-service-architecture/"},{"title":"Java native 方法实现","text":"Java native方法采用C++语言实现，需要包含头文件 jni.h 1. 编写 .java 库文件123456789101112131415// JNILib.javapublic class JNILib { // native声明，用于生成c/c++代码 public native int testCppFunc(); // 加载c/c++编译好的库 static { System.loadLibrary(&quot;test&quot;); } public static void main(String[] args) { int ans = new JNILib().testCppFunc(); System.out.println(ans); }} 这是Linux下的实现，加载的动态链接库文件是libtest.so，如果是Windows，则需要将test修改为test.dll 2. 生成头文件与函数声明12javac LNILib.javajavah -jni -classpath . JNILib 此时，会在同级目录下生成JNILib.h的头文件，该头文件需要引用来自 $JAVA_HOME/include 下的 jni.h 和 $JAVA_HOME/include/linux 下的 jni_md.h (对于Windows，这个头文件是$JAVA_HOME\\include\\win32 下的jni.md.h) 3. 编写实现函数将JNILib.cc中生成的函数声明拷贝到源文件.cc中加以实现： 123456789#include &quot;JNILib.h&quot;#include &lt;stdlib.h&gt;JNIEXPORT jint JNICALL Java_JNILib_testCppFunc(JNIEnv *env, jobject obj) { int a = 1; int b = 2; jint c = a + b; return c;} 4. 编译动态链接库12export LD_LIBRARY_PATH=&quot;$LD_LIBRARAY_PATH:/home/wsd/STEM/Experiments/Java/jni&quot;g++ JNILib.cc -fPIC -shared -o libtest.so -I. -I/usr/lib/jvm/java-8-jdk/include -I$JAVA_HOME/include/linux 参数解释：export LD_LIBRARY_PATH 需要添加当前目录的绝对路径，否则会报告java.lang.UnsatisfiedLinkError: no libtest.so in java.library.path的错误，可以通过命令 java -XshowSettings:properties 检查当前目录是否在其中。-fPIC 表示编译为位置独立的代码，如果不用此选项编译后的代码是位置相关的所以动态载入时是通过代码拷贝的方式来满足不同进程的需要，而不能达到真正代码段共享的目的。-shared 表示制定生成动态链接库。不用该标志只相当于一个可执行文件，外部程序无法连接。-I 添加.h文件要连接的库所在的目录 编译后可通过ldd检查是否正确连接： 1234567wsd@arch $ ldd libtest.so [0] linux-vdso.so.1 (0x00007fffd2df6000) libstdc++.so.6 =&gt; /usr/lib/libstdc++.so.6 (0x00007fb02c228000) libm.so.6 =&gt; /usr/lib/libm.so.6 (0x00007fb02c0e4000) libgcc_s.so.1 =&gt; /usr/lib/libgcc_s.so.1 (0x00007fb02c0c9000) libc.so.6 =&gt; /usr/lib/libc.so.6 (0x00007fb02befd000) /usr/lib64/ld-linux-x86-64.so.2 (0x00007fb02c473000) 5. 执行测试1java JNILib","link":"/2021-Oct-24th-Java-native-method-implementation/"},{"title":"Linux进程间通信","text":"References","link":"/2021-Oct-30th-Linux-inter-process-communication/"},{"title":"服务型合约引擎构建指南","text":"合约引擎目前依赖基于 Spring MVC 构建方法，主要包括 DAO层、Service层和Controller层。 一、Controller层主要涉及合约上传、合约初始化、合约接口调用 合约范本的字符文件储存在哪里？不同的注册中心之间如何同步合约范本可以储存在区块链系统或合约范本数据表中，由于合约范本只是文本的模板文件，所以不要求不可篡改，故保存在注册中心单独数据库中即可。合约范本的同步：访问数据库系统合约范本的实例化：通过协商过程传递进来的参数进行范本实例化，或者直接传递协商好的SPESC合约文件。每个微服务注册信息中带有实例化合约条款参数，对应具体的合约实例，能根据具体的合约实例启动微服务。 如何对合约范本进行实例化？通过ctml和emd如何根据合约实例启动对应的微服务实例：合约实例编译的过程可指定服务接口声明和启动参数。启动合约的过程附带执行服务启动脚本。 二、Service层三、DAO层合约数据以contractData字段的形式存储在区块链交易中。而contractData中的数据格式是怎样的呢？这里我们要考虑两台机器同时执行一个智能合约的情况。为了保持最终一致性，contractData中应该存储动作执行的偏序拓扑结构。拓扑中的每个节点可以代表一个合约的状态。","link":"/2021-Sept-24th-service-contract-engine-manual/"},{"title":"Learning notes of ssembly language","text":"As a kind of programming languages, assembly language is intermediate between higher-level languages that cannot be recognized by a machine and machine code instructions that are not friendly for human reading. Therefore it is very helpful for us to understand the underlying mechanism of computer programs. I. Basic conceptsI.1 Modern CPU architecture The modern CPU architecture is a mixture of classic Von Neumann computer architecture and Harvard computer architecture, generally composed of control unit(CU), arithmetic logic unit(ALU), registers, three levels of caches, memory management unit(MMU) etc. Instruction and input data, initially stayed in memory, are read into CPU through bus. They are then processed by CU and ALU in a streamline way. The result data will also be stored in registers or caches, then reused or waiting a proper time to write into memory. I.2 RegistersRegisters play a vital role in CPU as they store temporary data during instruction execution and some of those have special functionalities which are neccssary for CPU processing. Their store size is kept equal to ALU/CU input and output size in one time(i.e. on 32-bit CPU, register size shall be 32-bit). For example, program counter(PC) is a special register that always stores the address of the next instruction to be executed from memory. so some people like to category it inside CU. Common registers are variables in Assembly language. I.3 Addressing modesDOS AssemblyDebug ToolR: look and change register’s value","link":"/2022-Jun-11th-Assembly-note/"},{"title":"Kubernetes云原生学习","text":"Kubernetes（简称k8s）由Google开源，是目前学习云原生的最好实践平台。 创建 Kubernetes 集群1.网页版1.开启/启动一个新的节点，作为初始化集群的master节点： 1kubeadm init --apiserver-advertise-address $(hostname -i) --pod-network-cidr 10.5.0.0/16 其中，--apiserver-advertise-address参数设置master节点地址为hostname的当前地址，--pod-network-cidr参数设置pod子网地址。 2.初始化集群网络： 1kubectl apply -f https://raw.githubusercontent.com/cloudnativelabs/kube-router/master/daemonset/kubeadm-kuberouter.yaml 3.（可选）新建一个nginx部署： 1kubectl apply -f https://raw.githubusercontent.com/kubernetes/website/master/content/en/examples/application/nginx-app.yaml 4.开始使用集群之间，需要以普通用户执行下列命令： 123mkdir -p $HOME/.kubesudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/configsudo chown $(id -u):$(id -g) $HOME/.kube/config 或者如果是root用户，可以执行下列命令： 1export KUBECONFIG=/etc/kubernetes/admin.conf 现在集群中应该已部署好了一个pot网络 4.启动/打开一个新的实例作为node节点，根据master节点上的提示，在新的node节点终端上执行： 1kubeadm join 192.168.0.8:6443 --token z3v1s2.045o6upefpqlosnl --discovery-token-ca-cert-hash sha256:f3358c51778cce9d1c47cd9f245876f35d3188c212ceaf9ff65e1ccd01afead3 其中 192.168.0.8:6443 为master节点IP和对外端口号，--token参数和-discovery-token-ca-cert-hash参数均由master节点终端页面的提示提供。若要添加更多node节点，则新建终端重复第4步即可。 此时在 master 节点上执行 kubectl get nodes 查看节点所有节点状态： 2.minikube安装与配置QEMU支持参考：https://wiki.archlinux.org/title/Minikube 对于配置代理的情况，需要给NO_PROXY添加MINIKUBE的IP地址，以方便能从宿主机访问到minikube 成功启动页面： 安装helm 12sudo pacman -Syu helmhelm version 之后每次使用前操作： 123sudo systemctl start libvirtd.serviceminikube startminikube dashboard 测试helm添加bitnami源12helm repo add bitnami https://charts.bitnami.com/bitnamihelm repo list 测试helm安装bitnami/nginx1helm install my-release bitnami/nginx 可以通过 minikube dashboard 查看部署的nginx应用","link":"/2022-Jan-2rd-Kubernetes-cloud-native-applications/"},{"title":"Learn Spring Cloud Hystrix in Practice","text":"","link":"/2022-Mar-24th-Learn-Spring-Cloud-Hystrix-in-Practice/"},{"title":"Learn Spring Cloud Gateway Step by Step","text":"","link":"/2022-Mar-28th-Learn-Spring-Cloud-Gateway/"},{"title":"Visualization for Spring Boot Appication Metrics","text":"","link":"/2022-Mar-30th-SpringBoot-Appication-Metrics-Visualization/"},{"title":"2022-May-11th-Design-patterns-Strategy","text":"","link":"/2022-May-11th-Design-patterns-Strategy/"},{"title":"2022-May-1st-Learn-React-JS","text":"","link":"/2022-May-1st-Learn-React-JS/"},{"title":"2022-May-8th-Design-patterns-Composite.md","text":"","link":"/2022-May-8th-Design-patterns-Composite-md/"},{"title":"2023-Aug-22nd-Virtualization-on-Windows-PC","text":"","link":"/2023-Aug-22nd-Virtualization-on-Windows-PC/"},{"title":"Design Patterns —— MVC","text":"","link":"/2022-Oct-16th-Design-patterns-MVC/"},{"title":"2023-Jan-2nd-Shortcuts-quicken-your-work","text":"","link":"/2023-Jan-2nd-Shortcuts-quicken-your-work/"},{"title":"2023-Sep-2nd-Gimp-image-processing","text":"","link":"/2023-Sep-2nd-Gimp-image-processing/"},{"title":"2023-Sept-23rd-Design-time-management-system.md","text":"","link":"/2023-Sept-23rd-Design-time-management-system-md/"},{"title":"2023-Sept-24-Conventions-in-WebX","text":"","link":"/2023-Sept-24-Conventions-in-WebX/"},{"title":"2024-Mar-17th-Photography-landscape","text":"","link":"/2024-Mar-17th-Photography-landscape/"},{"title":"2024-Mar-30th-Photograph-post-processing","text":"","link":"/2024-Mar-30th-Photograph-post-processing/"},{"title":"2024-Sep-29th-macOS-Linux-Dual-System","text":"","link":"/2024-Sep-29th-macOS-Linux-Dual-System/"},{"title":"LaTeX tipa package generating French phonetic marks","text":"\\let\\ipa\\textipa \\ipa{[O]}","link":"/26-mars-un-cent-francais/"},{"title":"几类作图工具的选择","text":"目前使用的论文作图工具有几种: gnuplot, Illustrator, matlab, matplotlib, Origin, Photoshop, R-ggplot, tikz, visio, Windows自带画图 gnuplot开源, 图形清爽简洁, 需要编程思维适用情况: 通用, 更适合Linux下作图 Illustrator能会出复杂和绚丽的图表, 海报, 宣传画报等, 并且是矢量图形式. 当然学习难度也比较大, 把那些工具用熟练了不容易.适用情况: 宣传画报, 视觉渲染 matlab绘图MATLAB环境下实验结果的绘图, 类似的还有 Mathematica 绘图, Maple 绘图和 MathCAD 绘图. matplotlibPython环境下实验结果的绘图 Origin科研用绘图软件, 仅支持Windows适用情况: 数理化生实验 R-ggplot2R语言广泛用于统计, ggplot2功能不如Python或者MATLAB全面适用情况: R语言下绘图 tikzLaTeX绘图, 矢量图形式 Visio简易流程示意图. 它有丰富的图片库, 包括电路图库等. 并且与Office组件的兼容性较好。适用情况: Windows下对作图精读要求不严格的情况 Windows自带画图不要忽略了Windows自带的画图软件哦, 小时候这款软件陪伴了我们在家长办公室里的时光. 最快速的方法用来做最简单的图. 总结其实上面的讨论有点类似于编程语言之争. 关键还是思路, 在心里的反应. 而不是画图软件, 没有思路的时候可以用纸笔或者画图板做出草图. 具体使用指南Visio连接线文本很方便，拖动连接线文本也会跟着移动。但遇到过这样的问题，当背景不是白色的时候，连接线文本的背景却是白色，显得很突兀。想修改形状样式&gt;填充&gt;无填充，但修改的是连接线的属性。如何修改连接线文本背景为透明呢？答：点击连接线&gt;字体&gt;文本块&gt;文本背景&gt;”纯色”改为”无” 连接线挤占变形本来是直线连接：过来一个形状后就挤压了原来连接线的位置：解决办法： 将连接线设置为直线连接线，然后开发工具 &gt; 保护 &gt; 锁定x轴，y轴 直角连接线添加折角假如原先有一条直角连接线： 希望变成下面这样的： 需要使用连接点模式，按住Ctrl键进行单个锚点的改动： Origin Pro参见 https://billystudio.github.io/2021/05/28/2021-May-28th-OriginPro-with-examples/","link":"/Advice-on-selections-of-ploting-tools/"},{"title":"Python pickle package","text":"pickle is a Python package for saving and loading a dict file. usually the code like this: For saving: 12with open(&apos;dict_frame_score.pkl&apos;, &apos;wb&apos;) as f: pickle.dump(dict_frame_scores, f, pickle.HIGHEST_PROTOCOL) For loading: 12with open(&quot;dict_frame_score.pkl&quot;, &quot;rb&quot;) as f: name_scores = pickle.load(f) If you save several dicts using pickle.dump(), you should use the same amount of pickle.load(f) to load them.","link":"/Apr-10th-Python-pickle-package/"},{"title":"Arch Linux journey","text":"I have long heard about the fame and reputation of Arch Linux. But not until after I have commenced to explore on this distro did I really feel the enjoyness that Linux brings to me. This article mainly aims to record the problems that I faced during my hunting journey as well as the solutions that are suitable to solve them. It is not going to just drop down every step that I followed, neither will it explains every concept and mechanism lying in those procedures, commands and scripts. Because the more detailed and thorough explanations can be easily found on ArchWiki and Web. What this article tries to do is to strip down my thoughts and to help to improve my and the readers’ understanding of Arch, of Linux, and hopefully, of Operating Systems. I just hope what I have written here would save my time if I face the similar problems again and help more people to save our precious time. PreparationThe preparation process for those who ever installed some other Linux distribution versions is a comparatively easy job which may cause less problems. Note that UltraISO is not suggested for write Arch Linux installation image. Installation mediaHow can I write image into flash disk?After writing, you cannot find it by Windows or Linux file system. Keeping this in mind, don’t be worry. 1dd bs=4M if=Downloads/archlinux-2019.06.01-x86_64.iso of=/dev/sdx status=progress oflag=sync Network supportSome campus Wi-Fi need username and password to get Internet access, which is not supported by command-line Live system. For a cellphone, it have only one wireless card, so it cannot functioned as both the Wi-Fi user and the hotspot at the same time. If using a hotspot from cellphone, note that ping command may not be supported. An RJ45 wired connection without password is recommended because this is the easiest one. Remember that network connection is necessary. How do I maintain the network connection which requires webpage user login for example a campus-net environment?In this case, a hotspot generated by your cellphone mobile data is recommended, even though it is a little slow without a proxy. How can I connect to an encrypted WiFi network by under archiso installing process?The problem of connecting to network may be reappearing after OS is installed, so it’s better to understand as thorough as possible at the beginning. The connection process can be divided into three parts: first, setup interface; second, authentication from the router; third, get ip address.Back to simply, set a non-encrypt wireless network and use wifi-menu for connecting. This tool belongs to netctl and will do first and second step for you. wifi-menu also supports WPA encrypted WiFi spot. However, nowadays WPA2 protocal has been widely used so several other tools can be selected to use archwiki-wireless-network-config. Take wpa_supplicant as an example: 123ip link set wlp58s0 up # First step: Set Wlan interface upwpa_supplicant -B -i wlp58s0 -c &lt;(wpa_passphrase &quot;Abc-104&quot; &quot;4001001225888&quot;) # Second step: Replace with your wifi name and passdhcpcd # Third step: to get a dynamic ip address Note that you must use root user for manipulation rather than sudo. InstallationThe mainly installation process generally consists of these parts: 0. Accessing Internet 1. Partitioning the disk and formating; 2. Install base system on new arch and change root; 3. Adding boot config; 4. Windows manager and display manager 5. Reboot into new arch 6. System settings 1. Partitioning the disk and formatting12345678fdisk -lgdisk -l /dev/sdagdisk /dev/sda # EFI(skip for dual system boot), swap(recommended)mkswap -L &quot;Linux Swap&quot; /dev/sda3swapon /dev/sda3free -m # Verify if swap is turned onmkfs.ext4 -L &quot;Arch Linux&quot; /dev/sda2mkfs.fat -F32 /dev/nvme0n1p1 2. Installing base system for new arch123mount /dev/[partition where you install root hierachy /] /mnt # First mount it under /mnt(Optional) vim /etc/pacman.d/mirrorlist # Server=https://mirrors.tuna.tsinghua.edu.cn/archlinux/$repo/os/$archpacstrap /mnt base # Other groups can also be installed here, eg: base-devel your-favorite-desktop Don’t worry if one or some packages were lost during the installation process. If that could happen, just reboot go back to live system and install and chroot to newly-installed system. 3. Adding boot config预备知识 —— Linux操作系统的启动过程： 123456789101112mkdir -p /mnt/boot/efimount /dev/sda1 /mnt/boot/efi # Mount your EFI partitiongenfstab -p /mnt &gt;&gt; /mnt/etc/fstab # Check by cat, this file should contain all partitions of your new systemarch-chroot /mntpasswd rootln -s /usr/share/zoneinfo/Asia/Shanghai /etc/localtimemkinitcpio -p linuxsudo pacman -Syu grub efibootmgr(Optional) mkdir /boot/grub # 无则创建grub-mkconfig -o /boot/grub/grub.cfggrub-install /dev/sda # grub-install --target=x86_64-efi --efi-directory=/boot/efi --bootloader-id=grubls -l /boot/efi/EFI/arch # Checking 查看所有可用启动项： 1efibootmgr -v 启动项的修复： 1efibootmgr --create --disk /dev/nvme0n1 --loader /boot/efi/EFI/grub/grubx64.efi --label &quot;grub 2&quot; --verbose -e 3 如果重启后仍然没有被检测到，则需要进入UEFI Shell手动添加 4. Desktop and display managerboforeBefore choosing our willing destop, create a normal user for using graphical interfaces. 1234pacman -S vim xterm zsh sudo fakeroot # fakeroot is for aur makepkgpacman -S dialog wpa_supplicant # wireless network supportuseradd -G wheel -s /bin/zsh -m -c &quot;WANG Shengdian&quot; wsdpasswd wsd # ****** For window desktops, you can choose GNOME, KDE, or others.You can use display managers(gdm for gnome and lightdm usually for kde) or not.Here I give two suggestive configurations without display manager(Gnome and i3). For KDE users, goes here. Before desktop settings, install startx: 1pacman -S xorg-xinit startx uses .xinitc and .zprofile(or .bash_profile) 4.1. GNOME wayland12pacman -S gnome-desktop gnome-control-center gnome-shell gnome-tweaks # or put simply, pacstrap /mnt gnomepacman -S xorg-server-xwayland For startx wayland, add to .zshrc(because I set zsh as default shell): if [[ -z $DISPLAY &amp;&amp; $(tty) == /dev/tty1 &amp;&amp; $XDG_SESSION_TYPE == tty ]]; then MOZ_ENABLE_WAYLAND=1 QT_QPA_PLATFORM=wayland XDG_SESSION_TYPE=wayland exec dbus-run-session gnome-session fi If you choose gdm display manager(which some software like teamviewer requires): pacman -Syu gdm systemctl enable gdm For a more detailed configuration and more deeply exploring about Gnome, go to this article 4.2. i3 startxpacman -S xorg i3-wm i3status dmenu # install i3dm pacman -S xorg-xinit # install startx Add to ~/.zshrc: if systemctl -q is-active graphical.target &amp;&amp; [[ ! $DISPLAY &amp;&amp; $XDG_VTNR -eq 1 ]]; then exec startx fi Add ~/.xinitrc [ -f /etc/xprofile ] &amp;&amp; . /etc/xprofile [ -f ~/.xprofile ] &amp;&amp; . ~/.xprofile ... exec i3 afterunified wireless network configwpa_supplicant.conf 12ctrl_interface=/run/wpa_supplicantupdate_config=1 12systemctl enable wpa_supplicant@wlp58s0.servicesystemctl enable dhcpcd 5. Reboot into new arch123exit # exit chrootumount -R /mntreboot Then change boot option at start up. 6. System settings and loacalizationEdit host name: /etc/hostnameEdit known hosts: /etc/hostsLocale: https://wiki.archlinux.org/index.php/LocaleFonts: https://wiki.archlinux.org/index.php/Fonts#Manual_installation Add archlinuxcn repositorycat into ‘/etc/pacman.conf’ with 123/etc/pacman.conf[archlinuxcn]Server = https://mirrors.tuna.tsinghua.edu.cn/archlinuxcn/$arch Then in terminal: 1sudo pacman -Syy &amp;&amp; sudo pacman -S archlinuxcn-keyring Note that Manjaro doesn’t have archlinuxcn support yet. Q &amp; AWhy I cannot find the disk file system when using fdisk -lAnalyse: I face this problem because I am using Dell XPS-13 with SDD. I should go into BIOS setup and change the integrated SATA hard drive controller from ‘RAID ON’ to ‘AHCI’. After that, reboot windows using diagonotics. Add boot option for single-disk installFor my Dell-XPS13, type F12 to enter BIOS, then find ‘boot sequence’ menu and add a boot option from \\EFI\\arch\\grubx64.efi Restore the flash USB after installing processExtra settings for dual system?grub to replace windows EFI starter how can I get write access to Windows NTFS filesystem?Install the open source version of NTFS, i.e., ntfs-3g.The proper way is to create a /mnt/win10 folder that is owned by your current user.And then write the configuration in /etc/fstab likeUUID=FED8CDDDD8CD93F5 mnt/win10 ntfs-3g defaults 0 0UUID can be found by blkid of root. Q: why the times are incompatible?Because windows just take the machine time as the time of current timezone. But Linux defaultly take it as UTC+0, and change to current timezone. Solution:Considering that modifying Windows settings is more complex, we change Linux settings by take machine time as the time of current timezone. If I don’t use Windows OS for a while, it will go into Hibernate Mode. And when I open again, boot defaultly enter Arch Linux. Then I cannot edit files under Windows filesystem because they are in read-only state. How can I prevent this situation?In Sleep Mode, the system won’t restart. So you need to change the power settings in control panel. Just go to advanced setting &gt; Hibernate after this time &gt; Never.I think that will be fine. SharpeningWireless networkQ&amp;A: I suddenly has no internet access even IP address shows. I cannot ping gateway, why?If you are using wps_supplicant, typing: 1sudo systemctl restart wpa_supplicant@wlp58s0.service may solve it instantly. A sample configuration file /etc/wpa_supplicant/wpa_supplicant-wlp58s0.conf 12345678910# Giving configuration update rights to wpa_clicountry=CNctrl_interface=/run/wpa_supplicantctrl_interface_group=wheelupdate_config=1network={ ssid = &quot;name-WiFi&quot; psk = somethingafterhash} If you are using netctl, typing: 12sudo netctl stop wlp58s0-USTB_Wi-Fisudo wifi-menu The power saving strategy of iw may cause regularly wireless network down. To prevent this, set it off: Q&amp;A: Change from wpa_supplicant to netctl and vice versa?example of changing from wpa_supplicant to netctl: 123sudo systemctl stop wpa_supplicant@wlp58s0sudo ip link set wlp58s0 downip a # Check if there is a ip addr residual If there exists an ip addr not delete, use 1sudo ip addr del [IP address] dev [WIFI dev] 1sudo netctl start [your wifi profile] # Or sudo wifi-menu for the first time example of changing from netctl to wpa_supplicant: 12sudo systemctl stop netctl@USTB_Wi-Fisudo systemctl start wpa_supplicant@wlp58s0 AURBefore building an AUR package, ensure that base-devel is installed 1sudo pacman -S --needed base-devel AUR through proxy export all_proxy=&apos;http://127.0.0.1:1080&apos; under user’s shell by editing ‘~/.zshrc’. under root user, visudo /etc/sudoers, Defaults env_keep += &quot;all_proxy ftp_proxy http_proxy https_proxy no_proxy&quot; to keep envs when sudo 关于包管理多说一嘴aur 安装后的包可以通过pacman来卸载，但无法像Repository中的包一样直接通过pacman来更新。所以有些包不适合用aur来安装，有些包适合。比如，更新一次就要下载很大安装包的IDEA，就比较适合用aur来管理，想更新就更新。再大一点的就可以脱离aur，直接去官网下载安装，如MATLAB。而一些python下的工具或node.js安装的工具，可以用自带的pip或者npm来管理，用aur反而不够灵活，且多余。 Desktop: i3-wmcommon commandsi3 supports three window layouts: stacking mode, tabbed mode, and standard mode.$mod+s: stacking mode$mod+w: tabbed mode$mod+e: standard mode To prevent sleeping/etc/systemd/logind.conf 1HandleLidSwitch ignore append to ‘~/.xprofile’ 123xrandr --output eDP-1 --off # close laptop primary screenxset s off -dpmsxset s noblank Brightness of screenfor intel graphical driver, go into 123# cd /sys/class/backlight/intel_backlight# cat max_brightness# echo 3000 &gt; brightness Check if it is ok. Then we will combine keys to modify it. Install 1sudo pacman -S xf86-video-intel Before binding the kay, check the name of keys by xmodmap -pke, the edit: 12bindsym XF86MonBrightnessUp exec xbacklight -inc 10 # increase screen brightnessbindsym XF86MonBrightnessDown exec xbacklight -dec 10 # decrease screen brightness Sound card1sudo pacman -Syu pulseaudio pulseaudio-alsa Bluetooth sounder1234567sudo pacman -Syu bluez bluez-utils pulseaudio-bluetoothsudo usermod -a -G lp wsdpulseaudio -k # ensure closepulseaudio --startsudo pacman -Syu pavucontrol # gui for redirectinglsmod | grep btusb # check if the module loadssudo systemctl start bluetooth.service Then open the bluetooth control 1234567bluetoothctl[bluetooth]# power on[bluetooth]# scan on[bluetooth]# pair EC:49:BC:00:90:DE [bluetooth]# paired-devicesDevice EC:49:BC:00:90:DE SANSUI A38S[bluetooth]# connect EC:49:BC:00:90:DE Touchpad tap-to-click1sudo touch /etc/X11/xorg.conf.d/90-touchpad.conf Add these lines 12345678910# 90-touchpad.confSection &quot;InputClass&quot; Identifier &quot;touchpad&quot; MatchIsTouchpad &quot;on&quot; Driver &quot;libinput&quot; Option &quot;Tapping&quot; &quot;on&quot; Option &quot;TappingButtonMap&quot; &quot;lrm&quot; Option &quot;NaturalScrolling&quot; &quot;on&quot; Option &quot;ScrollMethod&quot; &quot;twofinger&quot;EndSection Note that TappingButtonMap lrm means one-finger tap for left click, two-finger tap for right click and three-finger tap for middle click. Wallpaper settingEdit ‘~/.config/i3/config’ 123...exec --no-startup-id feh --bg-scale /path/to/image.file... startx automatic loginaur install xlogin-git, then system enable xlogin@your user System MaintainanceHDD trim1sudo fstrim -a -v Limit systemd journal/etc/systemd/journald.conf 12SystemMaxUse=500MMaxFileSec=1month Take effects immediately. web browser profile-cleaner1profile-cleaner International language supportset locale: https://wiki.archlinux.org/index.php/Localization Change charset123pacman -S encaenca -L zh_CN file # check the encoding of fileenca -L zh_CN -x UTF-8 &lt; file &gt; newfile # convert the encoding of file However, this tool is not steady all the time. So a text editor or an editor plugin is suggestted. Compatibility to Win OSRun win10 in qemu/virt-manager, refer to https://billystudio.github.io/2019/09/17/Sept-17th-Create-vms-on-Linux-the-hard-way/ Install missing fonts on Linux hostI save win10 fonts into the hard drive disk.https://wiki.archlinux.org/index.php/Fonts#Manual_installationSome common missing fonts: Consolas, Calibri, Microsoft Yahei Printer serviceHow can I print through the network HP printer? Install the Linux print servicepacman -S cupsIn this step, you should check if this service is started after installation. You can type localhost:631 to check. If cannot be opened, start the service bysudo systemctl start cups.socket or sudo systemctl start cups.service If there is still some problem, try add your current user to lp group 1sudo gpasswd -a [username] lp Check your group by groups [username] Install the HP Linux imaging and printing driverpacman -S hplip Find the IP address of network printer, and runsudo hp-setup -i [ip addr] If it needs some authentification, enter username as root and provide root pass. If the plugin is not successfully donwloaded by hp-setup program, then follow these steps:Step 1: Go to https://www.openprinting.org/download/printdriver/auxfiles/HP/plugins.Step 2: Download the plugin files (both ‘run’ and ‘run.asc’) for the hplip version that you are using. Then give them execute previlege by chmod +x.Step 3: Re-run hp-setup -i. Choose to specify a path to the plugin and use the path to the ‘run’ file that you downloaded in step 2. It may give you some errors about gpg key checking, but install it anyway.Step 4: In the final step, a test page should be printed. Now you should have a working printer.Refer 1: https://wiki.archlinux.org/index.php/CUPSRefer 2: https://wiki.archlinux.org/index.php/CUPS/Printer-specific_problems#HPLIP remove printer : 1sudo hp-setup -i -r terminal consolez plugin for directory jump https://github.com/rupa/z grant sudo previlige to common userInstall sudo 12cp /etc/sudoers /etc/sudoers.editvisudo /etc/sudoers.edit The file should be opened by default text editor. Mine is vim. Then uncomment the specification for wheel group because my user is already in wheel group. 12visudo -c -f /etc/sudoers.edit # checkmv /etc/sudoers.edit /etc/sudoers Xterm full screenuse ALT+ENTER. Xterm middle key on touchpadCtrl + Click = middle key Q: change the fonts of xtermcreate a file ~/.Xresources, write the wildcard-form settings in it: 12345678xterm*faceName:Consolas:antialias=Truexterm*faceNameDoublesize:Microsoft YaHei:antialias=Truexterm*faceSize: 12xterm*renderFont: truexterm*utf8: 2xterm*utf8Title: truexterm*titleModes: 2xterm*selectToClipboard: true Default color schemes: 1234567891011121314xterm*fullscreen: truexterm*background: Whitexterm*foreground: Blackxterm*color0: Black xterm*color1: Red xterm*color2: Green xterm*color3: Yellow xterm*color4: CornflowerBlue xterm*color5: Magenta xterm*color6: Cyan xterm*color7: Whitexterm*colorBDMode: falsexterm*colorULMode: false xterm*cursorColor: Red background 太亮，换成淡粉灰色#FFFAF0（去白光蓝光），或者护眼色#C7EDCCcolor3 的yellow太亮（用在warning和字符串高亮匹配），背景中体现不出，改为深一些的黄#DAAA01BDMode 是否关闭变色替换加粗，这里关闭以使用加粗模式colorUL 超链接变色模式。用于Ctrl+R匹配命令。若关闭，则使用下划线显示匹配。也应该与背景和前景区分开，使用灰白：#7A8181cusorColor改为深红 1234567891011121314xterm*background: #FFF5EExterm*foreground: Blackxterm*color0: Black xterm*color1: Redxterm*color2: Greenxterm*color3: #DAAA01 xterm*color4: CornflowerBluexterm*color5: Magentaxterm*color6: Cyanxterm*color7: Whitexterm*colorBDMode: false xterm*colorUL: #7A8181 xterm*colorULMode: true xterm*cursorColor: #D3423E Then add [[ -f ~/.Xresources ]] &amp;&amp; xrdb -merge ~/.Xresources to the file .xprofile. For the X-org based GNOME environment, it is ok now. But for the default GNOME 3 wayland based desktop environment, since it didn’t initialize and X11 configurations, we should use other ways for autostarting. Here I suggest to rename .xprofile as .autostart_scripts. I found a way equivelent to audo starting every time logging in that is using xdg autostart files. After installing xdg-user-dirs I write a .desktop file under ‘~/.config/autostart/‘. 12345[Desktop Entry]Type=ApplicationName=XTerm settings under waylandNoDisplay=trueExec=/home/shane/.autostart_scripts Note that the Exec item should be a fullpath filename and the relevant files including ~/.autostart_scripts are granted as user excutable permision(+x). Xterm prevent Alt+B becoming strange symbol1xterm*metaSendsEscape: true How can I copy and paste from xterm?Understanding the concept of ‘PRIMARY’ and ‘CLIPBOARD’, the middle mouse key is served for PRIMARY buffer. If I want to select also for CLIPBOARD, just Ctrl+Mouse Middle Key, and then check ‘selection to clipboard’. Just highlighting by draging(inside one screen) or right mouse key(long screen) will select them for copy, Shift+Insert or using the mouse middle key for paste. Add a keyboard shortcut for xtermSet in GNOME settings &gt; Keyboard shortcut &gt; Add shortcut &gt; run uxterm by pressing ‘Alt + T’ Those common-used software?v2ray12v2ray -test -config=/etc/v2ray/config.jsonsudo v2ray --config=/etc/v2ray/config.json web browserChrome and Firefox are my choices. I suggest adding archlinuxcn Repository to install google-chrome-stable and firefox-esr. text editorI use vim-gnome and visual-studio-code-bin. sudo cp /usr/share/applications/visual-studio-code.desktop ~/.local/share/applications cd ~/.local/share/applications sudo chown wsd:wsd visual-studio-code.desktop vim visual-studio-code.desktop Add proxy --proxy-server=&quot;http://127.0.0.1:1080&quot; to Exec. Sometimes I open several VSCode windows and I want them to look different. In this case, set “window.titleBarStyle” = “custom” to make sure the menu merges title bar. And then install “window colors” extension. pdf viewerEvince and WPS PDF Video playerVLC video viewer System monitorgnome-system-monitor Chinese input method搜狗拼音缺点：占内存、易崩溃、状态栏无法在不输入时隐藏百度拼音缺点：状态栏无法在不输入时隐藏fcitx自带拼音缺点：词库不够强大 or 1ibus ibus-libpinyin to get a quicker access to Chinese input method. 目前使用的方案为fcitx自带双拼。通过输入分号；可以唤起快速输入，用户配置文件在 $HOME/.config/fcitx/data/QuickPhrase.mb 禁用全角快捷键：Global Config 选项 》 Show Advance Options 》 Swithing Full Width Character Mode将两者快捷键都设置为 Empty 即可（按 Esc 键可以清空快捷键设置） 以下是之前倒腾搜狗输入法的记录(Deprecated):Sogou Pinyin is currently the best Chinese Method solution but it is not easy to install it correctly on Arch Linux. Though I give methods here, more efforts should be made when practicing because it changes as time goes. The installation scripts for sogoupinyin which is based on qt4 are: 1234567sudo pacman -Rns fcitx-im fcitx-configtoolrm -rf .config/fcitxrm -rf .sogouinputrm -rf .config/Sogou*sudo pacman -Syu fcitx-lilydjwg-git fcitx-sogoupinyin# For KDE user: sudo pacman -S kcm-fcitx # For GNOME user: pacman -S fcitx-configtool fcitx-qt5 If anything happened during inputing, don’t panic, use Ctrl + 5 to reload Input method. The releases for newly sogouimebs based on qt5 are here: https://gitee.com/laomocode/fcitx-sogouimebs/releases Teamvieweraur teamviewer on xorgIf showing the message Not ready. Please check your connection, then the service should be enabled 1systemctl start teamviewerd.service Note that teamviewer(current version is Teamviewer 14) need lightdm or gdm supports, so startx ways doesn’t work. WPS OfficeAdd archlinuxcn repository, then 1sudo pacman -Syu ttf-wps-fonts wps-office wps-office-mime wps-office-mui-zh-cn Sometimes, wps office may not config input method properly. There are two ways to solve it: For Zsh users Because wps binary files run /bin/bash, so you need to edit ~/.bash_profile and add: export XMODIFIERS=&quot;@im=fcitx&quot; export GTK_IM_MODULE=&quot;fcitx&quot; export QT_IM_MODULE=&quot;fcitx&quot; For Bash users Normally for bash users, wps office can set input method well. But if that is not the case, you need to add some parameters for the executable file. Here I use fcitx on gnome. So I should replace add two lines to, for example, sudo vim /usr/bin/et: 12export XMODIFIERS=&quot;@im=fcitx&quot;export GTK_IM_MODULE=&quot;fcitx&quot; It is just a temporary solution because every time wps-office-et is upgraded, /usr/bin/et will be rewritten to a default config. So it is suggest to enable a user-specific application by 1234sudo cp /usr/share/applications/wps-office-et.desktop ~/.local/share/applicationscd ~/.local/share/applicationssudo chown wsd:wsd wps-office-et.desktopvim wps-office-et.desktop wps-office-et.desktop 1Exec=$HOME/.local/bin/et %f 123sudo cp /usr/bin/et ~/.local/bin/cd ~/.local/binvim et and add the two exports above. Remote Windows desktopAs Windows desktop client 1pacman -S xfreerdp Toggle Full screen: Ctrl + Alt + Enter Link to lab server: 1xfreerdp /size:1920x1080 /network:LAN /u:wangshengdian /v:202.204.62.142 Or xfreerdp -g 1920x1080 -x 0x80 -u wangshengdian 202.204.62.142 As Serverrealvnc-vnc-server ScreenshotUnder GNOME:gnome-screenshot is good for use. Under KDE:spectacle Command Line tool:escrotum Zip file generator and extractor1sudo pacman -Syu 7zip For rar files: 17z x filename.rar For Windows zip file with GBK encoding, use python code in the following 12345678910111213141516171819202122#!/usr/bin/env python2# -*- coding: utf-8 -*-import osimport sysimport zipfileprint &quot;Processing File &quot; + sys.argv[1] file=zipfile.ZipFile(sys.argv[1],&quot;r&quot;);for name in file.namelist(): utf8name=name.decode(&apos;gbk&apos;) print &quot;Extracting &quot; + utf8name pathname = os.path.dirname(utf8name) if not os.path.exists(pathname) and pathname!= &quot;&quot;: os.makedirs(pathname) data = file.read(name) if not os.path.exists(utf8name): fo = open(utf8name, &quot;w&quot;) fo.write(data) fo.closefile.close() DictionaryGo to website http://download.huzheng.org/bigdict/ to download your demanding dictionary and enter root: 12tar -xjvf a.tar.bz2mv a /usr/share/stardict/dic Then we install another pretty good front-end software called goldendict 1sudo pacman -Syu goldendict If you are using Wayland rather than X11, goldendict might not go well. Use QT_QPA_PLATFORM=xcb to force X11 use. 123sudo cp /usr/share/applications/goldendict.desktop ~/.local/share/applicationscd ~/.local/share/applicationssudo chown youruser:youruser goldendict.desktop Then replace Exec= line in goldendict.desktop with Exec=env QT_QPA_PLATFORM=xcb goldendict, where env command is like export in shell programming.(Refer to “goldendict” terminated by signal SIGSEGV (Address boundary error) and segfaults and Arch Wiki Desktop entries) Generally, the dictionary will detected by it, if not, Edit -&gt; Dictionaries -&gt; Files, then add /usr/share/stardict/dic. My experience after using digital dictionaries under WinOS basically includes some points of view. First, it’s of little difference if I am searching words with a web browser. Then I would like to tell some feelings of some WinOS dictionary software. Sure there are plenty of them under WinOS, but most of them carries some unwanted ads. Sometimes I just want the English meanings but they offer me Chinese meaning primarily and defaultly. Excluding those have the former two disadvantages, only Lingoes and OALED are left for choices. But a little unfortunately, Lingoes is huge-size and OALED3 is too old for Win10(its pixel rendering is bad). Under Linux, I can install a clean and small interface and just install the dictionary that I want(Here I mean Merriam-Webster). It’s a very pure experience. Baidu Netdisk Downloaderaria2 backend, Camtd chrome extension and TamperMonkey are prepared.Then install 网盘直链下载助手 userscript in TamperMonkey Then login pan.baidu.com by your own account, click “下载助手”&gt;”RPC下载”&gt;”发送到aria2” to download. Wallpaper ChangerGNOME3: How can I automatically change the wallpaers which are selected from a folder?It is not a big problem because the gnome community has offered a large amount of extensions. What you need to do is to find and then use them. Here, the GNOME extension Wallpaper Changer is suggested for you. Backup: rsync + fcroninstall fcron and rsnyc For example, a user works on server filesystem, and backs up to its local system daily. 123cd /etc/cron.dailysudo touch backupsudo chmod +x backup In backup, write 12#!/bin/bashrsync -a --delete --quiet working-on-the-remote-file backup-to-local 12sudo systemctl start fcron.servicesudo systemctl enable fcron.service byr / iBeike1sudo pacman -S transmission-cli http://localhost:9091 Ref: https://wiki.archlinux.org/index.php/Transmission When using from other computers meeting error 403: Forbidden Unauthorized IP Address.,add your ip to rpc-whitelist in ~/.config/transmission-daemon/settings.json, then restart 12transmission-remote --exit # or pkill -3 transmission-daemontransmission-daemon Games 街机游戏 fceux, 打开 nes 或者 zip 的 ROM 文件按键设置： 屏幕大小设置： UnderstandingpacmanTo see what packages belong to the gnome group, run: 1pacman -Sg gnome To install a package completely, use 1pacman -Rns [package_name] where -R means remove the package, -n means not saving important configuration files, and -s means removing its dependencies which are note required by any other installed packages. Within the firewall, the speed is limited by v4. So I suggest v6. The differences are really distinguishable. get a v6 address get a v6 vps # export all_proxy=&apos;socks5://127.0.0.1:1080&apos; # pacman -Syu To retrieve a list of the files installed by a package, run: 1pacman -Ql package_name To query which package a file/directory in the file system belongs to: 1pacman -Qo /usr/bin/ctags To clear the cache of all uninstalled packages in /var/cache/pacman/pkg/ 1pacman -Sc Q&amp;Apacman -Syu facing: 123==&gt; WARNING: Possibly missing firmware for module: wd719x==&gt; WARNING: Possibly missing firmware for module: aic94xx==&gt; WARNING: Possibly missing firmware for module: xhci_pci every time. To replay these warnings, you can also type: 1mkinitcpio -p linux Reason: you miss these firmwares:aic94xx-firmware: Adaptec SAS 44300, 48300, 58300 Sequencer Firmware for AIC94xx driverwd719x-firmware: Driver for Western Digital WD7193, WD7197 and WD7296 SCSI cardsxhci_pci: rensas controller like uPD720201 and uPD720202You need to install these modules by makepkg -sri: 123git clone https://aur.archlinux.org/aic94xx-firmware.gitgit clone https://aur.archlinux.org/wd719x-firmware.gitgit clone https://aur.archlinux.org/upd72020x-fw.git installing eclipse from aur12345git clone https://aur.archlinux.org/eclipse.gitcd eclipsemakepkg -s # you can download the install packages in advance using aria2csudo pacman -U eclipse-common-4.15-6-x86_64.pkg.tar.xzsudo pacman -U eclipse-java-4.15-6-x86_64.pkg.tar.xz # or jee, javascript, cpp, rust, php Trouble shooting1. Unable to lock database: :: Synchronizing package databases…error: failed to update core (unable to lock database)error: failed to update extra (unable to lock database)…error: failed to synchronize all databases It might because another process is running pacman. Just take a coffee and wait for it ^_- 123456789[root@inspiron-7537 shane]# pacman -Syu :: Synchronizing package databases... error: failed to update core (unable to lock database) error: failed to update extra (unable to lock database) error: failed to update community (unable to lock database) error: failed to update multilib (unable to lock database) error: failed to update archlinuxcn (unable to lock database) error: failed to update blackarch (unable to lock database) error: failed to synchronize all databases Solve: 1rm /var/lib/pacman/db.lck 2. file confliction: 123sudo pacman -Syuerror: failed to commit transaction (conflicting files)python-numpy: /usr/bin/f2py exists in filesystem This happens because I use pip install numpy but some packages in my repository takes python-numpy as dependencies. This is a trivial problem, just remove by sudo pip3 uninstall numpy. 3. could not satisfy dependencies (Dec 22nd 2019):When running sudo pacman --noconfirm -Syu, I received an error: 123error: failed to prepare transaction (could not satisfy dependencies):: installing xorgproto (2019.2-2) breaks dependency &apos;dmxproto&apos; required by libdmx:: installing xorgproto (2019.2-2) breaks dependency &apos;xf86dgaproto&apos; required by libxxf86dga This happens because libdmx requires dmxproto but updating will break this requirement chain, so that libdmx loses dependency.To repair the bug, the easy way is manually removing libdmx and libxxf86dga, then upgrade.But libdmx and libxxf86dga may be dependent under other upper level packages.So we should use pacman -Rdd libdmx libxxf86dga &amp;&amp; pacman -Syu. 4. GPGME error: No data 123456789101112131415error: GPGME error: No dataerror: GPGME error: No dataerror: GPGME error: No dataerror: GPGME error: No data:: Synchronizing package databases... core 137.8 KiB 485 KiB/s 00:00 [######################] 100% extra 1567.2 KiB 666 KiB/s 00:02 [######################] 100% community 5.8 MiB 635 KiB/s 00:09 [######################] 100% multilib 150.3 KiB 626 KiB/s 00:00 [######################] 100% archlinuxcn is up to dateerror: GPGME error: No dataerror: GPGME error: No dataerror: GPGME error: No dataerror: GPGME error: No dataerror: failed to synchronize all databases (unexpected error) Try to empty the synchronized folder and full-update: 12sudo rm -R /var/lib/pacman/syncsudo pacman -Syyu 5. error: signature from “xxx@archlinux.org” is unknown/marginal trust 12error: failed to commit transation (invalid or corrupted package)Errors occured, no packages were upgraded. you should run 1234sudo pacman -Sy archlinux-keyringsudo pacman-key --populate archlinuxsudo pacman-key --refresh-keyssudo pacman -Syu Sometimes my wifi is off. when I ping my local router, the destination is unreachable.Later I find the power_saving function of iw causes that. So I edit /etc/udev/rules.d/81-wifi-powersave.rules: 1ACTION==&quot;add&quot;, SUBSYSTEM==&quot;net&quot;, KERNEL==&quot;wl*&quot;, RUN+=&quot;/usr/bin/iwconfig wlp58s0 power off&quot; Reboot and found iwconfig off the power management. ReferencesThis video is also recommended: https://www.bilibili.com/video/av5462824/?redirectFrom=h5 “goldendict” terminated by signal SIGSEGV (Address boundary error) and segfaults: https://github.com/goldendict/goldendict/issues/935 Arch Wiki Desktop Entries: https://wiki.archlinux.org/index.php/Desktop_entries#Modify_environment_variables","link":"/Apr-15th-Arch-Linux-journey/"},{"title":"Shell Programming | Zsh","text":"Zsh is a wonderful shell, but needs a lot of pre-configuration. Note that, configurating some softwares by myself is a really dull thing, as they can operate well in initially configuration. But there exist some other softwares which only show their great function after configuration, for example, vim, xterm, zsh… InstallationZsh is so famous that it can be found in most Linux package managers. Just easy install it using apt for Debian series or yum for Redhat series or pacman for Arch series. After successful installation, type zsh to make sure Zsh has been correctly installed. Then I should see a simple configuration guide for creating the .zshrc file. Then I use the command chsh to set Zsh as my default shell. One interesting thing is that when I use chsh -l to check the available shells on my computer I see two zsh directories — ‘/bin/zsh’ and ‘/usr/bin/zsh’. It’s not the problem of zsh but the problem of Linux system. Normally a new software binary file should be installed under ‘/usr/‘ directories. But just because so many are using zsh even in a terminal environment, so Linux system builds a link under ‘/bin/‘. Both are alright. Useful PluginsInstall oh-my-zsh plugin firstly, then 1plugins = (git z) where git plugin offers abbr. for git commonly used commands, z plugin simplifies cd operations. Referenceshttps://wiki.archlinux.org/index.php/Zsh","link":"/Apr-17th-Zsh-note/"},{"title":"LaTeX standalone 环境输出图片格式文件","text":"我们经常会遇到在Markdown中插入数学公式的情况, 一种方法是利用MathJax渲染, 另外一种方法就是插入公式图片. 而怎么让 latex 编译输出图片格式(比如 png)呢? PrerequisitesWindows GhostScript 下载网址: https://www.ghostscript.com/download/gsdnld.html ImageMagick 下载网址: http://www.imagemagick.org/script/download.php#windows安装时勾选 Install Legacy utilities(eg. convert) 选项. 由于ImageMagick中的convert命令与MS中用于磁盘格式转换的convert命令冲突了, 所以我们需要将 ImageMagick 中的convert.exe 重命名为 imgconvert.exe ImageMagick 可以将pdf的图片转化为各个图片格式, 而它需要调用的底层库是 GhostScript. Archlinux123sudo pacman -Syu ghostscipt imagemagickpdflatex name.texconvert -density 300 name.pdf -quality 90 name.png If you are facing a problem when pdf cannot convert to png saying convert: attempt to perform an operation not allowed by the security policy gs&apos; @ error/delegate.c/ExternalDelegateCommand/378. convert: no images definedFig4-2.png’ @ error/convert.c/ConvertImageCommand/3273. Just comment out all policy fields inside &lt;policymap&gt; in file /etc/ImageMagick-7/policy.xml and it should work then. Or you can directly use pdflatex -shell-escape name.tex if you put convert options inside documentclass. 使用方法英文文档 pdflatex对于英文文档，使用 pdflatex 编译，可以直接转化png图片。standalone.tex 文件格式举例: 12345678910111213\\documentclass[ convert={ density=300, outext=.png }]{standalone}\\usepackage{amsmath}\\usepackage{amssymb}\\begin{document}$\\hat{x}_l(t)=y_l(t)-\\displaystyle\\sum^{\\Delta+K_l-1}_{\\tau=\\Delta}\\hat{G}_l^*(\\tau)y_l(t-\\tau)\\quad\\forall t\\in\\mathcal{T}$\\end{document} 当前文件夹下打开一个 Terminal： 1pdflatex -shell-escape standalone.tex 结果会产生一个透明的standalone.png文件. 中文文档 xelatex中文文档使用 xelatex 编译，转化分两步：第一步，产生pdf文件；第二步，将pdf转化成 png 或 svg。standalone.tex 文件示例 12345678910111213141516171819202122\\documentclass{standalone}\\usepackage{ctex}\\usepackage[ruled]{algorithm2e}\\begin{document}\\setcounter{algocf}{2}\\begin{algorithm}[H] \\SetAlgoLined \\KwData{一些数据} \\KwResult{how to write algorithm with \\LaTeXe} 初始化\\; \\While{not at end of this document}{ read current\\; \\eIf{understand}{ go to next section\\; current section becomes this one\\; }{ go back to the beginning of current section\\; } } \\caption{How to write algorithms}\\end{algorithm}\\end{document} 转 svg 命令： 1dvisvgm -P standalone.pdf 转 png 命令： 1convert -density 300 standalone.pdf -quality 120 standalone.png png 文件解码将文件拖拽到 Chrome 中, 打开开发者工具 &gt; Sources, 点击文件, 全选复制显示的base64编码. 在Markdown中插入方法举例 123![title][alt-text][alt-text]:data:image/png;base64,粘贴base64编码到这 Referenceshttps://tex.stackexchange.com/questions/11866/compile-a-latex-document-into-a-png-image-thats-as-short-as-possible","link":"/Aug-10th-2018-latex-output-picture/"},{"title":"Linux Troubleshooting","text":"Linux can be used as main desktop computer because I have found a harder OS called Unix. Raspbian on PiWhen executing some linux module command like: 1lsmod: /usr/local/lib/libcrypto.so.1.1: version `OPENSSL_1_1_0&apos; not found (required by lsmod) It means no user previlige, you should add sudo. grub修复一日手残，进入BIOS后恢复了出厂设置，导致重启后找不到系统引导，进不了安装的Arch Linux操作系统了。于是刷了系统安装U盘，进入终端修复grub。以下修复命令：arch-chroot shell: 12345grub-mkconfig -o /boot/grub/grub.cfgefibootmgr -b 0000 -Bgrub-install --target=x86_64-efi --efi-directory=/boot/efi --boot-directory=/boot/grubgrub-mkconfig -o /boot/grub/grub.cfggrub-install --target=x86_64-efi --efi-directory=/boot/efi --bootloader-id=GRUB grub.cfg是在启动分区中的 grub shell: 123&gt; bcfg boot dump -V 查看efi启动项&gt; bcfs boot add 3 FS1:\\EFI\\grub\\grubx64.efi &quot;Grub 2&quot; 挂载EFI分区&gt; exit 在界面进入Reboot into Firmware Interface","link":"/Aug-13th-2019-Linux-troubleshooting/"},{"title":"TeX 拾遗","text":"有些时候, 会因为环境前后没有包含好而产生错误, 导致latex编译器没有办法结束. 报出错误为 12*Please type a command or say \\end 这个时候不断按回车是没有用的, 需要手动输入 \\end{document} 来终止退出.","link":"/Aug-15th-2018-tex-exploration/"},{"title":"$\\lambda$ 邪教 | Haskell 语言基础","text":"Haskell 程序源文件的后缀名为 .hs. 标识符及其命名规则变量和赋值语句","link":"/Aug-16th-2018-Haskell-fundamentals/"},{"title":"Setting up open-source STM32 developing environment on ARM Eclipse","text":"Different from ‘STD’ lib, STM32 ‘HAL’ lib is more compatible to hardware development and is now well-supported by ST company’s Cube IDE. PrerequisitesARM gcc compilerCross compilers for ARM EABI(bare-metal) target: arm-none-eabi-gccarm-none-eabi-newlibarm-none-eabi-gdb Check by arm-none-eabi-gcc -v Eclipse eclipse-cpp Menu &gt; Help &gt; Install new software… &gt; AddName: GNU ARM eclipseLocation: http://gnuarmeclipse.sourceforge.net/updates Then select at least ‘GNU ARM C/C++ Cross Compiler’, ‘GNU ARM C/C++ STM32Fx Project Templates’, ‘GNU ARM J-Link Debugging Support’ and ‘GNU ARM C/C++ Packs’. If there emerges any warnings about key checks, install anyway. In order to select device, go to check packages location at Window &gt; Preferences &gt; C/C++ &gt; Packs DebuggerOption A: J-Link jlink-software-and-documentation Option B:ST Link1sudo pacman -S st-link Run &gt; Run as &gt; External tools setting &gt; new a config called st-linkv2 Note that ${project_loc} is automatically set as a variable of current project location as well as the ${project_name} Then run. In the routine, we will get an error from Console like: 12345672019-08-19T18:07:07 INFO common.c: Loading device parameters....2019-08-19T18:07:07 INFO common.c: Device connected is: F4 device, id 0x100f64132019-08-19T18:07:07 INFO common.c: SRAM size: 0x30000 bytes (192 KiB), Flash: 0x100000 bytes (1024 KiB) in pages of 16384 bytesopen(DeFly-STM32F407-board-template.bin) == -12019-08-19T18:07:07 ERROR common.c: map_file() == -1st-flash 1.5.1stlink_fwrite_flash() == -1 But don’t worry because we will fix it immediately. Go to Project &gt; Properties &gt; C/C++ Build &gt; Settings &gt; Cross ARM GNU Create Flash Image &gt; General &gt; Output file format, Choose ‘Raw binary’. Then it’s ok: Note that J-Link is not opensource, so we don’t like it on Linux. Create new projectNative ARM Eclipse HALTo enable HAL support, change #if 0 to 1 in _initialize_hardware.c.New a C project &gt; STM32F4xx C/C++ Project(Toolchains: Cross ARM GCC) On the next page uncheck ‘Use newlib nano’ because we intend to use HAL library Folder settings: keep the default. Select Configurations: both debug and release. Cross GNU ARM Toolchain: choose arm-none-eabi-gccFinish and wait for creating. Build settingWindows &gt; Preferences &gt; General &gt; Workspace &gt; Check ‘Always close unerlated projects without prompt. Error:1234567891011121314/usr/lib/gcc/arm-none-eabi/9.2.0/../../../../arm-none-eabi/bin/ld: /usr/lib/gcc/arm-none-eabi/9.2.0/../../../../arm-none-eabi/lib/thumb/v7e-m/nofp/libg_nano.a(lib_a-writer.o): in function `_write_r&apos;:writer.c:(.text._write_r+0x10): undefined reference to `_write&apos;/usr/lib/gcc/arm-none-eabi/9.2.0/../../../../arm-none-eabi/bin/ld: /usr/lib/gcc/arm-none-eabi/9.2.0/../../../../arm-none-eabi/lib/thumb/v7e-m/nofp/libg_nano.a(lib_a-closer.o): in function `_close_r&apos;:closer.c:(.text._close_r+0xc): undefined reference to `_close&apos;/usr/lib/gcc/arm-none-eabi/9.2.0/../../../../arm-none-eabi/bin/ld: /usr/lib/gcc/arm-none-eabi/9.2.0/../../../../arm-none-eabi/lib/thumb/v7e-m/nofp/libg_nano.a(lib_a-lseekr.o): in function `_lseek_r&apos;:lseekr.c:(.text._lseek_r+0x10): undefined reference to `_lseek&apos;/usr/lib/gcc/arm-none-eabi/9.2.0/../../../../arm-none-eabi/bin/ld: /usr/lib/gcc/arm-none-eabi/9.2.0/../../../../arm-none-eabi/lib/thumb/v7e-m/nofp/libg_nano.a(lib_a-readr.o): in function `_read_r&apos;:readr.c:(.text._read_r+0x10): undefined reference to `_read&apos;/usr/lib/gcc/arm-none-eabi/9.2.0/../../../../arm-none-eabi/bin/ld: /usr/lib/gcc/arm-none-eabi/9.2.0/../../../../arm-none-eabi/lib/thumb/v7e-m/nofp/libg_nano.a(lib_a-fstatr.o): in function `_fstat_r&apos;:fstatr.c:(.text._fstat_r+0xe): undefined reference to `_fstat&apos;/usr/lib/gcc/arm-none-eabi/9.2.0/../../../../arm-none-eabi/bin/ld: /usr/lib/gcc/arm-none-eabi/9.2.0/../../../../arm-none-eabi/lib/thumb/v7e-m/nofp/libg_nano.a(lib_a-isattyr.o): in function `_isatty_r&apos;:isattyr.c:(.text._isatty_r+0xc): undefined reference to `_isatty&apos;collect2: error: ld returned 1 exit statusmake: *** [makefile:64: F4cubeBlinky.elf] Error 1 This happens might because I use HAL lib but not the newlib, I solved it by open Project &gt; Properties &gt; C/C++ Build &gt; Settings &gt; Cross ARM GNU C++ Linker &gt; Miscellaneous, Uncheck ‘Use newlib -nano (—specs=nano.specs)’ and add ‘-specs=nosys.specs’. Before: After: STD libSTM32CubeMX generated HALWe need to install STM32CubeMX for generating HAL fw-lib template codes. 123git clone --depth=1 https://aur.archlinux.org/stm32cubemx.gitcd stm32cubemxmakepkg -si Then config for our microchip Now we can generate code for it Now we can use Eclipse to create a template project. And delete the files. Then drag and copy. Don’t forget the link file, also we drag and copy into startup folder. Or you can use mv commands to manipulate and click ‘Refresh’ under Eclipse project. Next are modifications of projects. change .s startup file to .S uppercase one. Go to project properties &gt; C/C++ BUild &gt; Settings. Delte other proprocessors and then add Preprocessor: STM32407xx and USE_HAL_DRIVER, Add includes files… then linker delete the already existed items and check using startup files, then add our new starup .ld file. Debug settingsJ-LinkGo to Window &gt; Preferences &gt; Run/Debug &gt; SEGGER J-Link to check the path of J-Link. By default, the GDB server is defined as ${jlink_path}/${jlink_gdbserver}; these two macros are automatically set by the above preference page; for portability reasons, it is recommended to keep this definition in all your debug configurations. After successfully built the project and see a .elf file generated, go to Debug Configurations and create a new item for J-Link Debug. ST LinkAdd breakpoint in a while statement. Then open the server by Menu &gt; Run &gt; External Tools &gt; ST-Link GDB Server (SWD). Console ouput is like: Then edit debug configuration: Then click ‘Debug’ and happily to see:Click Switch, then we go into debug window: When encounting a dead loop between two statements, it’s because you didn’t press reset button. Yes, in debug mode, pressing reset button is necessary. So click and voila: We enter our breakpoint successfully.","link":"/Aug-18th-2019-Linux-STM32-HAL-IIC/"},{"title":"Python 科学计算 | Numpy 库中 ndarray 与 matrix 类型的区别和使用注意","text":"Python科学计算库中有ndarray和matrix两种类都可以表示矩阵, 那么它们之间有什么联系和区别呢? ndarrayndarray是通用数组数据类型, 支持一维, 二维, 至多维的运算 123456&gt;&gt;&gt; x = np.array([[2.+1.j, 1.-1.j], [1.-1.j, 1.+1.j]])&gt;&gt;&gt; x = x[None, ...]&gt;&gt;&gt; x**2 # 逐个求平方&gt;&gt;&gt; y = np.eye(2) # 二阶单位阵&gt;&gt;&gt; x * y # dot mul = np.multiply(x,y)&gt;&gt;&gt; np.dot(x,y) # mat mul 矩阵乘法 = x @ y matrixmatrix是矩阵类型, 仅支持二维矩阵的运算, 只是相当于ndarray的一个子集. 优势是写法非常舒服, 接近日常数学公式的书写. 比如, 声明矩阵就可以用引号,双引号扩出. 12&gt;&gt;&gt; x = np.mat(&quot;2+1.j, 1-1.j; 1-1.j, 1+1.j&quot;, dtype=np.complex64)&gt;&gt;&gt; y = np.mat(np.eye(2)) 进行矩阵运算也很方便 123&gt;&gt;&gt; x ** 2 # 矩阵平方&gt;&gt;&gt; x * y # np.dot(x,y) = x @ y&gt;&gt;&gt; np.multiply(x,y) # 元素相乘 相互转换两种数据类型之间也可以相互转换, 使用方法 np.asmatrix 和 np.asarray","link":"/Aug-1st-2018-differences-between-ndarray-and-matrix-in-numpy/"},{"title":"博客中的练习题解答","text":"题目需要思考了才有价值, 所以在我的博客中给出的练习题都不直接给答案, 在这里进行集中解答. 有需要者自取. Py1 12345678A = np.array([[1, 1, 1, 5, 5, 5],[1, 1, 1, 5, 5, 5],[4, 4, 4, 6, 6, 6],[4, 4, 4, 6, 6, 6]])B = np.lib.stride_tricks.as_strided(A, shape=(2,2,2,3), strides=(48,12,24,4))print(B) 包含min函数的栈1234567891011121314151617181920212223242526272829import java.util.Stack;public class Solution { Stack&lt;Integer&gt; dataStack = new Stack&lt;&gt;(); Stack&lt;Integer&gt; minStack = new Stack&lt;&gt;(); public void push(int node) { dataStack.push(node); if(minStack.isEmpty() || node &lt;= minStack.peek()) { minStack.push(node); } } public void pop() { int out = dataStack.pop(); if(out == minStack.peek()) { minStack.pop(); } } public int top() { return dataStack.peek(); } public int min() { return minStack.peek(); }} 所有奇数长度子数组的和Leetcode 1588 1234567891011121314151617class Solution {public: int sumOddLengthSubarrays(vector&lt;int&gt;&amp; arr) { int len = arr.size(); vector&lt;int&gt; preSum(len+1); for(int i=1; i&lt;=len; ++i) { preSum[i] = preSum[i-1] + arr[i-1]; } int sum = 0; for(int k=1; k&lt;=len; k+=2) { for(int j=k; j&lt;=len; ++j) { sum += preSum[j]-preSum[j-k]; } } return sum; }}; Accumulation of English writing by examples C","link":"/Aug-22nd-exercises-answer/"},{"title":"Shell Programming | Shell Fundamentals","text":"shell is a script language and belongs to interpreted language VariablesOne big difference between Shellscript and other programming languages is that there must be no spaces between “=” sign. Such a design has its reason, as shell is not only a programming language, but also a command line interpreter. If you use VAR = value, it’s like being interpreted as running some command called “VAR” and two arguments named “=” and “value”. Therefore that is impossible to run successfully. Shellscript uses $VAR to reference a variable that has been defined before. Scope of variables“local” variableWhen running a script file, Linux creates a new process with a unique ‘pid’ for it. We can only use variables created in the script file in this process. Once the process is ending or we are in another process, we cannot use the variables. “global” variableHowever, like the concept of ‘environmental variables’ in Windows, Linux also has global-scope variables by using the source commands or . command for sourcing a script file. This is how the configuration files like .bashrc or .vimrc works (source .bashrc every time before opening a bash and source .vimrc whenever before opening a vim program). the priorityThink such an occasionally case, if a local defined variable has the same name as a global variable, the local one will have priority. If the local one doesn’t exist or hasn’t been defined yet, the interpreter will use the global ones. If none of them exist, a ‘null’ will be given out. Statementsif语句123456if [ 布尔表达式 ]then 若干语句else 若干语句fi case 语句1234case 变量 in 模式1 ) 若干语句;; 模式2 ) 若干语句;;esac 循环语句循环语句有多种写法 1234for i in {1..10}do 若干语句done Special characters$$$$ indicates the process id(PID) that running the script. The use of curly braces “{}” can enclose a variable into it even if characters follow with no spaces. See the example below. 123456#!/bin/shecho &quot;What is your name?&quot;read USER_NAMEecho &quot;Hello $USER_NAME&quot;echo &quot;I will create you a file called ${USER_NAME}_file&quot;touch &quot;${USER_NAME}_file&quot; There is one more advantage that if we type two separated words, the curly braces will prevent touch creating two new files for it. CommentShell uses # to comment a whole line. Running the scriptWrite scripts into a readable and executable file. The first line can indicate which program(/bin/sh) to run it. If you are using GNU/Linux, /bin/sh is normally a symbolic link to bash. 1#!/bin/sh Functionsbuit-in commandsecho: takes one or more parameters separated by blank characters(spaces or tabs). expr: Print the value of EXPRESSION to standard output. It supports logical expressions. It can be also used as a simple calculator for integers in shell. But caution that the asteroid * is regarded as a wildcard. So when you do multiplication, you should use \\*. read: reads a line from standard input into the variable supplied. touch: create a empty file by the name test: can be used to detect certain files or related properties, and the judgment symbol [] is equivalent.`test -n string: returns true is the string’s length is over 0 For more Linux builtin commands, go to this article.","link":"/Aug-24th-shell-fundamentals/"},{"title":"Aug-28th-HackRF-SCCE-access-door-system","text":"HackRF is a software radio tool. 1pacman -S gnuradio gnuradio-osmosdr Gives me 12(25/30) installing rtl-sdr [##############################] 100%&gt;&gt;&gt; You can not use a DVB stick for both DVB and SDR. There is a driver conflict. /etc/modprobe.d/rtlsdr.conf blacklists the DVB drivers.","link":"/Aug-28th-HackRF-SCCE-access-door-system/"},{"title":"Raspberry Pi communication experiment","text":"This article introduces two communication experiments which can be utilized by your Raspberry Pi. 1 USART Serial CommunicationBefore USB parallel communication becomes ubiquitous, Serial communications like USART protocal are very popular. Even today, these communications protocals are widespread used by the industry. We plan to use USART 1 for this experiment. Referring to STM32F407 datasheet, PA9 and PA10 are individually used as TX and RX. 2 Socket communicationSocket communication is a kind of fundamental network communication mothod.Nowadays, Python is very popular so we will do a simple experiment for socket communication between Pi and the computer using python2 socket package. Socket protocal is like TCT/IP, a two-directional protocal. But it has the design of server and client. We simply take Pi as the server and the computer as the client, neglecting security issues. 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859#!/usr/bin/env python# -*- coding:utf-8 -*-# rand-server.pyimport socketimport timeimport smbusimport sysimport RPi.GPIO as GPIO# Init I2Cbus = smbus.SMBus(1)address = 0x20# define host ip: RPi&apos;s IPHOST_IP = &quot;192.168.137.244&quot;HOST_PORT = 8888print(&quot;Starting socket: TCP...&quot;)# 1.Create socket object: socket = socket.socket(family, type)socket_tcp = socket.socket(socket.AF_INET, socket.SOCK_STREAM)print(&quot;TCP server listen @ %s:%d!&quot; %(HOST_IP, HOST_PORT))host_addr = (HOST_IP, HOST_PORT)# 2.bind socket to addr:socket.bind(address)socket_tcp.bind(host_addr)# 3.listen connection request: socket.listen(backlog)socket_tcp.listen(1)# 4.wait for client: connection, address = socket.accept()socket_con, (client_ip, client_port) = socket_tcp.accept()print(&quot;Connection accepted from %s.&quot; %client_ip)socket_con.send(&quot;Welcome to RPi TCP server!&quot;)# 5.handleGPIO.setmode(GPIO.BOARD)GPIO.setup(11, GPIO.OUT)while True: try: print(&quot;Receiving package...&quot;) data = socket_con.recv(512) if len(data) &gt; 0: if data == &apos;1&apos;: num = bus.read_byte(address) print(&quot;Received:1, get rand number %d&quot; %num) time.sleep(1) socket_con.send(str(num)) # socket data must be string elif data == &apos;0&apos;: print(&quot;Received:0, exit&quot;) GPIO.output(11, GPIO.LOW) socket_con.close() # time.sleep(1) continue except Exception as e: print type(e) print e.args print e socket_tcp.close() sys.exit(1)","link":"/Aug-29th-Raspberry-Pi-socket-communication/"},{"title":"统计与概率 | 协方差矩阵","text":"协方差矩阵又被称为相关系数矩阵. 本文主要介绍协方差矩阵的概念和如何使用 numpy 中的 einsum 进行计算. 概念与定义协方差两个向量 $\\boldsymbol{x}$ 和 $\\boldsymbol{y}$ 的协方差 (covariance) 可以定义为 cov(\\boldsymbol{x}, \\boldsymbol{y}) = E((\\boldsymbol{x} - \\mu)(\\boldsymbol{y} - \\nu)) = E(\\boldsymbol{x}\\cdot\\boldsymbol{y}) - \\mu\\nu比如, 1234567def cov(x, y): return np.mean(x * y) - np.mean(x)*np.mean(y)x = np.arange(3)y = x[::-1]print(cov(x,y)) 对于两个由行向量组成的矩阵 $X=\\left[X_1, X_2, \\cdots, X_n\\right]^T$ 和 $Y=\\left[Y_1,Y_2,\\cdots,Y_n\\right]^T$, 对每一对行向量求协方差, 便可以得到协方差矩阵: Cov(X,Y) = \\begin{bmatrix} cov(X_1,Y_1) & cov(X_1,Y_2) & \\cdots & cov(X_1,Y_n) \\\\ \\vdots & \\vdots & \\ddots & \\vdots \\\\ cov(X_n,Y_1) & cov(X_n,Y_2) & \\cdots & cov(X_n,Y_n) \\end{bmatrix}1234567891011121314151617181920212223def norm(X): ret = np.zeros(X.shape) for i, row in enumerate(X): ret[i] = row - np.mean(X,-1)[i] return retlength = 4X = np.array([ [1,2,3,4], [3,4,5,6]])X = norm(X)print(&quot;X =&quot;, X)Y = np.array([ [9,8,7,6], [6,5,4,3]])Y = norm(Y)print(&apos;Y =&apos;,Y)Z = np.einsum(&apos;ij,kj-&gt;ik&apos;,X,Y)Z /= lengthprint(&apos;Z =&apos;, Z) 相关系数一般情况下, 相关系数的公式为 \\rho = \\frac{cov(X,Y)}{\\sigma_X \\sigma_Y}相关系数可以看做是标准化后的协方差. Hadamard-Fisher (HF) 互相关自协方差矩阵E(XX^*) = Cov(X,X^*)注意这里在求平均值时要除以n-1","link":"/Aug-2nd-2018-manuscript-correlation-matrix/"},{"title":"Driver development for Raspberry Pi","text":"The hardware driver development is involved in the operating system programming. PrerequisitesBefore we start the driver development, the Linux kernel has to be manually built at least once. So the next two ways will be introduced for building Pi linux kernel, one way is to self compile on Raspberry Pi, another is to compile it on a host Linux computer and then copyed to RPi. First of all, download the linux kernel package Raspberry github’s page: https://github.com/raspberrypi/linux/releases with the same version as your Raspbian Linux version. You can check your Raspbian linux version byMy current raspbian linux kernel version is v4.19.57(2019-07-25), so I download 4.19.y linux. Cross compile on Arch LinuxDownload or git clone and ‘tools’ repository from 1git clone --depth=1 https://github.com/raspberrypi/tools ./tools For Arch Linux, some basic packages for cross-compiling are required and can be installed by sudo pacman -Syu bison flex openssl p7zip. Use 7z x rather than unzip to extract linux kernel file(unzip somewhat doesn’t support very long full path). Then manually copy the config file from the running pi to the source code tree and configure it further: 123cd linuxKERNEL=kernel7make bcm2709_defconfig Error: Can’t find default configuration “arch/x86/configs/bcm2709_defconfig”!It’s reseasonable because this config file hasn’t been created. So 1st method is to generate one: 1make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- bcm2709_defconfig 2nd alternative method is to copy one from rpi. On RPi: 12sudo modprobe configssudo cp /proc/config.gz ~/Documents Back Arch 123456scp -P2022 pi@raspberry:~/Documents/config.gz [directory/of/linux]zcat config.gz &gt; .configmake ARCH=arm CROSS_COMPILE=../tools/arm-bcm2708/gcc-linaro-arm-linux-gnueabihf-raspbian-x64/bin/arm-linux-gnueabihf- zImage -j4make ARCH=arm CROSS_COMPILE=../tools/arm-bcm2708/gcc-linaro-arm-linux-gnueabihf-raspbian-x64/bin/arm-linux-gnueabihf- modules -j8make ARCH=arm CROSS_COMPILE=../tools/arm-bcm2708/gcc-linaro-arm-linux-gnueabihf-raspbian-x64/bin/arm-linux-gnueabihf- dtbs -j4 Type enter for default settings when encounting input waiting. Insert RPi TF card and check it via lsblk, then mount 1234567891011sudo mkdir /mnt/fat32sudo mkdir /mnt/ext4sudo mount /dev/sdb6 mnt/fat32sudo mount /dev/sdb7 /mnt/ext4sudo make ARCH=arm CROSS_COMPILE=../tools/arm-bcm2708/gcc-linaro-arm-linux-gnueabihf-raspbian-x64/bin/arm-linux-gnueabihf- INSTALL_MOD_PATH=/mnt/ext4 modules_installKERNEL=kernel7ls /mnt/fat32 -l | grep imgsudo cp arch/arm/boot/zImage /mnt/fat32/kernel-myconfig.imgsudo cp arch/arm/boot/dts/*.dtb /mnt/fat32/ sudo cp arch/arm/boot/dts/overlays/*.dtb* /mnt/fat32/overlays sudo cp arch/arm/boot/dts/overlays/README /mnt/fat32/overlays sudo edit /mnt/fat32/config.txt file: 1kernel=kernel-myconfig.img 123sudo umount /mnt/fat32sudo umount /mnt/ext4lsblk Re-insert TF card into Pi and start, type uname -r to check. It’s 4.19.64+. Succeed~ Self compile on RPi4ssh into pi and scp those two folders. extract and enter ‘linux-rpi-x.xx.x’ and type 123sudo apt install bc bison flex libssl-devKERNEL=kernel7lmake bcm2711_defconfig 123456make -j4 zImage modules dtbssudo make modules_installsudo cp arch/arm/boot/dts/*.dtb /boot/sudo cp arch/arm/boot/dts/overlays/*.dtb* /boot/overlays/sudo cp arch/arm/boot/dts/overlays/README /boot/overlays/sudo cp arch/arm/boot/zImage /boot/$KERNEL.img Check the new kernel version: LED driver ExperimentMakefile 123456789ifneq ($(KERNELRELEASE),) obj-m :=hello.oelse KERNELDIR :=/home/shane/Downloads/Raspberry-Pi/linux/all: $(MAKE) -C $(KERNELDIR) M=$(PWD) ARCH=arm CROSS_COMPILE=/home/shane/Downloads/Raspberry-Pi/tools/arm-bcm2708/gcc-linaro-arm-linux-gnueabihf-raspbian-x64/bin/arm-linux-gnueabihf- modulesclean: rm -rf *.o *~ core .depend .*.cmd *.ko *.mod.c .tmp_versions modul*endif make and then scp hello.ko file. On RPi 123sudo insmod hello.kosudo rmmod hellodmesg | tail -5 [ 7804.521916] smsc95xx 1-1.1:1.0 enxb827eb802252: link down[ 7839.258242] smsc95xx 1-1.1:1.0 enxb827eb802252: link up, 100Mbps, full-duplex, lpa 0xCDE1[ 8655.103844] hello: loading out-of-tree module taints kernel.[ 8655.110062] Hello, world[ 8726.505905] Goodbye, world Procedures conclusion Write a driver file Compile, build and sudo insmod some-name.ko Write the test test Compile, build and sudo ./test Referenceshttps://www.raspberrypi.org/documentation/linux/kernel/building.md","link":"/August-6th-Pi-driver-development/"},{"title":"Linux command of the day","text":"This article lists a Linux cheatsheet including lots of tools’ commands. I. Processes and system managementLinux background execute commandIf we want to proceed our work when we’re executing a Linux command that may spend a lot of time, I find two ways that may solve this paradox. Keep this terminal and open another one. Append a ‘&amp;’ to the time-spending command and it will be excuted in the background. count all processes and threads running12ps aux | wc -l # count all processesps -eo nlwp | tail -n +2 | awk &apos;{ num_threads += $1 } END { print num_threads }&apos; # count all threads For Windows, just type Ctrl+Alt+Delete to open Task Manager and choose the performance tab and see: User managementadd user1adduser 用户名 add user to group1usermod -a -G 组名 用户名 II. Text manipulationsed删除 .bashrc 的最后一行：sed -i &apos;$d&apos; ~/.bashrc IV. IOmountLinux mount command is used for mounting filesystems to directory and /etc/fstab file the default mounting config file at every booting time. Surely you can alse use sudo mount -a to remount all filesystems in /etc/fstab USB FAT32 filesystemIt’s the easiest one: 123sudo mkdir /mnt/usblsblksudo mount /dev/sdb1 /mnt/usb NAS NFS filesystemhttps://wiki.archlinux.org/index.php/NFS NAS CIFS filesystem1234lsmod | grep cifs# if not, `sudo modprobe cifs` or add `cifs` into /etc/modules-load.d/cifs.confsmbclient -L nas -U%sudo mount -t cifs //nas/wangshengdian /mnt/lab-nas-wangshengdian -o username=[your username],password=[your password],workgroup=workgroup,iocharset=utf8,uid=shane,gid=shane noauto Mount at boot-up/etc/fstab V. NetworkWeb DownloaderDownloading from the web has many choices on Linux. aria2For chrome extension, I use Camtd. Go to https://github.com/jae-jae/Camtd/releases and download the latest .crx file.Then upload it to https://crxextractor.com/ for getting the .zip file and download it.Then unzip -d dir Camtd.zip. And open chrome://extensions to load the unpacked directory. But sometimes you don’t need a browser to download file. You can directly download from your command line. Here are they: wgetIf you want to download a file on Github, it’s easy to use wget. Let’s say 1wget https://raw.githubusercontent.com/ethereum/web3.js/1.x/dist/web3.min.js curlCampus proxySome campus net environments have ip restrictions with a maximum number of two. In order to support the network connection for more devices(including virtual machines) as well as to surpass the firewall, additional efforts seem neccessary to deploy a personal proxy server. Here I use v2ray to acomplish this goal. Sample configurationOn VPS 1234567891011121314151617181920212223242526272829303132{ &quot;inbounds&quot;: [{ &quot;port&quot;: 监听端口号, &quot;protocol&quot;: &quot;vmess&quot;, &quot;settings&quot;: { &quot;clients&quot;: [ { &quot;id&quot;: &quot;协商的id号&quot;, &quot;level&quot;: 1, &quot;alterId&quot;: 64 } ] } }], &quot;outbounds&quot;: [{ &quot;protocol&quot;: &quot;freedom&quot;, &quot;settings&quot;: {} },{ &quot;protocol&quot;: &quot;blackhole&quot;, &quot;settings&quot;: {}, &quot;tag&quot;: &quot;blocked&quot; }], &quot;routing&quot;: { &quot;rules&quot;: [ { &quot;type&quot;: &quot;field&quot;, &quot;ip&quot;: [&quot;geoip:private&quot;], &quot;outboundTag&quot;: &quot;blocked&quot; } ] }} On the desktop with an external IP address serving as a campus proxy server 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899{ &quot;log&quot;: { &quot;loglevel&quot;: &quot;warning&quot; }, &quot;inbounds&quot;: [{ &quot;port&quot;: 用于监听的IP端口, &quot;listen&quot;: &quot;0.0.0.0&quot;, &quot;protocol&quot;: &quot;socks&quot;, &quot;settings&quot;: { &quot;auth&quot;: &quot;noauth&quot;, &quot;udp&quot;: false, &quot;ip&quot;: &quot;0.0.0.0&quot; }, &quot;sniffing&quot;: { &quot;enabled&quot;: true, &quot;destOverride&quot;: [&quot;http&quot;, &quot;tls&quot;] } }], &quot;outbounds&quot;: [{ &quot;protocol&quot;: &quot;vmess&quot;, &quot;settings&quot;: { &quot;vnext&quot;: [{ &quot;address&quot;:&quot;Oerseas VPS的IP地址&quot;, &quot;port&quot;: 它的端口号, &quot;users&quot;: [{ &quot;id&quot;: &quot;协商的id号，必须与VPS inbounds 中设置的一致&quot;, &quot;security&quot;: &quot;auto&quot;, &quot;level&quot;: 1, &quot;alterId&quot;: 64 }] }] } },{ &quot;protocol&quot;: &quot;freedom&quot;, &quot;settings&quot;: {}, &quot;tag&quot;: &quot;direct&quot; },{ &quot;protocol&quot;: &quot;blackhole&quot;, &quot;settings&quot;: {}, &quot;tag&quot;: &quot;blocked&quot; }], &quot;routing&quot;: { &quot;domainStrategy&quot;: &quot;IPOnDemand&quot;, &quot;rules&quot;:[ { &quot;type&quot;: &quot;field&quot;, &quot;ip&quot;: [&quot;geoip:private&quot;], &quot;outboundTag&quot;: &quot;direct&quot; }, { &quot;type&quot;: &quot;field&quot;, &quot;domain&quot;: [&quot;geosite:cn&quot;], &quot;outboundTag&quot;: &quot;direct&quot; }, { &quot;type&quot;: &quot;field&quot;, &quot;domain&quot;: [&quot;geosite:category-ads&quot;], &quot;outboundTag&quot;: &quot;blocked&quot; } ] }, &quot;dns&quot;: { &quot;hosts&quot;: { &quot;domain:v2ray.com&quot;: &quot;www.vicemc.net&quot;, &quot;domain:github.io&quot;: &quot;pages.github.com&quot;, &quot;domain:wikipedia.org&quot;: &quot;www.wikimedia.org&quot;, &quot;domain:shadowsocks.org&quot;: &quot;electronicsrealm.com&quot; }, &quot;servers&quot;: [ { &quot;address&quot;: &quot;114.114.114.114&quot;, &quot;port&quot;: 53, &quot;domains&quot;: [ &quot;geosite:cn&quot; ] }, &quot;8.8.8.8&quot;, &quot;localhost&quot; ] }, &quot;policy&quot;: { &quot;levels&quot;: { &quot;0&quot;: { &quot;uplinkOnly&quot;: 0, &quot;downlinkOnly&quot;: 0 } }, &quot;system&quot;: { &quot;statsInboundUplink&quot;: false, &quot;statsInboundDownlink&quot;: false } }, &quot;other&quot;: {}} On the laptop client with only internal ip address 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374{ &quot;log&quot;: { &quot;loglevel&quot;: &quot;warning&quot; }, &quot;inbounds&quot;: [{ &quot;port&quot;: 1080, &quot;listen&quot;: &quot;127.0.0.1&quot;, &quot;protocol&quot;: &quot;socks&quot;, &quot;settings&quot;: { &quot;auth&quot;: &quot;noauth&quot;, &quot;udp&quot;: false, &quot;ip&quot;: &quot;127.0.0.1&quot; }, &quot;sniffing&quot;: { &quot;enabled&quot;: true, &quot;destOverride&quot;: [&quot;http&quot;, &quot;tls&quot;] } }], &quot;outbounds&quot;: [{ &quot;protocol&quot;: &quot;socks&quot;, &quot;settings&quot;: { &quot;servers&quot;: [{ &quot;address&quot;:&quot;能连外网的主机IP地址&quot;, &quot;port&quot;: 它的端口号 }] } }], &quot;routing&quot;: { &quot;domainStrategy&quot;: &quot;IPOnDemand&quot;, &quot;rules&quot;:[ ] }, &quot;dns&quot;: { &quot;hosts&quot;: { &quot;domain:v2ray.com&quot;: &quot;www.vicemc.net&quot;, &quot;domain:github.io&quot;: &quot;pages.github.com&quot;, &quot;domain:wikipedia.org&quot;: &quot;www.wikimedia.org&quot;, &quot;domain:shadowsocks.org&quot;: &quot;electronicsrealm.com&quot; }, &quot;servers&quot;: [ { &quot;address&quot;: &quot;114.114.114.114&quot;, &quot;port&quot;: 53, &quot;domains&quot;: [ &quot;geosite:cn&quot; ] }, &quot;8.8.8.8&quot;, &quot;202.204.60.10&quot;, &quot;202.204.48.8&quot;, &quot;localhost&quot; ] }, &quot;policy&quot;: { &quot;levels&quot;: { &quot;0&quot;: { &quot;uplinkOnly&quot;: 0, &quot;downlinkOnly&quot;: 0 } }, &quot;system&quot;: { &quot;statsInboundUplink&quot;: false, &quot;statsInboundDownlink&quot;: false } }, &quot;other&quot;: {}} use v2ray -test -config 你的配置文件 to ensure the correctness of the configuration format. Test and runStep 1: Login with the campus network account on the desktop to get an external ip address and do not login on the laptop. Ensure the connection availability from your laptop to the desktop, and from the desktop to VPS server.Step 2: start v2ray 1sudo v2ray --config=你的配置文件 or run in the backgroud 1sudo systemctl start v2ray # or sudo service start v2ray How to Keep user proxy settings when ‘sudo’Add ‘/etc/sudoers’ 1Defaults env_keep += &quot;all_proxy ftp_proxy http_proxy https_proxy no_proxy&quot; III. Applicationsxdg-open (Launch program in terminal)1xdg-open your_file Some useful 12xdg-mime query filetype your_filexdg-mime default feh.desktop image/jpeg ~/.config/mimeapps.list 123456789[Default Applications]text/html=google-chrome.desktopx-scheme-handler/http=google-chrome.desktopx-scheme-handler/https=google-chrome.desktopx-scheme-handler/about=google-chrome.desktopx-scheme-handler/unknown=google-chrome.desktopapplication/pdf=FoxitReader.desktopapplication/ppdf=FoxitReader.desktopx-scheme-handler/postman=Postman.desktop Calculatorbc支持运算： 123456+ 加- 减* 乘/ 除^ 幂% 取余 例： 1echo &quot;1 + 1&quot; | bc 默认仅为整数域运算（参考C语言的四则运算），若要支持小数需要设置scale参数，使用分号分割。例： 12echo &quot;scale=3;(0.12+0.17)*6.0/5.0&quot; | bcecho &quot;(0.12+0.17)*6.0/5.0&quot; | bc bc也支持其他进制运算，使用ibase设置输入进制，obase设置输出进制，默认为10进制。例： 1echo &quot;obase=2;255&quot; | bc bc 也支持文件内容进行运算，新建文件 calc.txt 12343+24+58*210/4 运行 1bc calc.txt # 或 cat calc.txt | bc Referenceshttps://blog.csdn.net/liuyanfeier/article/details/62422742 https://wiki.archlinux.org/index.php/Sambahttps://wiki.archlinux.org/index.php/Kernel_module","link":"/Command-of-the-day-May-sixteenth-2018/"},{"title":"TBAC project development","text":"Development of TBAC project. SubjectBuild a subject chain123rm -r ~/.shellchain/chainsub./multichain-util create chainsub./multichaind chainsub Once start this chain, the ip address and port number of chainsub will be shown on the terminal. The default rpc receiving port is chainsub_port-1. Now cancel multichaind process by Ctrl+D, then edit ~/.shellchain/subject/shellchain.conf. Here, chainsub=4361, so rpcport=4360. Now restart chainsub. Get subject chain address1./multichain-cli chainsub getaddresses Create a new entity using JMeterParams of rpc interface createentity: params[0] is entitytype: 实体类型 entitytype = 1, 拥有权限 connect, send, receive, create, issue, mine, activate, admin entitytype = 2, 拥有权限 connect, sned, receive, create, issue, mine, activate entitytype = 3 or others, 拥有权限 send, receive params[1] is from-address: 创建实体的调用地址，这里是主体链的地址 Enable create-entity and disable others and run and then get the result: 12345678910{ &quot;result&quot;:{ &quot;pubkey&quot;:&quot;03479a7079bf4e22d3dcf087bcdfe2dc6b4124133fbaec5d14916e6f58fa941918&quot;, &quot;privkey&quot;:&quot;VCEMsosr4HbwvnZ1NAJGtNWg6BuhN8tFeKpKiScQuiFGtu9q3XPf72Yp&quot;, &quot;address&quot;:&quot;1WzU2fz7y78bivU36xBZsw1PCR6RUx99BNGFHt&quot;, &quot;grant_tx_id&quot;:&quot;fb56c60a46b2dc10991f10ce1bb7ff05ae7ac342388f64f842023ee00c6d56fe&quot; }, &quot;error&quot;:null, &quot;id&quot;:&quot;1&quot;} Issue an entity from subject chain12345678910111213141516171819202122{ &quot;id&quot;: &quot;1&quot;, &quot;chain_name&quot;: &quot;subject&quot;, &quot;method&quot;: &quot;issueentityfrom&quot;, &quot;params&quot;: [ &quot;1XjRwWhr93s3ZwHHE7N8QrNFrZq5s62fSMueDX&quot;, &quot;1WzU2fz7y78bivU36xBZsw1PCR6RUx99BNGFHt&quot;, &quot;1&quot;, &quot;1231231312311313123111&quot;, &quot;VCEMsosr4HbwvnZ1NAJGtNWg6BuhN8tFeKpKiScQuiFGtu9q3XPf72Yp&quot;, &quot;******&quot;, { &quot;ver&quot;: &quot;SRT&quot;, &quot;attribute&quot;: { &quot;subject-id&quot;: &quot;Shane Wang&quot;, &quot;age&quot;: 24, &quot;faculty&quot;: &quot;master&quot;, &quot;security-level&quot;: 3 } } ]} Enable this and disable others and run 返回主体信息的交易ID12345{ &quot;result&quot;:&quot;fc13ee161a90bb49e62fe416f2dbaad75e66d580d2a991fc01f5dd6f6d9ec820&quot;, &quot;error&quot;:null, &quot;id&quot;:&quot;1&quot;} Error: null suggests a successful SRT registration on subject chain. Regist an owner of object on subject chainAn example of transaction sent to the request chain:123456789101112131415{ &quot;id&quot;: &quot;1&quot;, &quot;chain_name&quot;: &quot;chainrequest&quot;, &quot;method&quot;: &quot;sendrequestfrom&quot;, &quot;params&quot;: [ &quot;1YjuDfXfTqtUAW6N1cttSMLStLfhUKbC3sc3nU&quot;, &quot;1YjuDfXfTqtUAW6N1cttSMLStLfhUKbC3sc3nU&quot;, { &quot;txid&quot;: &quot;839a4ed408120fdd3d2f72a319823bf10ecf31663f21359fa4db5c881a37d9f5&quot;, &quot;scriptSig&quot;: &quot;null&quot; }, &quot;c3662ec6779160be959d119f453d74bd38ceb2305692a5076671f85d545d8d21&quot;, &quot;org. apache. pdfbox. pdfctrl# read&quot; ]} ObjectCreate object chain12./multichain-util create object./multichaind object Then edit shellchain.conf to add rpcallowip and rpcport: 1./multichain-cli object getaddresses On object chain, no entity is needed so we directly send transaction to object chain for registering object. Copy ip, port, rpcuser and rpcpassword into JMeter. Send custom transaction and we will get TXID of object: Policy chainCreate policy chain1./multichain-util create policy Regist policyWe get an object txid in advance.medica101/object.org: cbadd86ee7ace60491bb9207e28d3ac694fe36e6d656aab26d27483970970733medica102/object.org: 12d77dc0297f570abef82bfcdb0f60aea25ef7ced8a348d33222319f3ed7edf4 Params: from-address to-address policyid rule-combining-method 12345678910111213141516171819202122{ &quot;id&quot;:&quot;1&quot;, &quot;chain_name&quot;:&quot;policy&quot;, &quot;method&quot;:&quot;registpolicy&quot;, &quot;params&quot;:[ &quot;1AWZxmCBG18MAaMcsz9PaQ7jeLkf9TDA7pCyvc&quot;, &quot;1AWZxmCBG18MAaMcsz9PaQ7jeLkf9TDA7pCyvc&quot;, &quot;policy1&quot;, &quot;deny_override&quot;, [ {&quot;attr&quot;:&quot;resource-id#Obj&quot;,&quot;value&quot;:&quot;medica101/object.org&quot;} ], [ {&quot;id&quot;:&quot;cond1&quot;,&quot;expr&quot;:[&quot;object-id&quot;,&quot;OP_OBJATTR&quot;,&quot;medical-record-001. pdf&quot;,&quot;OP_EQUAL&quot;]}, {&quot;id&quot;:&quot;cond2&quot;,&quot;expr&quot;:[&quot;faculty&quot;,&quot;OP_SUBATTR&quot;,&quot;doctor&quot;,&quot;OP_EQUAL&quot;]}, {&quot;id&quot;:&quot;cond3&quot;,&quot;expr&quot;:[&quot;action-id&quot;,&quot;OP_ACTATTR&quot;,&quot;org. apache. pdfbox. pdfctrl# read&quot;,&quot;OP_EQUAL&quot;]} ], [ {&quot;id&quot;:&quot;rule1&quot;,&quot;effect&quot;:&quot;permit&quot;,&quot;expr&quot;:[&quot;cond1&quot; ,&quot;cond3&quot;, &quot;OP_BOOLAND&quot;,&quot;cond2&quot;,&quot;OP_BOOLOR&quot;]} ] ]} get return: 12{&quot;result&quot;:&quot;a9f8dcd95c120956f52c99ed4ee4067dccb467d3e4cc765df17fa4ccafc99edb&quot;,&quot;error&quot;:null,&quot;id&quot;:&quot;1&quot;}{&quot;result&quot;:&quot;50420654e19db96ff8a6a62e7476d36bf48ebefa1e86589b59959790b97b21e1&quot;,&quot;error&quot;:null,&quot;id&quot;:&quot;1&quot;} Update policy chainParams: from-address to-address 生成策略或上一次更新策略返回的txid policyid rule-combing-method target condition rule state Request chainCreate request chainThe transaction got from the request chain will be like: 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172ART:{ &quot;hex&quot; : &quot;0100000001e8b60d8ea85703ffd1e8ba547856637b74fffb259282b42402030a10beaa1198000000006a47304402206669661d52e6616536ea38f86914c14321a9f4563609fff2050dc3bb0b3dd94702201642e30d94ea024abc204abe15cea99ce0db4fb4ddccb585f375d31d274a3175012103d2bf881784a2cf0bb2b56a7f4bd685900015ec742826adef3d6bb0cfc3c1447cffffffff0200000000000000001976a914ead6e273c04dd3952b003343712410ff5aca713788ac00000000000000001976a914ead6e273c04dd3952b003343712410ff5aca713788ac00000000f57b22766572223a22415254222c227375626a656374223a7b2274786964223a2238333961346564343038313230666464336432663732613331393832336266313065636633313636336632313335396661346462356338383161333764396635222c22736372697074536967223a226e756c6c227d2c226f626a6563742d74786964223a2263333636326563363737393136306265393539643131396634353364373462643338636562323330353639326135303736363731663835643534356438643231222c22616374696f6e223a226f72672e206170616368652e20706466626f782e207064666374726c232072656164227d04000000&quot;, &quot;txid&quot; : &quot;21c97d586f29267d5d7c701e639d0f89a2c568577fa8247bf8f24915e788ba25&quot;, &quot;version&quot; : 1, &quot;locktime&quot; : 0, &quot;ver&quot; : &quot;ART&quot;, &quot;subject&quot; : { &quot;txid&quot; : &quot;839a4ed408120fdd3d2f72a319823bf10ecf31663f21359fa4db5c881a37d9f5&quot;, &quot;scriptSig&quot; : &quot;null&quot; }, &quot;object-txid&quot; : &quot;c3662ec6779160be959d119f453d74bd38ceb2305692a5076671f85d545d8d21&quot;, &quot;action&quot; : &quot;org. apache. pdfbox. pdfctrl# read&quot;, &quot;vin&quot; : [ { &quot;txid&quot; : &quot;9811aabe100a030224b4829225fbff747b63567854bae8d1ff0357a88e0db6e8&quot;, &quot;vout&quot; : 0, &quot;scriptSig&quot; : { &quot;asm&quot; : &quot;304402206669661d52e6616536ea38f86914c14321a9f4563609fff2050dc3bb0b3dd94702201642e30d94ea024abc204abe15cea99ce0db4fb4ddccb585f375d31d274a317501 03d2bf881784a2cf0bb2b56a7f4bd685900015ec742826adef3d6bb0cfc3c1447c&quot;, &quot;hex&quot; : &quot;47304402206669661d52e6616536ea38f86914c14321a9f4563609fff2050dc3bb0b3dd94702201642e30d94ea024abc204abe15cea99ce0db4fb4ddccb585f375d31d274a3175012103d2bf881784a2cf0bb2b56a7f4bd685900015ec742826adef3d6bb0cfc3c1447c&quot; }, &quot;sequence&quot; : 4294967295 } ], &quot;vout&quot; : [ { &quot;value&quot; : 0.00000000, &quot;n&quot; : 0, &quot;scriptPubKey&quot; : { &quot;asm&quot; : &quot;OP_DUP OP_HASH160 ead6e273c04dd3952b003343712410ff5aca7137 OP_EQUALVERIFY OP_CHECKSIG&quot;, &quot;hex&quot; : &quot;76a914ead6e273c04dd3952b003343712410ff5aca713788ac&quot;, &quot;reqSigs&quot; : 1, &quot;type&quot; : &quot;pubkeyhash&quot;, &quot;addresses&quot; : [ &quot;1YjuDfXfTqtUAW6N1cttSMLStLfhUKbC3sc3nU&quot; ] }, &quot;assets&quot; : [ ], &quot;permissions&quot; : [ ], &quot;items&quot; : [ ] }, { &quot;value&quot; : 0.00000000, &quot;n&quot; : 1, &quot;scriptPubKey&quot; : { &quot;asm&quot; : &quot;OP_DUP OP_HASH160 ead6e273c04dd3952b003343712410ff5aca7137 OP_EQUALVERIFY OP_CHECKSIG&quot;, &quot;hex&quot; : &quot;76a914ead6e273c04dd3952b003343712410ff5aca713788ac&quot;, &quot;reqSigs&quot; : 1, &quot;type&quot; : &quot;pubkeyhash&quot;, &quot;addresses&quot; : [ &quot;1YjuDfXfTqtUAW6N1cttSMLStLfhUKbC3sc3nU&quot; ] }, &quot;assets&quot; : [ ], &quot;permissions&quot; : [ ], &quot;items&quot; : [ ] } ], &quot;data&quot; : [ ], &quot;nType&quot; : 4, &quot;blockhash&quot; : &quot;0040dd89115fb5a7599f6b01a3c54131c19b0646c0b2c09de0e9607dee6621a1&quot;, &quot;confirmations&quot; : 190, &quot;time&quot; : 1575293978, &quot;blocktime&quot; : 1575293978}","link":"/Dec-13th-TBAC-project-development/"},{"title":"外刊精读学习计划","text":"学习笔记 E1: Stephen Hillenburg, ‘SpongeBob SquarePants’ Creator, Dies at 57Notes &lt;&lt;海绵宝宝&gt;&gt;: SpongeBob SquarePants 首映: premiere(fr) premier/première: first 完全原创: utterly originalHe created a utterly original character in this cartoon. 快节奏的, 激动的: freneticThe series have frenetic 11-minute episodes. ReviewsI feel very sorry to hear the sad news these days that several celebrities have passed away, especially for the obituary of the creator of Spongebob SquarePants, Stephen Hillenburg, who died of ALS on Monday with an age of 57. SpongeBob is such a classic cartoon that it has been translated into dozens of languages in the last decades since it premiered in 1999. I was charmed by Hillenburg’s creativity that he can combine a sequence of hilarious plots with the knowledge of marine biology, as well as make us laugh, think, and to be inspired. My childhood has surely passed when I couldn’t watch cartoons with my family at lunchtime or innocent friends at weekends. But the passion with imagination generated from the happy past is a concomitant of my life. Stay curious, stay young. E9: Trouble in the cockpit: RyanairNotes rosy: rose 的形容词形式, 表示美好的, 有希望的, 玫瑰色的 工会: trade unions 正在罢工的: striking 极速逼近: snapping at its heels 单位成本: unit cost la critiqueLes compagnies aériennes à bas prix expliquent que l’existence est rationnelle. E10: Who on earth? “Doctor Who”Notes shatter the glass: 打破玻璃WordForWord: shutter n.&amp;vt. 快门&amp;快速关闭 incarnation: n. 化身词根 carn 肉: carnivore 食肉动物 air: vi.公映, 播放 extraterrestrial: 地球外的词汇升级: of the land/Earth—&gt;terrestrialWordForWord: celestial 天空的 PC brigade: PC(Political Rightness)大军 ReviewsIt doesn’t matter whether our doctor is acted by a man or woman. It is indeed a science fiction show so just let the imagination fly. To prevent the contradiction with the happened events, however, it is inappropriate to change the gender of historical personages in the audience’s mind. If omitted, it will draw giggles by the public. So does a Tencent’s game called Glory of Kings. E11: Detention of Huawei’s Meng Wanzhou sparks fury in ChinaNotes chief financial officer: CFO 首席财务官 extradition: 引渡 make sb/sth the subject of attention: 让…成为了焦点 draw on: 引用, 凭借, 利用eg: draw on the experience of other people do away with: 废除, 终结, terminateeg: do away with unpleasant memory La critiqueOn a indignation, et laissez-la aller! E12: Brief encounter: Victoria’s SecretNotes tune in to: 收看电视频道/收听广播电台 an extravaganza of …: 使用of连接并列名词对华丽场面进行铺陈式的描述 内衣的表达: briefs; knickers; lingerie; underwear viewership: 收视率 sag: vi. 下降, 下垂 halve: v. 减半eg: halve the cost a better fit with: 和…更配eg: Chocolates are a better fit with music in rainy days. ReviewsNew brands selling briefs stress the comfortability and applicability of underwear which conform to the trend of today’s feminism, competing to the legacy brand like Victoria’s Secret. It suggests that contemporary women gain confidence in their own rather than their underwear. E13: Yellow fever: France’s riotsNotes gilets jaunes: Fr. “黄马甲” rise up (against sth): 奋起反抗. 揭竿而起 infiltrate: vt. 潜入同义词: permeate, penetrate Macron: 马克龙 grass-roots: 基层的, 一般群众的 style .. as ..: 把…设计为…风格eg: style himself as a rigorous leader la critiqueJ’ai peur. E14: In ‘The Rape of Nanking’ Iris Chang deconstructs the horrors of warNotes deconstruct: 解析, 解构, analyse. (不是 construct 的反义词) faint-hearted: 胆小的 毁誉参半: equally applauded and criticized类似表达: a mixed response creative efforts: 又聪明又努力 大屠杀: slaughter, carnage, massacre, Holocaust 归功于: be credited with / 归罪于: put the blame oneg: put the blame of an academic cover-up for Nanking on Japan ReviewsThe Rape of Nanking should never be forgotten. Its author called Iris Chang, an American-born Chinese journalist, died in the age of 36 due to both the suffering of depression and consistent disturbance from right-wing Japanese. We should remember the brave-hearted women when memorizing the dead compatriots. Even if I have some insight into the massacre happened 81 years ago that was regarded as the National Humiliation, it is still impossible to comment without any strong feelings when I just read about the words in her book. Chinese people prefer forbearing pain and avoiding quarrel and smoothing things over, so the world-shocking slaughter was not publicized until 1997, the publication of ‘The Rape of Nanking’. On the other hand, Yamato nation has more strongly than other ethnic groups of survival crisis and selfishness. The more self-united a nation is, the crueler it is to the surrounding nations. Never forget it. Never forget the past. Never forget the national humiliation. Strive for the rise of China. E15: ‘Aquaman’ is Already a Box Office TitanNotes box office: 票房 Warner Bros: 华纳兄弟 collect $ in tickets: 获得了 $ 票房 moviegoer: 电影观众TV-viewer: 电视观众 crapshoot: 有风险的事业 have grown more selective about: 逐渐对…越来越挑剔 flop: vi. 对失败的一种时髦表达, 扑街, 糊了 leave a stink on: 给…留下了不好的影响 rollout: 大范围铺开 la critiqueJe veux voir le film, mais je n’ai pas le temps récemment. E16: Most Powerful Women In Tech In 2018: With Greater Power Comes Greater ResponsibilityNotes So 引导的倒装句和前半句共享一个动词, 用于连接同向意思的表达, 显得更加简洁和地道eg: As night falls, so does the temperature. battering ram: (中世纪的)攻城槌, 用来比喻披露Facebook问题的Sheryl Sandberg on an apology tour: 生动形象的说法, 指四处奔波着给人道歉 overhaul: (车或机器的)彻底大修, 全面检查 goliath: Goliath是《圣经》中被男孩大卫用石子射杀的巨人, 引申为巨人；强大的人（或物）词汇升级: giant, tycoon—&gt;titan—&gt;goliath, behemoth ReviewsSeveral cases of murder have taken Jean Liu to an apology tour recently. From a macro perspective, I hold an opinion that this uprising company with ten thousand employees is going through ups-and-downs. Whether it’s drivers killing passengers or vice versa, the cause underlying it is lacking consideration of security. Experience in designing a large system tells us that security is always the second issue to consider, so are the operating systems, computer network, and autonomous vehicles. However, Is there any way to prevent accidents on a personal level? Yes, there exists a farsighted solution than feedback. That is feedforward. When we feedforward an objective, we collect all the prerequisites as much as possible and then prepare for every one of them before we start. That actually classifies individuals. E17: What the World Googled in 2018Notes trending: 非常潮的, 非常有热度的 play host: 做东道主 trophy: 奖杯 lead-up to the final: 一路杀进决赛 captivate: 使…为之倾倒 bright spot: 亮点, 和不好的消息形成对比eg: There were some birght spots in the misery. spotlight: 凸显 Story of Yanxi Palace: 延禧攻略 成为榜单第一, 上头条的表达was the most …; took the crown for; top the list for spike: n. sharp increase la critiqueJe n’aime pas les feuilletons, mais c’est un bon signe d’exportations culturelles. E18: Why we love pantomime (‘Oh no we don’t’… ‘Oh yes we do’…)Notes Pantomime: Panto, 一种有观众互动的童话剧 fairy tales: 童话故事 skewed: 有偏差的, 有失偏颇的 to the uninitiated: to the people who don’t have experience; unintiated 缺乏经验的, 不知情的 be flummoxed by: be confused by; flummoxed 狼狈的 ReviewsPanto is a part of British cultural DNA. Children like it because it is funny and crazy. Adults like it because it reminds them of their childhood at Christmas during their childhood. If you still do not understand, just watch it. E19: Double 12: more Alibaba magicNotes frenzied gorging: 饕餮大餐; frenzied 疯狂的, 狂热的 clock up + 数字: 达到了eg: clock up three billion dollars magic过去式 magicked以-ic结尾动词的时态变形时要加k, 类似: mimic, panic, traffic mom-and-pop store: 夫妻小店 trample on: 碾压eg: big companys trample on small stores put up for auction: 送去拍卖eg: put up the house for auction la critiqueAlipay est tellement pratique par rapport aux cartes bancaires qu’un antique homme comme moi aime l’utiliser. E20: O shopping spree: Christmas marketsNotes spice: 含香料的 scented: 有香味的 be laden with: 满载… Christkind: 圣婴, an angel-like child spin: 旋转, 有倾向性的描述eg: He put a positive spin on the situation. 欢乐: n. merriment; a. jolly medieval: 中世纪的word power: ancient, medieval, modern perennial favorite: 长期以来所喜欢的东西 reviewsAs Christmas is coming, so is Chinese New Year. Before embracing the winter vacation, I must remember to complete the tasks of this term. Two compulsory courses and tow extra-courses to finish, one driving test to take, and one plan to prepare. It’s a season to be wary as well as jolly. E21: Eastern time: China’s riseNotes premature: 过早的, 仓促的 be responsible for: 是…的原因 account for: 占比, 多用于图表的描述 tenfold: adv. 以十倍地 at the height of: 在…的鼎盛时期 tug: drag ReviewsReform and opening up is a long-term and arduous cause, and we, the people, need to work on it generation after generation. At the stage of the 40th anniversary, we have gone through three main periods. The leading reform took place in agriculture. The liberation of the primary industry also revives the private sector. The second big step came from 1992 when Deng Xiaoping inspected Southern China. He said poverty is not socialism. Therefore what followed are the legalization of marketing, admission to the WTO, and the very high-speed development of private sectors. From 2012 to now, the Party has entered New Epoch and conducted deeper-level reform. We will move forward because the future will be created by the doers and makers, rather than criticizers or complainers. E22: Chinese bike-sharing start-up Ofo on verge of bankruptcyNotes cash flow: 现金流 exemplify: 作为一个典型的例子, 展现了…eg: The news exemplifies the poor conditions of the company. burn through cash: 烧钱 dissolve: vt. 解散 apply for refunds on their deposits: 申请退押金 in the virtual queue: 网络上的排队 ReviewsThe beginning sentence of the passage stresses the support from Alibaba. The writer does it partly because Financial Times services readers from all over the globe, where Ofo don’t have such fame as much as its supporter. This arrangement can arouse the readers’ desire for reading. Besides, as a contrast, even such a powerful supporter cannot remedy Ofo’s current poor situation. Although I am an idealist who approbates bike-sharing service, I still got the deposit back last week with a little pity. The prisoner’s dilemma might explain the anticlimactic interests of users. After all, no one could get out of the Theory of Game and Psychology. E23: Rapper Lil Pump in racism storm over new video mocking ChineseNotes 新闻第一句话呼应标题. infuriate 呼应 in storm, anti-Chinese 呼应 mocking Chinese in a reference to: 提及, 提到 eyelid: 眼皮 the second verse: 歌词的第二段 derogatory: pejorative rise form social media fame to huge main-stream success: 从网红出道获得主流意义上的成功 tabloid: 报刊, 小报 Rip Lip PumpLip pump is a dumpbuy some preme and bapesurprise me the gossipsay nothing gripe You’re not a rapperYou’re a trash smokerdied in cancerF**k you Gucci gangTake the L, take the Lyoung young young E24: Global pay gap will take 202 years to closeNotes workplace: 工作场所, 职场 take on: 承担, 接受, 面对 managerial: 管理性质的 ReviewsI am skeptical about the accuracy and dependability of the results according to the WEF. Because efforts in predicting stocks, weather, politics, and so on, have exemplified that long-term estimation for mankind now still remains a puzzle. Any organization who dears to claim what would happen in 202 years after now is approximately a charlatan. In my opinion, the gap will reach a balance rather than an equivalence. This is for three reasons. First, I saw a girl leaning slightly against his boyfriend’s shoulders in the school library. That is common. But that must be weird when a boy would do it. To a greater extent, men usually and naturally undertake more responsibility and thus get more paid. Secondly, women in the professional workplace will sacrifice time with their family. It is unfair for their children even if it might be fair in incomings. Thirdly, I do not know the algorithm for getting the above results. But the mathematical concept of series teaches us that the whole sum of all the items is a constant, which means the upper limit does exist. Therefore, I still hold the opinion that the gender equality does not mean the male and female should work as the same. Rather, they are supposed to play their respective strengths so that each gender earns equal respect. E25: Presents, Bickering and BoozingNotes milestone: an important event booze: n. alcoholic drinks; v. drink alcohol Expressions describing arguingbicker &lt; row &lt; flare-up, bust-up kick off: to begin Christmas dinner in British: the lunch having in 25th December resurface: reoccur truce: if you have a truce, you agree to stop arguing for a period of time board game: any game that played on a board, such as chess, mahjong, Checkers, etc. draw to a close: come to the end supersede: (formal) follow hang-over: n. ; hung-over: a. drunk Boxing Day: 26th December ReviewsTraditionally, British people celebrate Christmas by praying in the church and tuning in to the Queen’s Speech. But the lately investigation shows that the family is bickering and boozing before sunset. It is an illustration of the modern family relationship. The cause of the flare-up probably comes from the uncomfortableness of suddenly spending much time in one house where they seldom do in busy workdays. So we must cherish the festivals that give us a precious chance to sooth conflictions and boost intimacy with our family by arguments. E26: Nature journal nominates its Top 10 people for 2018Notes 提名: nominate, name capture global attention: capture用得妙 movers and shakers: 很有影响力的人 dub sb sth: 给某人某个称号 graghene: 石墨烯 sth preoccupy sb: 满脑子都是sth的sb ReviewsI am really inspired by the bravery that the Nature’s editor mentioned to cope with difficult questions about who we are, where we have come from, and where we are going. Likewise, confronting myself is a critical step towards a healthy personality. Whether rich or poor, young or old, able or disable, I am a unique creature living on the earth with efforts to make a better life and better world. Wish you will find out, face, and finally overcome the drawbacks in your life. Wish you will merry Christmas. E27: Social fretwork: life onlineNotes fret: 烦恼, 焦虑 psychiatric: 精神病学的psychiatric illnesses 精神疾病 a body of: 大量的A growing body of evidence support his conclusion. give sb scope for: 给 sb … 的机会 exacerbate: 加剧 body image: 身体意象, 个人眼中的自己 substance abuse: 导致成瘾的物质滥用 the other way around: 相反地 ReviewsAs a computer major college student, my life is full of electronic screens. So I deliberately avoid the unnecessary touch of these goods, including social software. What makes me a little shocked is the resemblance of brain actions between Facebook and drug addiction. In fact, those activities will exacerbate anxiety after leaving them and return real life. But the network surely has incomparable advantages because it cuts a body of expenses of connections and communication. Thus the point is utilizing it and no being addicted to it. E28: The Queen’s Christmas message: Monarch preaches conciliationNotes For sb, nothing says A like B: 对于某人, 没有什么比 B(具体) 更贴合 A(抽象) 的了 = for sb, A is BFor some travellers, nothing says miraculous quite like aurora in the Artic. reigning: 现任的, 在任的 overarching: a. 包罗万象的 rooming: a. 迫近的 Her Majesty: (尊称)女王陛下His/Her/Your 陛下 Brexit: 英国脱欧 ReviewsQueen Elizabeth II is the longest-reigning monarch in Britain’s history. Even more astounding, I perceived that she seems to be in as good health as ever after I watched her majesty’s annual Christmas broadcast. Many construe her longevity as the stable relationship, healthy diet, and near-perfect lifestyle. Needless to say, I agree. What’s more, I would like to add some own opinions that the public might dismiss. Studies have shown that positive thinkings help people live longer. The Queen never express her political stance, which means she owns authority but never abuse it. In the changing and turbulent surroundings, she sticks on the constancy of traditional values including the belief, family, and friendship. So I believe, that positive outlooks over relationship and aging can have tremendous effects on a person’s life expectancy. E29: Japan to Resume Commercial Whaling, Defying International BanNotes defiant: a. 反抗的, 违抗的 文化意义: cultural significance plummeting: a. 骤降的 moratorium: n. (活动的) 暂停, 暂禁 annual quota: 年度份额 minke whales: 小须鲸 nationalist appeal: 民族主义诉求 imposition: n. 强加 ReviewsWhaling fishing, as an important part of Japanese history and culture, provided not only whales meat as food to people but also economic benefits. Moreover, as a coastal country, Japan has always been pursuing to have a voice in the development of both marine economy and politics which are, in my opinion, the real intention for Japan to restart whale fishing. Last but not least, the act of resuming commercial whaling mixed a tinge of nationalist appeal against the imposed western values. Those are exactly the narrow and limited Japanese view of the world. E30: Michelle Obama Ends Hillary Clinton’s Run as Most AdmiredNotes other than: instead of / besides be named by sb as: 被sb冠以什么名号 sb2 be/finish second, with sb3 and sb4 next. 用来带出第二第三第四的表达 open-ended question: 开放性的问卷调查 record: a. 创纪录的a record 50th time 创纪录的第50次 on 14 occasions: for 14 times ReviewsWhatever your opinion about them, you have to admit that it is the place for strong persons. Compared to them, my comments are no as much as influential, trivial, indeed. Hence, I turn to talk about the aspects of surveys. When people are doing a survey, there is a lot more to care about despite the results and rankings. That is to say, we need to pay special attention to the methods that the survey is conducted. Because they determine the reliability of the results, so do the chosen participants. Moreover, those names on the top list deserve a more thorough inquiry into the details. Last but not least, we have a duty to leave an ear to the voices of the masses. E31: Chinese scientists turn copper into “gold”Notes Science Advances: 一家隶属于 Science 的线上电子期刊 alchemist: 炼金术士 gateway: 通道, 途径, 敲门砖 instant riches: 一夜暴富 prove lucrative: 系表结构, 经过实际考验证明是有利可图的Tip: “prove” is a linking verb here ReviewsAccording to Wikipedia, Chemical physics is the branch of physics that studies chemical processes from the point of view of physics. I am writing this, fond of the idea of modifying abundant copper to a state identical with precious metals in chemical properties, proud of our Chinese researchers who finally realize those dreams used to be fantastic but now put into the ground, also ashamed of my poverty-brain state in which I still have a long way to go. As Sun Jian said, “It is like a warrior with golden armour in a battlefield, capable of withstanding any enemy assault.” Yes, it is out of expectation, but it is within understanding. The new method injects an abundant body of energy into copper at the atomic level, so that the electrons are more dense and stable. Research outcomes demonstrate the stage of development of a modern nation. Yet, we are still on the way. So I should pick myself up, dust myself off, and begin again the work of reproving a man. All in all, the endeavour is by itself a kind of happiness. E32: Why Brits Love SpainNotes siesta: (Spanish) a nap in the afternoon get by: 过得去; 尚可eg: — So you can speak Spanish?— I can get by. monarchy: n. 君主政体; 君主政治 top the list: 名列第一 expat: 移居国外者 in droves: 成群结队地 retiree: 退休人员 ReviewsIn light of the essay, a vast flock of British pick Spain as their tourist destination each year. Though it might seem a little weird, I must confess that I used to regard four things as temptations and distractions, which are the decadent music, womanizine, travelling, and hunting. However, Teacher Mat’s audio collaborated with his mom has altered my view of them after I felt a sense of rituals and an atomosphere of happiness by their travelling. Approaching the New Year, people’s actions, say travelling overseas, watching films, skiiing, skating, having dinner together, etc., represent a sense of rituals aside their sophisticated world. Because that is one of the easiest way to control oneself life and thus provides an outcome of happiness. Besides, a ceremony prepares us better biding farewell to the past and embracing the future. So wish all of you were having a special ceremony, and wish all of you a Happy New Year. E33: The Impossibility of Keeping New Year’s ResolutionsNotes unachievable: 无法完成的 = unattainable admirable: (重读在第一个音节) 极好的, 值得称颂的 ensuring: 随之而来的 set sb up: vt. 导致, 安排, 设计 vi. 陷害 fuel our anxiety: fuel用的好 start right away: 立刻开始 ReviewsIf I set myself a goal, I am always keeping in mind that everything has a begin, a process, and an end, though today’s society tends to be against my rules, eliminating one of the three steps. I strongly resist the takeaway industry because the begin, which used to be preparing food or moving to the places for eating, is left out, as well as the end which is represented by washing dishes after dinner. The work left simplifies to opening your mouth, chewing the food, and swallow it. So you see, usually, the process is interesting, while the begin and end are not. But skipping the dislikes here is not a universal policy at all. In order to change the world by making things happen, we must take all those barriers of the beginning, setbacks in the process, and pieces afterward as a normal. Finally handling difficulties will become a habit that you enjoy facing it every day. E34: The year ahead: indigenous tonguesNotes peril: 危险peril &gt; danger Inuit: 因纽特人 Métis: 梅蒂人 Balinese: 巴厘语 champion: v. 支持, 捍卫 n. 冠军, 捍卫者He is a champion of human rights. kick-start: vt. start ReviewsIn the background of globalization, thousands of indigenous tongues are in peril now. A language provides not only the efficiency of learning knowledge and communicating with each other but also a special view of seeing the world. After reading the news article, I find some former videos saying my hometown dialect, i.e. Yixian dialect and Shexian dialect. They are interesting and bringing up my memories. I hope there would be laws and regulations protecting the rights of dialects of the south of Yangtze River. Technology can also help to save the rare languages from the risk of extinction. Last but not least, there should be people like me willing to listen and speak them. E35: Tech has the power to help the underprivileged, says Pony MaNotes as A penetrate every corner of the world, B is/are changing many aspects of our daily life: 随着A, 发生B In someplace, this evolution is happening even faster and going even further than it is in other parts of the world. 介绍evolution在某地区的影响力 order takeaways: 点外卖 pay utility bills: 支付生活杂费(水电煤气取暖费) pay fares for public transport: 支付交通费Word Power: base fare 起步价flat fare 统一价 book a medical appointment: 挂号 deploy: vt. 有效利用, useeg. deploy technology to alleviate the toil and hardship for the disadvantaged launch/initiate a campaign: 发起一项运动 first-ever: first, 前所未有的, unprecedented philanthropic: 慈善的, phi- 爱, anthrop- 人类 be woven into: 融入weave vt. 编织 ReviewsAs Internet companies penetrate every corner of society, network technologies and web services are changing many aspects of our daily lives. However, in the dark side, I am a little afraid that these high-technology giants were slightly proceeding to control people’s vision, mind, and actions. If true, a new center of authority will follow. E36: Karaoke for one: Japan’s surging singles give rise to solo business boomNotes rendition: 演绎, 诠释, 呈现, render的名词形式 booth: 小亭子, 售货棚 singledom: n. 单身状态 spawn: vt. 催生, 产卵 ReviewsI understand the mental states of the single persons surrounding me. A single person can think individually, do it himself/herself, no longer need others in the living, even be far away from peer-pressure — all with a spirit of independence and freedom. But loneliness will hit them when festivals approach. How do I know a lot of things about them? Because I am one of them. E37: China lands spacecraft on the far side of the moon, a historic firstNotes 辨析: historic &amp; historical有历史性的, 前无古人的 &amp; 和历史(学)相关的 the far side of the moon: 月背类似, 月面: the near side of the moon bona fide: a. (源自拉丁文) 真正的, 真实的, 名副其实的, 不折不扣的bon- 好(取自法语词根)fid- 信念, 信仰 (fidelity) 航天大国: space power rover: n. 巡视器Land Rover: 路虎 landing craft: n. 着陆器 dispatch: (formal) send, 发出, 发送 relay: 中继设备 orange-tinted: 略显橙色的a tint of green: 一抹绿色 high-definition: 高清的 pock-marked: 坑坑洼洼的, 有麻子的 force: n. 非常有影响力的人/事物 a percentage of: a part of ReviewsThis era is moving forward irresistibly. China’s landing craft, Chang’e 4, has been the historic first to successfully land on the far side of the moon. It is known that the far side of the moon cannot face the Earth all year round. Consequently, the landing has made a big step for a more effective way of observing the universe. Besides, the reservation of resources is thus more abundant without the shielding effect of its planet. However, everyone knows the hardship that no direct communicating connections can be established because of the block of the solid sphere. Special thanks and gratitude must be dispatched to all the staff in our nation’s aerospace industry. Also, we cannot forget our family members and all works of life who are serving for us silently in our daily life. Thanks to all those surrounding ordinary people as well as great. E38: Apple drops iPhone bombshell on already reeling stock marketNotes waning: wane的进行时, 表示减少, 减弱, 月亏wax and wane: 阴晴圆缺, ups and downs lost luster: 失去光芒 reckoning: n. 判断, 看法, 估计by my reckoning, we have 2000 customers.I reckon that … fall well below: 下降到远低于 top-of-the-line: 顶级的, 顶配的 ReviewsI first heard about Apple and iPhone from a classmate and friend of mine when I was studying in Middle School. At that time, I could perceive how he was marvelous about the design and functions of the products of Apple. At that time, a common person used to hold a Nokia which was famed for its throw-proof characteristic. So at that time, Apple was leading the trend of smartphones. But the competition is cruel. Apple didn’t launch many designs as amazing as before in the latest years. On the other hand, this company has put too much into the stock market to return to its investors. At these circumstances, such a high price is unacceptable. So the decline is inevitable. That is the rule for high-tech industries. E39: Why the Dutch Are So Good At EnglishNotes respondent: n. 回答者; 调查对象 dub: 配音 These results beg the question: beg 用得妙 ReviewsToday’s episode made me laugh around the 12th minute when I heard Oscar was talking about Chinese food with his father in Chinese. To be honest, we Chinese people have spent too much effort studying English but with a relatively modest effect. We could actually improve the way of learning English by taking the lessons from Dutch people. First, try your best to expose yourself to English media and reading materials in order to get emerged in the English surroundings. Secondly, choose the learning materials that you are interested so that you are willing to spend more time learning. Thirdly, be brave to use English, including listening, speaking, reading, and writing, and take them as a normal. Remember not to restrict yourself to a narrower world. E40: This coffee company thinks it can beat Starbucks in ChinaNotes outlets: 门店, 零售店 take it ahead of: 领先 luring: 引诱 lure 的进行时 savvy: 聪明的, 有见识的, 会利用实际情况的 up its game: 升级竞争 合作: team up with; tie-up with ReviewsI slightly doubt that it is an advertorial from Luckin Coffee. Just one cup of coffee will make me unable to sleep for a whole day and night with a stuck mind. So I hardly ever take it as daily drinks. Behind the competence of two coffee companies is the rivalry between two of China’s top-three internet companies. But customers are happy because they make profits from cheap prices. E41: Radical Changes in Children’s LivesNotes 翻天覆地的变化: radical change, 指涉及本质的, 彻底的变化radical 还有激进(pejorative)的意思 四处溜达, 到处玩耍: out and about 谓语并列句中可以共用一个 will, 在第一个分句中使用 will + verb, 后面的分句省略 will 直接使用 verb排比句可以在最后一个分句通过加插入语等手段产生一些变化, 使句子更加生动 与sb建立联系/打交道: engage with sb文中使用 engage with a screen 暗指儿童常常不是和人打交道, 而是和电子产品打交道 最好是更好: and preferably better 高智商高情商的一种形象化表达: good grades and social graces wherewithal: 必要的资金 某事将会发生: be set to do = be ready to do ReviewsThe radical changes in childhoods from different generations stem from the social vicissitude nationwide, emphasis on early education, and the march of digital technology. It seems that children’s education is an international issue. Investing a body of time, money and energy in their children is statistically useful. But smarter approaches are equally important in order for less work and better results. We have no choice because as Yuyuan said, the market is generally becoming a situation that winners take all. E42: Elon Musk’s China Factory — Now a Field, Soon a Plant — Aims to Pump Out Its First Tesla This YearNotes 外商独资的: wholly foreign-owned 扩大生产: scale up production, pump out, rev up well-to-do: well-off, 小康的, 富裕的 着迷于, 倾心于, like: be enamored of/with, be captivated by, be fascinated by, be charmed by, be enchanted by 对…很重要: be central/crucial/vital to 从 A 转变为 B: graduate from A to B 小众的/主流的: niche/mainstream bellwether: 领头羊; 风向标 权衡利弊: weigh the costs and benefits ReviewsTesla! Tesla! Tesla!Seeking fun is man’s nature since time immemorial. This nature inherited in man’s mind and is illustrated by toys in childhood, sports in youth, and fancy vehicles in adulthood. I am captivated by the design and performance of Tesla Model series despite the jokingly high price. Though the significance of the piece of news is that Tesla will be the first wholly foreign-owned car plant in our country, which is a signal of Deep Open policy. I am motivated to own such a car before my thirtieth birthday. E43: Golden Globes 2019: Sandra Oh Gets Emotional About Hollywood DiversityNotes 对某事感到很激动/变得情绪化: get emotional about 费尽心思地去做某事: go out of the/one’s way to do 成为焦点: in/under the spotlight 以…为特色; 主要呈现了: feature 小表演, 小桥段: bit ReviewsGolden Globes, plus Academy Awards(Oscars) and Emmy Awards(Emmys), are considered as the top three prestigious awards in film and television industries. Everyone has a group of concentric circles in their heart, centered by himself/herself, and in turn enlarged by their families, relatives and neighbors, friends, compatriots, foreigners, then the animals, livings on the earth, and finally, all beings in the universe. So the success of Sandra indicates a more open, well-off, and developed industry in spite of her personal efforts. By the way, ‘Whitewashing’ is a term that I first heard from Xiao, which proves again that he is really a film connoisseur. E44: Amazon founder Jeff Bezos and wife divorcing after 25 yearsNotes 定语从句最重要的功能是用来建立关联的, 而不是修饰先行词 vow: n. 誓言 vt. 发誓 症结, 难点: sticking point 积累财富: amass assets/fortune/wealth 对…有所有权: hold a claim to sth, claim的核心含义是所有权eg: The earthquake claimed 100 victims. 对冲基金: hedge fund upstart: a. 新兴的, 初创的 merchandise: 商品 ReviewsThis is not a vulgar story about a gold owner and a gold digger, but a touching story about the spouse starting up together, cherishing each other but finally have to divorce. Jeff and MacKenzie make this vow which is seeking to exert the influence as small as possible. Both are decent persons. Both are sharing a common conception. And yes, both are rich. E45: Broadcasting from Deep Space, a Mysterious Series of Radio SignalsNotes 外面 &amp; 这里: out there &amp; down here 使困惑: baffle, completely confuse 来无影去无踪: occur randomly and disappear immediately 矮人: dwarf 天体物理学家: astrophysicist ReviewsThe second-time discovery of “fast radio bursts” has evoked more attention by astronomers as well as intrigued the folk scientists. But they do not share the same concern. The folk science tends to be hypothetical and arbitrary. There is an insight quoted from Chris French into their conspiracy theory, “We have what is called an intentionality bias. It’s the assumption that whenever something happens, something or someone made it happen for a reason. In the context of space, that someone is always going to be aliens.” While academic science is often cruel and realistic. Different from those who are afraid of the approach of the hypothetical alien ships, now astronomers want more data of this phenomenon to study in search of a detailed explanation. E46: How hard is English? How weird?Notes provide with an index: vt. indexeg. She has indexed the book by author, by age, and by illustrator. 声调: intonation 疑问的, 质问的: interrogative ReviewsIn computer science, it is very common to see the rankings, which are regarded by programmers as the source of fun, about the comparisons of different programming languages. For linguists and language teachers, it also takes a lot of fun comparing thousands of languages from all over the world. According to the recent study mentioned in this article, the weirdness of a language is judged by how many common features and unusual features are used which are shared by other languages. When it refers to Chinese, the study found that it is weird for so many restrictions for the ending sound of a Chinese character. For example, Chinese does not allow the words ending with the sounds of ‘m’ ‘f’ ‘b’ ‘p’ ‘t’ ‘k’ ‘d’. The weird ranking of English is a little lower than Chinese. What are weird about English are briefly the forms of plurals, the ‘do/did’ in questions and negatives, and the use of the English sound ‘th’. But personally speaking, native speakers take the weird parts for granted because they were born to learn and receive them. So we can also receive them as a symbol of culture. E47: Are Male and Female Brains Biologically Different?Notes pop: popularpop neuroscience: 指当下神经科学中比较流行的理论 innately: 内在的, 呼应标题的biologically rarely fail to = almost always 激怒某人: get sb riled by 不分男女的, 中性的, 无性别差异的: unisexeg. unisex clothes (部分)责怪某人某事, 把某事归咎于某人: blame sb (in part) for sth另见E14 put the blame of sth on sb 学术界: academia 上头条: make headlines = make the list(上榜单)另见E17/E32 top the list 性别差异: differences between men and women = gender disparities sb的动机是A, sb利用B, 做了CBecause sb know that B, sb, A, do Ceg. Because smart merchants know that people value health more than wealth, the capitalists, desperate for incoming and cash flow, launch lots of gyms anxiously covering every corner of the city. ReviewsI am now preparing for a final exam so I just quote a passage from Lise Eliot which I really agree, “We live in a gender-binary world, The default assumption is that these differences are hard-weird … But male and female brains are not much more different from each other than male or female hearts or kidneys.” E48: Forget me not: Google v FranceNotes advocate-general: 欧洲法院的佐审官 使得A和B竞争/发生冲突: pit A against Bpit friends against friends 让朋友反目成仇 所讨论问题中最重要/关键的是: At issue is … 反驳, 反击: counter 从清单中移除: delist sth预计某时公布: sth is not due until sometime 长短句搭配的写作风格中, 短句往往含含有重要的信息. ReviewsThe exam of Economics and Managements are less than 24hours to go. Exciting. And this is Sundar Pichai’s quotes, “Google is all about information. So the notion of using and presenting information in the right point at the right time to users is what, in essence, describes Google.” E49: Losing it: the Brexit voteNotes 英国议会: parliamentaryMP (member of parliament): 议员 执政党: ruling party反对党: opposition party 使用最高级的时候加上时间或范围的限定, 避免主观 预计/应该/可能: be expected/supposed/likely to seek changes/advice/assistance/help 布鲁塞尔(指代欧盟): Brussels ReviewsTheresa May is seeking to persuade all, but failed. It’s literally impossible to keep everyone pleased. You can’t do it. You can try — and fail miserably — but you will never succeed. Wishes of citizens may not be convoluted into a policy decision without firm leadership of a ruling party. In my perspective view, This article implies the socialist democratic dictatorship. E50: Hollywood at war as Oscars organisers accused of bullying starsNotes 冷落: snub 表退出的动词短语: pull out -phobia 恐惧症 -phobic 患恐惧症的claustrophobia: 幽闭恐惧症nomobilephobia: 无手机恐惧症homophobia: 同性恋恐惧症 发掘: unearth amid表示处在一个…状况下, 通常包含两层关系, 一层是因果关系, 一层是让步关系 使通俗易懂: dumb down 达到历史最低点: hit an all-time low ReviewsThe organizers of Oscars has its own reason for restricting stars. That biggest night in cinematics hit an all-time low not only because it is losing the suspense in the process and the popularity of winning films, but also young people have grown less enthusiastic about television shows. The emergence of the division of labors designates the development of society. Likewise, such a kind of division has increasingly played a common role in the movie industry. Under the disadvantageous environment background, the Academy Awards shouldn’t give up innovation of manifestation in order to keep pace with the time. E51: Burberry is running its first Lunar New Year ad - but some people are calling it creepyNotes 发起…活动: launch a campaign doing/in noun of 合家团圆, 团结友爱: togetherness 全家福: a family portrait 细思极恐的: creepy 舞台幕布, 世界背景: backdropeg. a story against a backdrop of WWII 重塑, 重新思考: reimagine 将两件事情肩并肩地放一块进行对比, 并列: juxtaposejusta- 表示 next, 邻近eg. justapose the best and the worst, the wise and the foolish 正在做某事: in the middle of 重新定位: reposition 正在实现某事的路上, to be likely to achieve the result you want: is on track to ReviewsSince I started the reading program, I have been acquainted with an increasing body of luxury brands. Once in Madame Tian’s français class during this term, she ever told to us boys that it is just really common and economical to send your girlfriend(if you have one) lipsticks as a gift because there are actually so many make-ups and luxury goods which can be much more expensive than a Dior or Mac or YSL lipstick. It surely does. Yet, a lot of foreign luxury companies don’t understand Chinese culture. Their product-promotion campaigns, making an advertisement pretending to please Chinese customers by inviting some famous Chinese actresses to act from a western perspective, is just a disguise of stealing money from your pocket. Anyone with discerning eyes can easily see that it is a capitalist conspiracy. E54: Netflix show sparks wave of ‘Tidying Up’Notes 降落, 降临: alight on 好的交流, 不是仅抛概念, 而是负责概念加解释 ReviewsE55: Faking it: how selfie dysmorphia is driving people to seek surgeryNotes dysmorphia: …上瘾综合征clock-punching dysmorphia 打卡上瘾综合征 在某人群中非常流行: be prevalent among/in sbThe sharing action is prevalent among foreign languages beginners. 否定词加上比较级表示最高级I have never spent a more worrying day. 肉毒杆菌素: Botox美容手术用的一种药品 坏事的先兆/前兆: harbingerThe thaw is a harbinger of spring. 模糊混淆现实与幻想的界限: blur the line of/between reality and fantasyThis science fiction blurs the line between reality and fantasy. 对…念念不忘, 痴迷于: be fixated onbe fixated on losing weight ReviewsSince modern social apps can easily beautify a person’s electronic images, those who have caught Selfie Dysmorphia blur the line between modified images in the app and realistic images in the mirror, so that they seek the surgery to smooth the discrepancies. In reality, the behavior of seeking surgery due to selfie dysmorphia is really flippant. It is a one-sided thought that just because you don’t possess beauty and fame but you want them so that you don’t care about any others. However, the petit elder sister is likely to avoid selfies from appearing in social networks. They take the born of beauty as granted, so they are on the way of seeking other forms of beauty.","link":"/Dec-9th-2018-Reading-Foreign-Magzines-E10/"},{"title":"Hacking Android by Termux","text":"Do you want a terminal on your Android device? Look at this. Install Termux from Google Play.Root is not needed for this app and just allowing storage permission is ok. Basic settingsSetting default editor: 1export EDITOR=vi edit sources files 1apt edit-sources Understand the directory structure: 123echo $HOMEecho $PREFIXecho $TMPPREFIX Install basic toolsIn termux, pkg is developped for simplifying sudo apt in some circumstances. 123pkg updatepkg install vim curl git wget unzip unrarsh -c &quot;$(curl -fsSL https://github.com/Cabbagec/termux-ohmyzsh/raw/master/install.sh)&quot; Accessing internal storage filestermux-setup-storageAfter installing the above shell script, storage directory will be created and you can access common dcim, music, videos, etc. 1ls storage","link":"/Dec-9th-Hacking-Android-by-Termux/"},{"title":"Video quality assessment -- Step by step","text":"VQA(Video quality assesment) is generated from image quality assessment. TerminologyMSEMean Square Error MSE = \\frac{1}{NM} \\sum_{i=1}^N \\sum_{j=1}^M (f(i,j) - f'(i,j))^2PSNRPeak Signal to Noise Ratio PSNR = 10 \\log \\frac{MAX_I^2}{MSE} [dB]where $MAX_I$ is the maximum pixel of the image. SSIMStructural Similarity Index Measure SSIM(x,y) = [l(x,y)]^\\alpha \\cdot [c(x,y)]^\\beta \\cdot [s(x,y)]^\\gammal(x,y) = \\frac{2\\mu_x\\mu_y + C_1}{\\mu_x^2 + \\mu_y^2 + C_1'}c(x,y) = \\frac{2\\sigma_x\\sigma_y + C_2}{\\sigma_x^2 + \\sigma_y^2 + C_2'}s(x,y) = \\frac{\\sigma_{xy} + C_3}{\\sigma_x \\sigma_y + C_3'}VSSIMVideo Structure Similarity Q_i = \\frac{\\sum_{j=1}^{R_s} w_{ij} SSIM_{ij}}{\\sum_{j=1}^{R_s} w_{ij}}where i th frame, j th sampling window, w is the weight value. $R_s$ is quantity of sampling windows per video frame. And VSSIM for the entire video of length N is: VSSIM = \\frac{\\sum_{i=1}^N W_i Q_i}{\\sum_{i=1}^N W_i}PVQMperceptual Video Quality Metric Conducted using software in this article. LCC &amp; SROCCThese are two correlation factors(LCC is Pearson linear correlation coefficient and SROCC is spearman rank-order correlation coefficient) for evaluation of the similarity. The very simple transfer is use the model and results from IQA. Just modify the input to a set of frames. Ground truthIn machine learning, the term “ground truth” refers to the accuracy of the training set’s classification for supervised learning techniques. In another word, ground truth is a reference that we assume it totally right from empirical evidence. SGDIt is an optimization function(regressor) based on the concepts of directional derivative of a multivariable differential function. Full reference and no referenceThe full reference method compares the raw image and the so-called distorted image. However, what if the reference image is not good enough? For no reference, it seems like it has no reference, but it has its standard in the heart.","link":"/Feb-11th-Video-quality-assessment/"},{"title":"如何做一个绅士","text":"What makes a man a gentlemen? 平等与博爱吾日三省吾身在学习绅士的过程中和成为绅士之后, 都要经常地反省自己. 在没有成为绅士之前反省自己, 是对做过的错事进行反思. 成为绅士后反省自己, 是为了警醒自己, 保持下去, 切不可半途而废. Push yourself, rather than push others. 大度记得大学时的杨导说过一句话: “不要和宿管大叔, 食堂大妈, 等等后勤集团的人员发生矛盾, 如果发生了一定记住是你的问题. 同样, 对女性更要大度.” 不平等与偏爱分寸感“自来熟” 是一种没有分寸感的体验. 懂得珍惜珍惜现在所拥有的, 时常去呵护他们/它们, 包括亲人, 朋友, 衣物 凡事有始有终洗完澡后洗换下来的衣物如果没有办法自律, 认真, 努力地做好这些小事, 又谈何去完成由无数个小事所累积起来的大事呢? 和这个世界保持联系","link":"/Feb-13th-How-to-be-a-gentleman/"},{"title":"Vim config file on Linux desktop","text":"Customizing your own vim configuration file will bring you future convenience and fluency. Writing into ~/.vimrc, it will take effect next time you enter Vim editor. If you want your config file to apply to all users, edit /etc/vim/vimrc with sudo privilige. For some specific purposes like ACM contest, you can also create a config file. When using it, source this command. If you want to specify different settings for different file types, for example, C++ files, you should first add filetype plugin indent on to the .vimrc file. and then create .vim/after/ftplugin/cpp.vim, and write setlocal expandtab setlocal shiftwidth=2 setlocal softtabstop=2 backup file, swap file and undo file‘.filename~’ is a backup file, it stores the file before you start to edit it.‘.filename.swp’ is a swap file, containing the unsaved changes.‘.filename.un~’ is an undo file that stores the undo trees of the file edited. Key mappingsDefault change active window panel Self defineFinally I will give the sample code that I set for my personal computer. Before that, let’s clarify a braces auto-completing algorithm. When the left brace is typed, only when there is no right char near it can the right brace be completed. When the right brace is typed, only when the right char near it is the same right char can the cursor be jumped. Response for typing ‘(‘ 123456get the line and column positions of current cursor as lnum, cnumif no next character exists: print &apos;()&apos;else: print &apos;(&apos; Reponse for typing ‘)’ 1234if the right next char is &apos;)&apos;: jump one charelse: print &apos;)&apos; To get the current line text, use getline(&apos;.&apos;) 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647&quot;~/.vimrc&quot;internationalisationset encoding=utf-8&quot;Indentations without hard tabsset expandtab &quot;pressing &lt;TAB&gt; will always insert &apos;softtabstop&apos; amount of spacesset softtabstop=4 &quot;default value equals &apos;tabstop&apos;, but when using indentation without hard tabs, set it to the same as &apos;shiftwidth&apos;set shiftwidth=4 &quot;affects when you press &apos;&gt;&gt;&apos;, &apos;&lt;&lt;&apos;, or &apos;==&apos;. It also affects how automatic indentation works.&quot;Automatic indentationset autoindent &quot;when starting a new line, indent as the previous line&quot;Syntax highlightingsyntax on&quot;Mouse setting&quot;don&apos;t use the mouse to prevent the appearence of line numbers on copy. For example, use `:1,3y+` instead for copying to the &apos;+clipboard&apos; from line-1 to line-3set mouse=a&quot;Appearenceset cursorline &quot;highlight the line where the curent cursor staysset nu &quot;set line numberset rulercolorscheme desert &quot;available color themes are in &apos;/usr/share/vim/vim80/colors&apos;, also you can add your own in &apos;~/.vim/colors&apos;let g:molokai_original = 1set cmdheight=2&quot;Key mappingsset showmatchset matchtime=3inoremap ( ()&lt;ESC&gt;iinoremap ) &lt;ESC&gt;:call Right_Brace(&apos;)&apos;)&lt;CR&gt;afunction Right_Brace(schar) let [bufnum, lnum, cnum, of] = getpos(&apos;.&apos;) &quot;echo lnum cnum let [lnum2, cnum2]=searchpos(a:schar, &apos;n&apos;) &quot;echo lnum2 cnum2 if lnum==lnum2 &amp;&amp; cnum+1==cnum2 execute &quot;normal! l&quot; else execute &quot;normal! a)&quot; endifendfunction&quot;Enable pluginsfiletype plugin indent on 1234567891011&quot;~/.vim/after/ftplugin/cpp.vim&quot;When it comes to C and C++, file type based indentations automatically sets &apos;cindent&apos;, and for that reason, there is no need to set &apos;cindent&apos; manually for such files.&quot;indentationsetlocal shiftwidth=2setlocal softtabstop=2setlocal tabstop=2&quot;matching bracketsinoremap { {}&lt;ESC&gt;iinoremap {&lt;CR&gt; {&lt;CR&gt;}&lt;ESC&gt;O (copy from vim ggVG then &quot;+y) paste to remote vim ssh -Y user@server or permanently added in .ssh/config Ctrl+Insert for copy, Shift+Insert for paste Tweak vim as C/C++ IDEPlugin managervim-plug: https://github.com/junegunn/vim-plug Debuggingvimspector: https://github.com/puremourning/vimspector#quick-startAfter putting Plug &apos;puremourning/vimspector&apos; into .vimrc. Go to gadget home to execute 1./install_gadget.py --all Close a tab:tabclose ReferencesHow do I set up different tab settings for different languages in Vim: https://stackoverflow.com/a/1743255Vim: Remove swap, backup and undo Files from Working Directory: https://medium.com/@Aenon/vim-swap-backup-undo-git-2bf353caa02fHow to close a tab in vim? : https://stackoverflow.com/questions/32714834/how-to-close-a-tab-in-vim","link":"/Feb-19th-Linux-Vim-Config/"},{"title":"Cross correlation in Machine learning","text":"The discrict 2D cross correlation is very similar to 2D convolution. check by MATLAB code M1 = [17 24 1 8 15; 23 5 7 14 16; 4 6 13 20 22; 10 12 19 21 3; 11 18 25 2 9]; M2 = [8 1 6; 3 5 7; 4 9 2]; D = xcorr2(M1, M2); D But there is some difference between MATLAB and PyTorch. The relevant functions in PyTorch are torch.nn.functional.conv2d and torch.nn.Conv2d. Because torch.nn.functional.conv2d can setup paddings as an argument, so the result matrix can be smaller. Let’s do a simple experiment to check it. 1234567891011Python 2.7.15 |Anaconda, Inc.| (default, Dec 14 2018, 19:04:19) [GCC 7.3.0] on linux2Type &quot;help&quot;, &quot;copyright&quot;, &quot;credits&quot; or &quot;license&quot; for more information.&gt;&gt;&gt; import torch&gt;&gt;&gt; import torch.nn as nn&gt;&gt;&gt; import torch.nn.functional as F&gt;&gt;&gt; inputs = torch.randn(1, 4, 5, 5)&gt;&gt;&gt; filters = torch.randn(6, 4, 3, 3)&gt;&gt;&gt; results = F.conv2d(inputs, filters, padding=2)&gt;&gt;&gt; results.size()(1, 6, 7, 7) We will check the value for first filter. 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748&gt;&gt;&gt; inputstensor([[[[-2.0126, -1.2142, -0.5943, 0.9880, 1.3990], [ 1.2635, 1.6013, -0.4639, 0.1469, 1.7033], [ 1.0538, 0.8419, 2.0627, 1.7289, 0.0493], [-0.7360, -1.0318, -2.6838, 0.1069, -1.1440], [-0.2589, 2.0517, 0.2611, -1.7295, 0.0654]], [[-1.8845, -1.9481, 0.3805, -0.6467, 0.6878], [-0.3418, -1.3715, 0.4947, 0.4899, 0.2835], [-0.8665, 0.6921, 0.1421, 0.1243, -0.9729], [ 0.2235, -0.3882, -0.4885, 1.1147, -0.2176], [-0.8032, -0.1928, -0.6535, -0.0107, 0.6291]], [[ 1.0086, 1.0685, -0.2147, -0.0510, 0.2829], [ 0.1978, -1.4479, 0.8483, -0.7487, -0.5068], [ 1.0150, 0.2064, -0.1610, 1.1604, -0.0933], [-0.4072, 0.2518, 0.2360, 0.0037, 0.0191], [ 1.3504, -0.1713, -1.0858, 1.7440, -1.0150]], [[-1.1781, 0.9697, -0.0453, -0.2083, -0.9241], [-0.3955, 0.0400, -0.4108, -0.8875, -0.3455], [-0.6430, 0.3412, 0.6656, 0.6985, 0.2691], [ 1.3433, -1.4387, -1.2028, -0.2997, 0.6933], [-0.4480, -0.7450, 0.9386, -1.3733, 1.1912]]]])&gt;&gt;&gt; filters[0]tensor([[[-1.1877, 0.2613, 1.7033], [ 0.5515, -0.5155, -0.8936], [-1.1671, -1.3611, -0.0778]], [[-1.0069, 1.0255, 0.9102], [-0.4946, 0.8556, 1.4657], [ 0.1137, -0.2616, 0.5006]], [[ 1.4465, 1.2084, 2.2803], [ 0.2097, 0.0633, 0.7705], [-0.7784, -0.9365, -0.9489]], [[ 0.7263, 1.7227, 1.2436], [-0.9810, 0.2232, 2.0970], [ 0.4908, 0.0761, -1.2843]]])&gt;&gt;&gt; results[0, 0]tensor([[ -0.2308, -0.9420, 2.5055, 1.6621, 0.8917, -3.7088, -2.2284], [ -2.6064, -1.0220, -1.0562, -1.2500, -2.6156, -1.1755, -0.3335], [ -7.2688, -11.5212, -0.2480, 0.6509, -6.4913, -3.3876, -1.5478], [ -2.1471, 0.4592, 3.3012, 0.6832, 0.4210, -1.7197, -1.4319], [ 4.9215, 0.9659, -0.4123, 8.2638, 4.4465, 0.5087, 1.1521], [ -1.1531, -5.8456, -8.2622, 0.1412, 5.1500, 0.7043, 0.4526], [ 1.3501, 1.9708, 0.1334, -4.0153, -1.4115, 5.0781, -1.3142]]) Do the same thing on Matlab 123456789101112131415161718192021222324252627282930313233343536373839404142434445&gt;&gt; inputs_0 = [[-2.0126, -1.2142, -0.5943, 0.9880, 1.3990]; [ 1.2635, 1.6013, -0.4639, 0.1469, 1.7033]; [ 1.0538, 0.8419, 2.0627, 1.7289, 0.0493]; [-0.7360, -1.0318, -2.6838, 0.1069, -1.1440]; [-0.2589, 2.0517, 0.2611, -1.7295, 0.0654]];&gt;&gt; inputs_1 = [[-1.8845, -1.9481, 0.3805, -0.6467, 0.6878]; [-0.3418, -1.3715, 0.4947, 0.4899, 0.2835]; [-0.8665, 0.6921, 0.1421, 0.1243, -0.9729]; [ 0.2235, -0.3882, -0.4885, 1.1147, -0.2176]; [-0.8032, -0.1928, -0.6535, -0.0107, 0.6291]];&gt;&gt; inputs_2 = [[ 1.0086, 1.0685, -0.2147, -0.0510, 0.2829]; [ 0.1978, -1.4479, 0.8483, -0.7487, -0.5068]; [ 1.0150, 0.2064, -0.1610, 1.1604, -0.0933]; [-0.4072, 0.2518, 0.2360, 0.0037, 0.0191]; [ 1.3504, -0.1713, -1.0858, 1.7440, -1.0150]];&gt;&gt; inputs_3 = [[-1.1781, 0.9697, -0.0453, -0.2083, -0.9241]; [-0.3955, 0.0400, -0.4108, -0.8875, -0.3455]; [-0.6430, 0.3412, 0.6656, 0.6985, 0.2691]; [ 1.3433, -1.4387, -1.2028, -0.2997, 0.6933]; [-0.4480, -0.7450, 0.9386, -1.3733, 1.1912]];&gt;&gt; filters_0 = [[-1.1877, 0.2613, 1.7033]; [ 0.5515, -0.5155, -0.8936]; [-1.1671, -1.3611, -0.0778]];&gt;&gt; filters_1 = [[-1.0069, 1.0255, 0.9102]; [-0.4946, 0.8556, 1.4657]; [ 0.1137, -0.2616, 0.5006]];&gt;&gt; filters_2 = [[ 1.4465, 1.2084, 2.2803]; [ 0.2097, 0.0633, 0.7705]; [-0.7784, -0.9365, -0.9489]];&gt;&gt; filters_3 = [[ 0.7263, 1.7227, 1.2436]; [-0.9810, 0.2232, 2.0970]; [ 0.4908, 0.0761, -1.2843]];&gt;&gt; c_0 = xcorr2(inputs_0, filters_0);&gt;&gt; c_1 = xcorr2(inputs_1, filters_1);&gt;&gt; c_2 = xcorr2(inputs_2, filters_2);&gt;&gt; c_3 = xcorr2(inputs_3, filters_3);&gt;&gt; c_0 + c_1 + c_2 + c_3ans = -0.2308 -0.9419 2.5054 1.6621 0.8919 -3.7085 -2.2283 -2.6062 -1.0219 -1.0561 -1.2497 -2.6155 -1.1754 -0.3335 -7.2686 -11.5207 -0.2484 0.6508 -6.4911 -3.3877 -1.5477 -2.1475 0.4589 3.3011 0.6829 0.4209 -1.7198 -1.4318 4.9216 0.9663 -0.4121 8.2640 4.4465 0.5085 1.1521 -1.1531 -5.8454 -8.2619 0.1415 5.1501 0.7042 0.4525 1.3501 1.9708 0.1334 -4.0152 -1.4114 5.0780 -1.3141 No suprisingly we will find that ans on matlab is equivalent to results[0, 0] on python. For torch.nn.Conv2d, PyTorch add random weights to the cross correlation bigot multiplication, which make it more complex. Look at the following codes run in python terminal: 12345678910111213141516171819202122232425262728293031323334353637383940&gt;&gt;&gt; import torch&gt;&gt;&gt; import torch.nn as nn&gt;&gt;&gt; import os&gt;&gt;&gt; os.system(&quot;clear&quot;)&gt;&gt;&gt; input = torch.ones(2,3,4)&gt;&gt;&gt; inputtensor([[[1., 1., 1., 1.], [1., 1., 1., 1.], [1., 1., 1., 1.]], [[1., 1., 1., 1.], [1., 1., 1., 1.], [1., 1., 1., 1.]]])&gt;&gt;&gt; m = nn.Conv1d(3,1,1)&gt;&gt;&gt; m2= nn.Conv1d(3,1,1)&gt;&gt;&gt; m(input)tensor([[[-0.3817, -0.3817, -0.3817, -0.3817]], [[-0.3817, -0.3817, -0.3817, -0.3817]]], grad_fn=&lt;SqueezeBackward1&gt;)&gt;&gt;&gt; m2(input)tensor([[[0.4615, 0.4615, 0.4615, 0.4615]], [[0.4615, 0.4615, 0.4615, 0.4615]]], grad_fn=&lt;SqueezeBackward1&gt;)&gt;&gt;&gt; input[1]tensor([[1., 1., 1., 1.], [1., 1., 1., 1.], [1., 1., 1., 1.]])&gt;&gt;&gt; input[1] = 2 * input[1]&gt;&gt;&gt; inputtensor([[[1., 1., 1., 1.], [1., 1., 1., 1.], [1., 1., 1., 1.]], [[2., 2., 2., 2.], [2., 2., 2., 2.], [2., 2., 2., 2.]]])&gt;&gt;&gt; m(input)tensor([[[-0.3817, -0.3817, -0.3817, -0.3817]], [[-0.3176, -0.3176, -0.3176, -0.3176]]], grad_fn=&lt;SqueezeBackward1&gt;)","link":"/Feb-20th-cross-correlation/"},{"title":"Understanding forward and backprop in neural networks","text":"Some of the essences of neural networks. convnet is a famous example of feed-forward network. f(x)=\\frac{1}{1-e^{-x}}\\begin{align*} f'(x) &= -\\frac{e^{-x}}{(1-e^{-x})^2}\\\\ &= \\frac{1}{1-e^{-x}} \\cdot (1 - \\frac{1}{1-e^{-x}})\\\\ &= f(x)(1-f(x)) \\end{align*}The same relation also holds for $\\displaystyle f(x)=\\frac{1}{1+e^{-x}}$ For deep learning model containing tens of layers, activation functions should be selected very carefully to prevent the problems of gradient bombing or disappering.","link":"/Feb-25-understand-forward-and-backprop-in-neural-networks/"},{"title":"Histogram equalization and histogram matching","text":"Histogram equalization is a special case of histogram matching. Suppose we have a histogram like this. And the CDF(Cumulative Distribution Funciton) for it goes like It shows that low value pixels occupy the majority, making the whole image look dark. It’s a relatively bad viewing experiment. If we equalize the value distribution, the figure will look better. After modified, the ideal distribution may like this. So the CDF will be like Now let’s make some derivation for the transformation function from x-axis with r to the x-axis with s. Let $M$ be the upper limit for the pixels’ range, so the CDF at $M$ will be 1, i.e. \\begin{cases} P(r=M) &= 1 \\\\ P'(s=M) &= 1 = k\\cdot M \\end{cases}where k is a constant. \\begin{align*} P(s) &= k\\cdot s \\\\ &= \\int_0^r p'(x)\\,\\text{d}x \\end{align*}Therefore, the transformation goes to be s = T(r)= M\\int_0^r p'(x) \\,\\text{d}xwhere $p’(x)$ is called the PDF(Probability Distribution Function) which yields from $P’(x)$","link":"/Feb-27th-histogram-averaging-and-histogram-matching/"},{"title":"Stochastic gradient descent learning note","text":"The stochastic gradient descent method is commonly used in machine learning. Understanding this method well will help us betterly build a comprehensive architecture of machine learning in the brain. Considering the power of analogy, we begin with the two-dimension situation. Supposing a 2-D math function: f(x,y) = x^2 + y^2 + 1and a point $P_0(1, 2)$. We want to find the fastest degradient path from P. We frist define a unit vector $\\boldsymbol{l_0} = (\\cos\\alpha_0, \\sin\\alpha_0)$ that indicates a direction. The direviative along this direction yields: \\begin{align*}\\displaystyle \\frac{\\partial f}{\\partial\\boldsymbol{l_0}} & = \\lim_{\\left|\\left|P_0P\\right|\\right|\\to0}\\frac{f(P) - f(P_0)}{\\left|\\left|\\overrightarrow{P_0P}\\right|\\right|} \\\\ & = \\lim_{\\left|\\left|P_0P\\right|\\right|\\to0} \\frac{\\frac{\\partial f}{\\partial x}\\Delta x + \\frac{\\partial f}{\\partial y}\\Delta y + o(\\left|\\left|\\overrightarrow{P_0P}\\right|\\right|)}{\\left|\\left|\\overrightarrow{P_0P}\\right|\\right|} \\\\ & = \\frac{\\partial f}{\\partial x} \\cos \\alpha_0 + \\frac{\\partial f}{\\partial y} \\sin \\alpha_0 \\\\ & = 3 \\cos \\alpha_0 + 5 \\sin \\alpha_0 \\\\ & \\leq \\sqrt{3^2 + 5^2} = \\sqrt{34} \\\\ \\end{align*}when \\displaystyle\\left\\{\\begin{align*} \\cos\\alpha_0 &= \\frac{f_x}{\\sqrt{f_x^2 + f_y^2}} = \\frac{3}{\\sqrt{34}} \\\\ \\sin \\alpha_0 &= \\frac{f_y}{\\sqrt{f_x^2 + f_y^2}} = \\frac{5}{\\sqrt{34}} \\end{align*}\\right.where $f_x = \\frac{\\partial f}{\\partial x}$, $f_y = \\frac{\\partial f}{\\partial y}$ So if we want to find the minimum of this function from point $P_0(x_0, y_0)$ P_1 = P_0 - s \\boldsymbol{l}_0We call $s$ as the step. that is \\begin{align*} x_1 &= x_0 - s \\cos \\alpha_0 \\\\ y_1 &= y_0 - s \\sin \\alpha_0 \\\\ \\cos\\alpha_1 &= \\left.\\frac{f_x}{\\sqrt{f_x^2 + f_y^2}}\\right|_{P_1} \\\\ \\sin\\alpha_1 &= \\left.\\frac{f_y}{\\sqrt{f_x^2 + f_y^2}}\\right|_{P_1} \\end{align*}Likewise, we can write an algorithm for it: Given x, y, f(x,y) = x*x + y*y + 1 do: fx := 2 x + 1 fy := 2 y + 1 tmp := sqrt(fx^2 + fy^2) cos_a = fx / tmp sin_a = fy / tmp x := x - s cos_a y := y - s sin_a while (f is decreasing) I did a Python experiment based on this algorithm, and give the result as a table stepsize 0.1 0.01 0.001iteration times 23 224 2230optimization value 1.0302809 1.0294120 1.0294120 You see, the convergence comes very fast within several steps. But, when stepsize increases 10 times and the iterations times increases 10 times accordingly, the optimation effects don’t have remarkable progress. And finally there are about 0.02 difference away from the theoretical optimization result. As for improving this algorithm in personal opininum, first, the step can varies according to the magnitude of gradient, that is, when gradient is big, step is big and vice versa. Secondly, upon reach the last part of iteration, not use the directly direction, but try to deviate a bit, this might receive a better result and also has a digree of ability to jump out of local optimization.","link":"/Feb-7th-Stochastic-gradient-descent-learning-note/"},{"title":"Explore | 有趣的问题","text":"记录一些偶尔遇到的小问题 英语中, 有哪些单词, 打乱顺序重排后, 可以组成另外一个单词? 有哪两个组成的一对单词, 同样打乱顺序重排后, 可以组成另外一个单词或者新的两个单词? 三个, 四个, 一句话组成另外一句话, 一篇文章组成另外一篇文章… Every morning on weekdays, I go to Polytech from my residence Les Ormes. If I choose to walk straight there, it will cost me 10 minutes to reach the destination. There is also an autobus passing through the nearest bus stop every 15 minutes. If I take line-7 bus, it will costs me 1 minute to walk to the bus stop and only 4 minutes on bus. Let $\\Delta$ be the time difference between the time that I leave my residence and the scheduled arriving time of the next bus. Theoretically, when $\\Delta &lt; 6$ going to the bus stop and taking a bus is more time-saving while when $\\Delta &lt; 6$ walking is better. But in reality, the interesting part is that the bus is not exactly arrive on time. Can I help me to make a choice of whether to take a bus or to walk ?","link":"/Interesting-questions/"},{"title":"Tmux settings and usage","text":"Tmux is a terminal software for multi-windows. Tmux basic commandsPrefix: ^B Short screen copy and paste has no difference with that in uxterm. Long screen copy and pasteDefault^B + [ to enter copy modeselect and quit copy modeUse ^B + ] to paste Use vi-copy modeAdd the lines into ~/.zshrc 12export EDITOR=vimexport VISUAL=&quot;$EDITOR&quot; Now you can use Space to start selection, Enter to end selection and q to quit copy mode. To system clipboardFor XTerm, add this line into ~/.Xresources to enable: 1xterm*disallowedWindowOps: 20,21,SetXprop Now, you can use ^B + [ to enter copy mode, vi style to select and copy.Then go to anywhere to paste. An experiment of autostart tmux service under systemd1234567891011[Unit]Description=Start tmux in detached session[Service]Type=forkingUser=%IExecStart=/usr/bin/tmux new-session -s %u -dExecStop=/usr/bin/tmux kill-session -t %u[Install]WantedBy=multi-user.target Taking care of multi-user.target, a target is used for starting a group of units. That is to say, when starting a target, all units in this target will be started by systemd. We can check all the units included in multi-user.target by systemctl list-dependencies multi-user.targetWe can see that almost every autostart service set by our own user is included in multi-user.target. So this is an important systemd target that is run default when starting Linux. Then create and edit the file /etc/systemd/system/tmux@.service 1234567891011[Unit]Description=Start tmux in detached session[Service]Type=forkingUser=%IExecStart=/usr/bin/tmux new-session -s %u -dExecStop=/usr/bin/tmux kill-session -t %u[Install]WantedBy=multi-user.target Then enable and start user service: 12systemctl enable tmux@shane.servicesystemctl start tmux@shane.service References Scroll shell output with mouse in tmux: https://superuser.com/questions/210125/scroll-shell-output-with-mouse-in-tmux Tmux tutorial: https://github.com/tmux/tmux/wiki/Getting-Started#copy-and-paste","link":"/July-10th-2019-tmux-settings-and-usage/"},{"title":"Digital Signature","text":"私钥签名，公钥验证。 数字签名应满足的要求 id of the signer, 能让发送方知道是签名方而不是其他人的签名 (Non-repudiation) 签名方不能否认他们的签名，i.e., the signer cannot repudiate. 其他人无法伪造签名 给一串消息 m，签名方用私钥 sk 签名，设签名算法为 Sig 函数： \\sigma = Sig_{sk}(m)任何拥有公钥的接收方都可以使用公钥算法进行验证，验证结果应为永真： Verify_{pk}(m,\\sigma) = 1而对于攻击者，既无法进行选择性伪造，即在得到m的情况下，无法计算出一个签名 $\\sigma’$，使得 $Verify{pk}(m, \\sigma’)=1$；也无法进行存在性伪造，即计算出一对 m’ 和 $\\sigma’$，使得 $Verify{pk}(m,\\sigma’)=1$.","link":"/July-12th-Digital-signature/"},{"title":"Descent to Hades of Raspberry Pi","text":"Welcome to the computer world of Raspberry! OS installationGet the image from its offical website and extract it into the SD card by using the command 7za x file.zip. On Linux, dd is the image writing tool: 1dd bs=4M if=2019-07-10-raspbian-buster.img of=/dev/sdX status=progress conv=fsync For Pi3, there exists wireless card, so use sudo raspi-config to enable it. change source list:https://mirror.tuna.tsinghua.edu.cn/help/raspbian/ Enable WiFi network12sudo apt install raspberry-headersgit clone Share network to RPi by ethernet1234567891011121314151617[root@inspiron-7537 shane]# iptables -S-P INPUT ACCEPT-P FORWARD ACCEPT-P OUTPUT ACCEPT-A FORWARD -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT-A FORWARD -i enp3s0f1 -o internet0 -j ACCEPT[root@inspiron-7537 shane]# iptables -LChain INPUT (policy ACCEPT)target prot opt source destination Chain FORWARD (policy ACCEPT)target prot opt source destination ACCEPT all -- anywhere anywhere ctstate RELATED,ESTABLISHEDACCEPT all -- anywhere anywhere Chain OUTPUT (policy ACCEPT)target prot opt source destination Then use arp we will find the address: 12345[root@inspiron-7537 shane]# arpAddress HWtype HWaddress Flags Mask Ifaceapollo.archlinux.org (incomplete) enp3s0f1192.168.137.244 ether b8:27:eb:80:22:52 C enp3s0f1_gateway ether c4:ca:d9:38:48:e5 C wlp2s0 The IP of Pi is 192.168.137.244. Config on Host Linux computerFirst three commands 123iptables -t nat -A POSTROUTING -o wlp2s0 -j MASQUERADEiptables -A FORWARD -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPTiptables -A FORWARD -i enp3s0f1 -o wlp2s0 -j ACCEPT If the first iptables is wrong, that’s because this arch has just upgraded its kernel so it needs reboot. But if it’s the problem of nat you might 12sudo modprobe ip_tablessudo echo &quot;ip_tables&quot; &gt;&gt; /etc/modules. Second three commands 123iptables -I INPUT -p udp --dport 67 -i enp3s0f1 -j ACCEPTiptables -I INPUT -p udp --dport 53 -s 192.168.137.0/24 -j ACCEPTiptables -I INPUT -p tcp --dport 53 -s 192.168.137.0/24 -j ACCEPT Now it should be ok. But sometimes we may face the problem of cannot connect to the wifi web. This is because the ip route takes ethernet as the default gateway. Check by ip route.Then delete one: sudo route del default gw 192.168.137.1 enp3s0f1 RPi serving as NASturn on root 1234apt install sambaapt install ntfs-3g # mount ntfssmbpasswd -a pisudo mkdir /mnt/ext4 /mnt/ntfs Edit /etc/fstab 12/dev/sda1 /mnt/ext4 ext4 defaults 0 0/dev/sda2 /mnt/ntfs ntfs defaults 0 0 samba confFor example 12345[linux-share] comment = EXT4 Partition path = /mnt/ext4 public = no read only = no Mount from Windows我的电脑 &gt; 右键”计算机” &gt; 添加一个网络位置 Mounf from Linuxan example from /etc/fstab 1//rpi4/win-share /mnt/hard-disk-ntfs cifs _netdev,username=pi,password=shallwetalk,iocharset=utf8,uid=wsd,gid=wsd 0 0 离线下载Install aria2c and webui-aria2","link":"/July-17th-2019-Descent-to-Hades-Raspberry-Pi/"},{"title":"PAT 真题 | 1038 Recover the Smallest Number","text":"本题属于字典序的一道变题。 字典序是最容易理解的一种顺序. 最初接触到字典序是在组合数学的课堂上。我们依次比较串中的每个字母, 出现不一样的时候就能比较大小了. 如果某个串遍历到头了还没有比较出大小，那么较长的字符串较大。如果两个字符串一样长，那么这两个字符串的字典序相等。 本题不能直接比较两个字符串的字典序，而是应该比较它们正反拼接后字符串的字典序。由于子串中可能以0开头，所以存在这样的特殊情况，比如0229和0331组成的最小数是2290331。所以读取的时候应以字符串而不是数字读取。比较的时候也是通过比较字符串字典序。在最后别忘了还要清楚前导0，更特殊的全0情况去除完后要补0. 算法的Java实现： 1234567891011121314151617181920212223242526272829303132333435363738394041424344import java.util.*;import java.io.*;public class Main { public static void main(String[] args) { BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); String line = null; try { line = br.readLine(); } catch (IOException ioe) { ioe.printStackTrace(); } String[] segment = line.split(&quot; &quot;); int N = Integer.parseInt(segment[0]); if(N == 0) { System.out.println(&quot;0&quot;); return ; } Arrays.sort(segment, 1, N+1, new Comparator&lt;String&gt;() { @Override public int compare(String s1, String s2) { return (s1+s2).compareTo(s2+s1); } }); StringBuilder builder = new StringBuilder(); boolean leadZero = true; for(int i=1; i&lt;=N; ++i) { if(leadZero) { for(int j=0; j&lt;segment[i].length(); ++j) { if(leadZero) { if(segment[i].charAt(j) == &apos;0&apos;) continue; else leadZero = false; } builder.append(segment[i].substring(j)); break; } } else { builder.append(segment[i]); } } if (leadZero) { System.out.println(&quot;0&quot;);} else System.out.println(builder); }} 注意这里使用了 java.io 包中的 BufferedReader 和 InputStreamReader 以加快读取的速度。 另外一道类似的题目参见牛客网上在线编程模块的题目 “数串”（https://www.nowcoder.com/questionTerminal/a6a656249f404eb498d16b2f8eaa2c60）.如果某个串遍历到头了, 需要从头循环继续遍历. 如果两个串都到头了还没有比较出大小来, 说明两个串相等.最容易出错的一个例子是比较48和484，虽然字典序484&gt;48，但是两个字符串连起来的字典序是 484+48 &lt; 48+484，也就是说48应该在484的前面。 所以这道题不能直接比较s1和s2的字典序，而是要进行s1+s2和s2+s1的字典序比较。 1234567Arrays.sort(dict, (s1, s2) -&gt; (s2+s1).compareTo(s1+s2)); // 或下面写法Arrays.sort(dict, new Comparator&lt;String&gt;() { @Override public int compare(String s1, String s2) { return (s2+s1).compareTo(s1+s2); }}","link":"/July-26th-2018-lexicographic-sorting/"},{"title":"重装 Win10 笔记","text":"今天脑子一热把双系统卸载了，并且重置了Win10系统。没想到还出了一些麻烦。 重置刚完成的时候，切记不要胡乱卸载。虽然重置过后，系统又会重新装上戴尔公司的一系列产品。但是有些软件重要性挺大的，比如软件驱动类。还有一些是无法成功卸载的，比如 Onedrive。不要在卸载这些软件上面徒劳。 启用全局 utf-8在语言与区域设置中的beta选项 找不到应用商店参见：https://jingyan.baidu.com/album/870c6fc34bb633b03fe4bebc.html 输入用户密码开机后的数分钟黑屏问题参见：https://h30471.www3.hp.com/t5/you-xi-ben/windows-geng-xin-hou-hei-ping/td-p/840563 Win10 家庭版安装 Hyper-V 功能参考1：https://zhuanlan.zhihu.com/p/51939654参考2：https://jingyan.baidu.com/article/d7130635e5678113fcf4757f.html WSL 的安装与配置参考：https://billystudio.github.io/2018/05/20/config-after-install-ubuntu-18/ Hyper-V 安装 BSDHyper-V所支持的 hvd 格式的虚拟机镜像安装包是一个 xz 压缩文件，使用 wsl 中的 xz -d -k 文件名 命令解压。 重新激活如果显示的是180天到期，说明使用的是 KMS 方式的，在安装包里找 heukms","link":"/July-27th-2019-Reinstalling-win10/"},{"title":"Wierd | 不常见的C语言写法","text":"今天看到一种比较另类的C语言函数参数声明的写法, 编译居然能通过, 记录一下. 一种 C 语言参数声明写法123456789#include &lt;stdio.h&gt;int main(argc, argv)int argc;char const *argv[];{ for (int i=0; i&lt;argc; ++i) printf(&quot;%s%c&quot;, argv[i], i==argc-1?&apos;\\n&apos;:&apos; &apos;); return 0;} 一种C语言Hello world的精简形式 (虽然会报出很多Warnings) 1main(){printf(&quot;Hello, world!&quot;);} tmp registerA very good way to control temperarily used memory. 1234567891011121314151617#define UNUSED(x) ((void)(x))#ifdef __cplusplus #define __I volatile /*!&lt; Defines &apos;read only&apos; permissions */#else #define __I volatile const /*!&lt; Defines &apos;read only&apos; permissions */#endif#define __O volatile /*!&lt; Defines &apos;write only&apos; permissions */#define __IO volatile /*!&lt; Defines &apos;read / write&apos; permissions */#define __HAL_RCC_USART1_CLK_ENABLE() do { \\ __IO uint32_t tmpreg = 0x00U; \\ SET_BIT(RCC-&gt;APB2ENR, RCC_APB2ENR_USART1EN);\\ /* Delay after an RCC peripheral clock enabling */ \\ tmpreg = READ_BIT(RCC-&gt;APB2ENR, RCC_APB2ENR_USART1EN);\\ UNUSED(tmpreg); \\ } while(0)","link":"/July-30th-2018-wierd-C-arguments-declaration/"},{"title":"Differences between Python 2.7 and Python 3","text":"The well-known differences between Python 2.7 and Python 3 is the famous print function. While in some widely-used machine-learning like tensorflow and PyTorch, the print functions are regulated to the same form. At these circumstances, how can we tell the big version quickly from the codes without sometime putting a great effort to install a version of Python 3 only to find that it is run on version 2.7. Definition of classthe definition of the super inherited function differs: 123456789#!/usr/bin/pyhon3class MyParentClass(object): def __init__(self, arg): pass class MyClass(object): def __init__(self, arg): MyParentClass.__init__(self, arg) self.arg = arg 123456789#!/usr/bin/python27class MyParentClass(object): def __init__(self, arg): pass class MyClass(object): def __init__(self, arg): super(MyClass, self, arg).__init__() self.arg = arg rounding operationThe / operation for integers in Python2.7 is by default the rounding operation. 12#!/usr/bin/python27print(3/2) # will give the result: 1 In Python 3, you should do this as equivalence: 123#!/usr/bin/python3print(3/2) # will give the result 1.5print(3//2) # will give the result 1 str formatThe old style is something like 1&apos;%d %d&apos; % (1, 2) output:1 2 The new style: 1&apos;{} {}&apos;.format(1, 2) output:1 2 The new style allows re-arranging: 1&apos;{1} {0}&apos;.format(1,2) output:2 1 pickle packageBefore Python 3, one should import cPickle as pickle. Python3 integrated pickle for object serialization. Encoding:py2, default latin1: pickle.load(f)py3, default utf-8: pickle.load(f, encoding=’latin1’) xrangeIn python2, xrange()Python3 range()","link":"/Mar-11-Differences-between-Python27-and-Python3/"},{"title":"Understanding Python package installation from pip or conda or Linux distro package manager","text":"Conda(including both Anaconda and miniconda) is a well-known Python package manager for machine learning. This essay compares it with other Python package managers such as pip and apt and then takes down some frequently-used conda commands that might not be directly found on the main tutorials.Both pip and conda have a good mechanism for installing and upgrading the packages and their indepences, and also vitual running environment like virtualenv and conda env.I make the preference because conda not only includes all the python packages, but also some other very useful tools that Python uses. conda install, pip install and sudo installGenerally speaking, conda is superber than pip and ‘apt install’(apt is for Ubuntu, pacman is for Arch Linux, yum is for CentOS…) when handling dozens of virtual running environments. apt install is used for installing python packages for the system because sometimes there are system programs that are based on Python. By the way, it is not recommended to use sudo pip install in a Linux distro with package dependency structures like Arch or Debian due to confliction issues in /usr/local. Rather, one can use pip install --user to install for current user without super-user privilege.When in a virtual Python environment, you can use pip of this virtual environment to install packages of specific versions independent from those of the OS. Especially in conda virtual environment, both pip and conda are ok. In general, pip is for simple packages or packages that cannot be found in conda. conda install is more ‘intelligent’ because it detects conflicts and removing or upgrading other packages when installing. To conclude, when you need virtual environment, use conda when you need to install for current user(which is usually enough), use pip install —user 1pip2 install --user -i https://pypi.tuna.tsinghua.edu.cn/simple ino when you need to install system wide, use distro package manager. 1sudo pacman -S python2-pip Conda basic commandsTo activate this environment(myenv for example), use: source activate myenv To deactivate an active environment, use: source deactivate To create a version-specified python virtual environment called “vqa” with scipy installed 1conda create -n vqa python=3.7.1 scipy","link":"/Mar-12th-conda-commands-library/"},{"title":"The argument between-Big-Endian-and-Little-Endian","text":"大小端的故事源于《格列佛游记》故事中两个国家为了吃鸡蛋究竟是先打破较大的一端还是先打破较小的一端而征战不休。Numpy default is little endian as opposed to Big endian used in Fotran. Little Endian 叫小端存储/小端模式，指低位字节存储在低地址中（低对低）；Big Endian 叫大端存储/大端模式，与小端模式相反，大端存储将低位字节存储于高地址中（低对高）。 小端存储虽然看似正常，其实不然，比如一个4字节数0x1A2B3C4D，使用小端存储则内存从小到大访问值是 4D 3C 2B 1A；而使用大端存储看似反常，其实用计算机表示方便，从小到达访问值就是 1A 2B 3C 4D 大端模式方便的地方在于可将符号位（一般为最高位）存储在地址第1位中，方便判断正负小端模式方便的地方在于将地址拓展（如进行强制数据类型转换）的时候，原低位字节不需要调整。","link":"/Mar-21st-The-argument-between-Big-Endian-and-Little-Endian/"},{"title":"Understanding pretrain and finetune of transfer learning","text":"This article mainly introduces two practical concepts in transfer learning: pretraining and finetuning. Supposing that you have the experience of developping a CNN using pytorch. For example in function forward, you write 12345h = self.conv1(x)r1 = self.pool1(h)h = self.conv2(r1)r2 = self.pool2(h) Pretraining means that the 1st layer like conv1 and pool1 is done for you by the pretrained model. And the parameters of them are fixed. What you need to do is just finetuning, i.e. you input the model with x as input but the r1 is fixed so your truly take r1 as input and train the later layers’ parameters. Usually, the pretrained model is in large scale. To get the inside layers of this network, we use some functions like mx.symbol.FullyConnected to get the fine tuned data.","link":"/May-16th-Understanding-pretrain-and-finetune-of-transfer-learning/"},{"title":"May-6th-Overfitting-and-Dropout-in-machine-learning","text":"Dropout is not used after training when making a prediction with the fit network1.","link":"/May-6th-Overfitting-and-Dropout-in-machine-learning/"},{"title":"Gnome shell going through","text":"Gnome is an open source desktop environment under Linux. Desktop settings: GNOMEThemes and icons1sudo apt install gtk-theme-config 打开User Themes选项进行主题的选择。 安装主题和图标有两种方法，一种是通过PPA源安装；另一种是将文件克隆到~/.icons下。 安装 OSX Arc 主题（推荐）123sudo add-apt-repository ppa:noobslab/themessudo apt-get updatesudo apt-get install arc-theme 安装 MacOS High Sierra主题（可选）https://github.com/B00merang-Project/macOS-High-Sierra下载安装之后 12gsettings set org.gnome.desktop.interface gtk-theme &quot;macOS High Sierra&quot;gsettings set org.gnome.desktop.wm.preferences theme &quot;macOS High Sierra&quot; 安装 Macbuntu主题（可选）1234sudo add-apt-repository ppa:noobslab/macbuntusudo apt updatesudo apt-get install macbuntu-os-icons-lts-v7sudo apt-get install macbuntu-os-ithemes-lts-v7 由于macbuntu还没出bionic的源， Intall Vivacious Colors GTK Theme（可选）1234sudo add-apt-repository ppa:ravefinity-project/ppasudo apt-get updatesudo apt-get install vivacious-colors-gtk-darksudo apt-get install vivacious-colors-gtk-light 安装图标安装la-capitaine图标（推荐） 123sudo add-apt-repository ppa:dyatlov-igor/la-capitainesudo apt updatesudo apt install la-capitaine-icon-theme Nautilus file managerDrag-and-drop for move or copy?Press Ctrl for Copy and Shift for Move.Once I installed nautilus but it responsed very slowly.So I use a terminal to open nautilus and I see lots of warnings like: (nautilus:4258): Gtk-WARNING **: 17:34:12.268: Duplicate child name in GtkStack: … Later I found this is because I had put too many files in ~/Templates, so I removed them and clear the cache 12345sudo rm -r ~/Templates/2，标准例程-HAL库版本sudo rm -r ~/Templates/2，标准例程-库函数版本sudo rm -r ~/Templates/mx-stm32f4rm -rf ~/.cache/tracker # Clear nautilus cachekillall nautilus and restart nautilus file manager, it’s ok. TouchpadFor wayland, it’s ok.For Xorg: 12345sudo pacman -Syu libinput-gesturessudo gpasswd -a $USER input # Adding your user to group inputsudo cp /etc/libinput-gestures.conf ~/.config/sudo chown $USER:$USER ~/.config/libinput-gestures.conflibinput-gestures-setup autostart The way for debugging gnome-shell extension1journalctl /usr/bin/gnome-shell -f gnome-extensions disable my-extension@wsd to disable the extension Alt+F2 and input r to restart. gnome-extensions enable my-extension@wsd to reload the extension Here I append the command for logout current desktop user: 1sudo pkill Xorg # Or sudo pkill Xwayland Reading source code of gnome shell extension: fullscreen-hotcornersource page 1234567function _removeHotCorners() { this.hotCorners.forEach(corner =&gt; { if (corner) corner.destroy(); }); this.hotCorners = [];} This code part uses arrow function. It is equivelent to 1234567this.hotCorners.forEach( func(corner){ if (corner) corner.destroy(); return ; }); So the aim of function _removeHotCorners is to clear all hot corners that exist. ui.layout.HotCorner._rtl suggest the text direction in the widget. you can go to ~/.local/share/gnome-shell/extensions for reading another source code. Looking glass toolenter by Alt+F2exit by Esc Write an extension on your ownTransparent panelThe top bar (panel) widget is created by gnome shell in ui.main.panel. The picture of some widgets below can be illustrated here: Its css file is defined in gnome-shell/data/theme/gnome-shell-sass/widgets/_panel.scss 1234567891011$panel_bg_color: #000;#panel { background-color: $panel_bg_color; ...... // the rounded outset corners .panel-corner { -panel-corner-background-color: $panel_bg_color; -panel-corner-border-color: transparent; ...... }} so that we write css asstylesheet.css 12345678.topbar-transparency { background-color: rgba(0,0,0,0.5); /* set object.background-color=half transparent */}/* set the very small(2pt) round color between panel and its adjacent part */.roundcorner-transparency { -panel-corner-background-color: transparent;} and we go to find the panel and corner name in gnome-shell/js/ui/panel.js 12345678910111213141516var Panel = GObject.registerClass(class Panel extends St.Widget { _init() { super._init({name: &apos;panel&apos;, reactive: true}); ...... this.leftCorner = new PanelCorner(St.Side.LEFT); this.add_child(this._leftCorner); this._rightCorner = new PanelCorner(St.Side.RIGHT); this.add_child(this._rightCorner); ...... } ......}) Then we produces our extension.js 1234567891011121314151617181920212223&apos;use strict&apos;;// This is a handy import we&apos;ll use to grab our extension&apos;s objectconst Main = imports.ui.main;function init() { log(`initializing ${Me.metadata.name} version ${Me.metadata.version}`);}function enable() { log(`enabling ${Me.metadata.name} v.${Me.metadata.version}`); // Add transparency Main.panel.actor.add_style_class_name(&apos;topbar-transparency&apos;); Main.panel.actor._leftCorner.add_style_class_name(&apos;roundcorner-transparency&apos;); Main.panel.actor._rightCorner.add_style_class_name(&apos;roundcorner-transparency&apos;);}function disable() { log(`disabling ${Me.metadata.name} version ${Me.metadata.version}`); Main.panel.actor.remove_style_class_name(&apos;topbar-transparency&apos;); Main.panel.actor._leftCorner.remove_style_class_name(&apos;roundcorner-transparency&apos;); Main.panel.actor._rightCorner.remove_style_class_name(&apos;roundcorner-transparency&apos;);}","link":"/May-27th-gnome-shell-project-reading/"},{"title":"Building personal budgets and bills database against consumerism","text":"当前市面上的记账工具都只是记录了花钱与消费，而并没有关注这笔钱花的到底值不值。本文提出了一种价值的度量，即单位时间价值=总消费/总有效时间。因为消费行为具有瞬时性，而使用行为具有延时性。需要数据库建立这两个表格。 消费时刻表item这个是 ID表示的是消费项，比如 “iPhone 5” 说明：比如租房，毕业前暑假租房item和毕业后租房item属于不同的item category所属类别，比如 “通讯工具” 或 “电子产品” descriptionexpense消费金额 moment消费发生的时间 使用时间表item-id链接到 item descriptioncheck-point记录时的实际有效使用时间。 也可再细分为轻度使用、中度使用和重度使用。 后期考虑加入通货膨胀率或居民物价增长指数 check flag0: normal1: end Mariadb installation123sudo pacman -Syu mariadbsumariadb-install-db --user=mysql --basedir=/usr --datadir=/var/lib/mysql to install MariaDB/MySQL system tables in /var/lib/mysql Two all-privilege accounts were created.One is root@localhost, it has no password, but you need to be system ‘root’ user to connect. Use, for example, sudo mysql.The second is mysql@localhost, it has no password either, but you need to be the system ‘mysql’ user to connect.After connecting you can set the password, if you would need to be able to connect as any of these users with a password and without sudo. You can start the MariaDB daemon with:cd ‘/usr’ ; /usr/bin/mysqld_safe —datadir=’/var/lib/mysql’ You can test the MariaDB daemon with mysql-test-run.plcd ‘/usr/mysql-test’ ; perl mysql-test-run.pl 123systemctl enable mariadb.servicesystemctl start mariadb.servicemysql 12345create user &apos;wsd&apos;@&apos;localhost&apos; identified by &apos;190701&apos;;create database consumption;grant all privileges on consumption.* to &apos;wsd&apos;@&apos;localhost&apos;;flush privileges;quit; then you can use common to login 1mysql [-u wsd] -p # [] can be dismissed is your current user is wsd Selecting a database1use consumption Access using Apache phpMyAdmin1sudo pacman -Syu php apache php-apache phpmyadmin Make sure php can be run on Apache:https://wiki.archlinux.org/index.php/Apache_HTTP_Server#PHP Then add phpmyadmin to Apche:https://wiki.archlinux.org/index.php/PhpMyAdmin#Apache Create a table12CREATE TABLE `consumption`.`ItemInfo` ( `item` VARCHAR(100) NOT NULL , `category` CHAR(1) NOT NULL , PRIMARY KEY (`item`(100))) ENGINE = InnoDB COMMENT = &apos;Table recording items information&apos;;CREATE TABLE `consumption`.`SpendingMoment` ( `id` INT NOT NULL AUTO_INCREMENT , `item_name` VARCHAR(100) NOT NULL , `category` CHAR(1) NOT NULL , `description` TEXT NULL , `expense` DECIMAL(10, 2) NOT NULL , `moment` DATE NOT NULL , PRIMARY KEY (`id`)) ENGINE = InnoDB COMMENT = &apos;Table logging the moments of expenses&apos;; Insert item1INSERT INTO `UsageDuration` (`id`, `item_name`, `description`, `effective_time`, `check_time`) VALUES (NULL, &apos;renting room&apos;, &apos;9月住了5天&apos;, &apos;120:00:00.000000&apos;, &apos;2019-09-09&apos;); Query1234561. select item_name from item_info2. select sum(hour(effective_time)) from UsageDuration where item_name=&quot;1.&quot;3. select sum(expense) from SpendingMoment where item_name=&quot;1.&quot;4. 3./2. where item_name=1.5. select sum(4.) from 一些SQL技巧实现列的累加功能123456789MariaDB [test]&gt; select * from exam;+-------+-----+| grade | num |+-------+-----+| A | 2 || B | 4 || C | 2 || D | 6 |+-------+-----+ 12345678910111213MariaDB [test]&gt; select row_number() over(order by grade) row_num, -&gt; grade, -&gt; sum(num) over(order by grade) -&gt; from exam -&gt; group by grade;+---------+-------+-------------------------------+| row_num | grade | sum(num) over(order by grade) |+---------+-------+-------------------------------+| 1 | A | 2 || 2 | B | 6 || 3 | C | 8 || 4 | D | 14 |+---------+-------+-------------------------------+ JDBCAfter installing mariadb-jdbc from aur, 1sudo ln -s /usr/share/java/mariadb-jdbc/mariadb-java-client.jar /usr/lib/jvm/default-runtime/lib/ Data Analizing主要绘制一张表和一张图表是在某个时间点下各 item 与其 单位有效时间花费图是在某个时间点下各 大类的 总单位有效时间花费 参考文章： （超详细一文看懂）MySQL累计求和问题及窗口函数order by的原理(https://blog.csdn.net/dhr223/article/details/107413344)","link":"/Nov-12th-2019-Building-personal-budgets-and-bills-database-against-consumerism/"},{"title":"OAuth 项目调研","text":"OAuth 2.0 的协议标准 RFC 6749 于 2012 年 10 月发布. 目前已经有一些成熟的应用框架. 其中, Java 方面有基于 Maven 的 ScribeJava, 是一个 OAuth 封装库. 需要添加 maven 来使用, 集成了包括 FaceBook, Renren, Sina 在内的众多平台, 不过暂时还不包括 QQ 和微信. 有基于 Spring Security 的 akta oauth. Next we will build an OAuth 2.0 web application and authentication server using Spring Boot and Spring Security. After that, you’ll use Okta to get rid of your self-hosted authentication server and simplify your Spring Boot application even more. Let’s get started! PrerequisitesJDKIDEMaven Create an OAuth 2.0 ServerStart by going to Spring Initializr and generate a Gradle project with the following settings: GroupId: com.okta.spring ArtifactId: authapp Add one dependency: Web You need to add one dependency to the pom.xml file: &lt;dependency&gt; &lt;groupId&gt;org.springframework.security.oauth&lt;/groupId&gt; &lt;artifactId&gt;spring-security-oauth2&lt;/artifactId&gt; &lt;/dependency&gt; If you get an error about JAXB, it’s because you’re using Java 11 or later. To fix this, add JAXB to you pom.xml implementation &apos;org.glassfish.jaxb:jaxb-runtime&apos; This adds in Spring’s OAuth goodness. Update the src/main/resources/application.properties to match: server.port=9091 server.servlet.context-path=/auth user.oauth.clientId=R2dpxQ3vPrtfgF72 user.oauth.clientSecret=fDw7Mpkk5czHNuSRtmhGmAGL42CaxQB9 user.oauth.redirectUris=http://localhost:9092/login/oauth2/code/ user.oauth.user.username=Shane user.oauth.user.password=abcd This sets the server port, servlet context path, and some default values forthe in-momory, ad hoc generated tokens the server is going to return to the client, as well as for our user’s username and password. In production, you would need to have a bit more of a sophisticated back end for a real authentication server without the hard-coded redirect URIs and usernames and passwords. Update the AuthServerApplication class to add @EnableResourceServer: src/main/java/com/akta/spring/authapp/AuthServerApplication.java 123456789101112131415package com.akta.spring.authserver;import org.springframework.boot.SpringApplication;import org.springframework.boot.autoconfigure.SpringBootApplication;import org.springframework.security.oauth2.config.annotation.web.configuration.EnableResourceServer;@SpringBootApplication@EnableResourceServerpublic class AuthServerApplication { public static void main(String[] args) { SpringApplication.run(AuthServerApplication.class, args); }} Create a new class AuthServerConfig in the same package as your application class. This Spring configuration class enables and configures an OAuth authorization server. src/main/java/com/akta/spring/authserver/AuthServerConfig.java 123456789101112131415161718192021222324252627282930313233343536373839404142434445package com.akta.spring.authserver;import org.springframework.beans.factory.annotation.Value;import org.springframework.context.annotation.Configuration;import org.springframework.security.crypto.password.PasswordEncoder;import org.springframework.security.oauth2.config.annotation.configurers.ClientDetailsServiceConfigurer;import org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerConfigurerAdapter;import org.springframework.security.oauth2.config.annotation.web.configuration.EnableAuthorizationServer;import org.springframework.security.oauth2.config.annotation.web.configurers.AuthorizationServerSecurityConfigurer;@Configuration@EnableAuthorizationServerpublic class AuthServerConfig extends AuthorizationServerConfigurerAdapter { @Value(&quot;${user.oauth.clientId}&quot;) private String ClientID; @Value(&quot;${user.oauth.clientSecret}&quot;) private String ClientSecret; @Value(&quot;${user.oauth.redirectUris}&quot;) private String RedirectURLs; private final PasswordEncoder passwordEncoder; public AuthServerConfig(PasswordEncoder passwordEncoder) { this.passwordEncoder = passwordEncoder; } @Override public void configure (AuthorizationServerSecurityConfigurer oauthServer) throws Exception { oauthServer.tokenKeyAccess(&quot;permitAll()&quot;) .checkTokenAccess(&quot;isAuthenticated()&quot;); } @Override public void configure(ClientDetailsServiceConfigurer clients) throws Exception { clients.inMemory() .withClient(ClientID) .secret(passwordEncoder.encode(ClientSecret)) .authorizedGrantTypes(&quot;authorization_code&quot;) .scopes(&quot;user_info&quot;) .autoApprove(true) .redirectUris(RedirectURLs); }} The AuthServerConfig class is the class that will create and return our JSON web tokens when the client properly authenticates. Create a SecurityConfiguration class: src/main/java/com/akta/spring/authserver/SecurityConfiguration.java 1234567891011121314151617181920212223242526272829303132333435363738394041424344package com.akta.spring.authserver;import org.springframework.beans.factory.annotation.Value;import org.springframework.context.annotation.Bean;import org.springframework.context.annotation.Configuration;import org.springframework.core.annotation.Order;import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;import org.springframework.security.config.annotation.web.builders.HttpSecurity;import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;@Configuration@Order(1)public class SecurityConfiguration extends WebSecurityConfigurerAdapter { @Value(&quot;${user.oauth.user.username}&quot;) private String username; @Value(&quot;${user.oauth.user.password}&quot;) private String password; @Override protected void configure(HttpSecurity http) throws Exception { http.requestMatchers() .antMatchers(&quot;/login&quot;, &quot;/oauth/authorize&quot;) .and() .authorizeRequests() .anyRequest().authenticated() .and() .formLogin().permitAll(); } @Bean public BCryptPasswordEncoder passwordEncoder() { return new BCryptPasswordEncoder(); } @Override protected void configure(AuthenticationManagerBuilder auth) throws Exception { auth.inMemoryAuthentication() .withUser(username) .password(passwordEncoder().encode(password)) .roles(&quot;USER&quot;); } } The SecurityConfiguration class is the class that actually authenticates requests to your authorization server. Notice near the top where it’s pulling in the username and password from the application.properties file. Lastly, create a Java class called UserController: src/main/java/com/akta/spring/authserver/UserController.java 1234567891011121314package com.akta.spring.authserver;import java.security.Principal;import org.springframework.web.bind.annotation.GetMapping;import org.springframework.web.bind.annotation.RestController;@RestControllerpublic class UserController { @GetMapping(&quot;/user/me&quot;) public Principal user(Principal principal) { return principal; }} This file allows the client apps to find out more about the users that authenticate with the server. That’s your authorization server! Not too bad. Spring Boot makes it pretty easay. Four files and a few properties. In a little bit you’ll make it even simpler with Okta. but for the moment, move on to creating a client app you can use to test the auth server. Maven package and then start the authorization server: java -jar target/authserver-0.0.1-SNAPSHOT.jar Wait a bit for it to finish running. The terminal should end with something like this: ... 2019-11-10 19:40:31.036 INFO 24574 --- [ main] o.s.b.w.embedded.tomcat.TomcatWebServer : Tomcat started on port(s): 9091 (http) with context path &apos;/auth&apos; 2019-11-10 19:40:31.051 INFO 24574 --- [ main] c.a.s.authserver.AuthServerApplication : Started AuthServerApplication in 4.772 seconds (JVM running for 5.386) ^C2019-11-10 19:40:45.002 INFO 24574 --- [ Thread-2] o.s.s.concurrent.ThreadPoolTaskExecutor : Shutting down ExecutorService &apos;applicationTaskExecutor&apos; Build Your Client AppBack to use Spring Initializr to create a new Maven project with the following settings: Group: com.okta.spring Artifact: authclient Add three dependencies: Web, Thymeleaf, OAuth2 Client This time you need to add the following dependency to your pom.xml file: &lt;dependency&gt; &lt;groupId&gt;org.thymeleaf.extras&lt;/groupId&gt; &lt;artifactId&gt;thymeleaf-extras-springsecurity5&lt;/artifactId&gt; &lt;version&gt;3.0.4.RELEASE&lt;/version&gt; &lt;/dependency&gt; Rename the src/main/resources/application.properties to application.yml and update it to match the YAML below: src/main/resources/application.yml 123456789101112131415161718192021222324252627server: port: 9092 session: cookie: name: UISESSIONspring: thymeleaf: cache: false security: oauth2: client: registration: custom-client: client-id: R2dpxQ3vPrtfgF72 client-secret: fDw7Mpkk5czHNuSRtmhGmAGL42CaxQB9 client-name: Auth Server scope: user_info provider: custom-provider redirect-uri-template: http://localhost:9092/login/oauth2/code/ client-authentication-method: basic authorization-grant-type: authorization_code provider: custom-provider: token-uri: http://localhost:9091/auth/oauth/token authorization-uri: http://localhost:9091/auth/oauth/authorize user-info-uri: http://localhost:9091/auth/user/me user-name-attribute: name Notice that here you’re configuring the clientId and clientSecret, as well as various URIs for your authentication server. These need to match the values in the other project. Update the AuthClientApplication class to match: 12345678910111213package com.okta.spring.authclient;import org.springframework.boot.SpringApplication;import org.springframework.boot.autoconfigure.SpringBootApplication;@SpringBootApplicationpublic class AuthClientApplication { public static void main(String[] args) { SpringApplication.run(AuthClientApplication.class, args); }} Create a new Java class called WebController: WebController.java 12345678910111213141516171819package com.okta.spring.authclient;import java.security.Principal;import org.springframework.stereotype.Controller;import org.springframework.ui.Model;import org.springframework.web.bind.annotation.RequestMapping;@Controllerpublic class WebController { @RequestMapping(&quot;/securedPage&quot;) public String securedPage(Model model, Principal principal) { return &quot;securedPage&quot;; } @RequestMapping(&quot;/&quot;) public String index(Model model, Principal principal) { return &quot;index&quot;; }} This is the controller that maps incoming requests to your Thymeleaf template files(which you’ll make in a sec). Create another Java class named SecurityConfiguration: SecurityConfiguration.java 1234567891011121314151617package com.okta.spring.authclient;import org.springframework.context.annotation.Configuration;import org.springframework.security.config.annotation.web.builders.HttpSecurity;import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;@Configurationpublic class SecurityConfiguration extends WebSecurityConfigurerAdapter { @Override public void configure(HttpSecurity http) throws Exception { http.antMatcher(&quot;/**&quot;).authorizeRequests() .antMatchers(&quot;/&quot;, &quot;/login**&quot;).permitAll() .anyRequest().authenticated() .and() .oauth2Login(); }} This class defines the Spring Security configuration for your application: allowing all requests on the home path and requiring authentication for all other routes. It also sets up the Spring Boot OAuth login flow. The last files you need to add are the two Thymeleaf template files. A full look at Thymeleaf templating is well beyond the scope of this tutorial, but you can take a look at their website for more info. The templates go in the src/main/resources/templates directory. You’ll notice in the controller above that they’re simply returning strings for the routes. When the Thymeleaf dependencies are included the build, Spring Boot automatically assumes you’re returning the name of the template file from the controllers, and so the app will look in src/main/resources/templates for a file name with the returned string plus .html. Create the home template: src/main/resources/templates/index.html: index.html 1234567891011&lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt; &lt;title&gt;Home&lt;/title&gt; &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot; /&gt; &lt;/head&gt; &lt;body&gt; &lt;h1&gt;Spring Security SSO&lt;/h1&gt; &lt;a href=&quot;securedPage&quot;&gt;Login&lt;/a&gt; &lt;/body&gt; &lt;/html&gt; And the secured template: src/main/resources/templates/securePage.html: securePage.html 1234567891011&lt;!DOCTYPE html&gt; &lt;html xmlns=&quot;http://www.thymeleaf.org&quot;&gt; &lt;head&gt; &lt;title&gt;Secured Page&lt;/title&gt; &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot; /&gt; &lt;/head&gt; &lt;body&gt; &lt;h1&gt;Secured Page&lt;/h1&gt; &lt;span th:text=&quot;${#authentication.name}&quot;&gt;&lt;/span&gt; &lt;/body&gt; &lt;/html&gt; I’ll jest point out this one line: &lt;span th:text=&quot;${#authentication.name}&quot;&gt;&lt;/span&gt; This is the line that will insert the name of the authenticated user. This line is why you needed the org.thymeleaf.extras:thymeleaf-extras-springsecurity5 dependency in the ‘pom.xml’ file. Start the client application after successful maven package. java -jar target/authclient-0.0.1-SNAPSHOT.jar Wait a moment for it to finish. The terminal should end with something like this: 2019-11-10 20:32:39.527 INFO 26402 --- [ main] o.s.b.w.embedded.tomcat.TomcatWebServer : Tomcat started on port(s): 9092 (http) with context path &apos;&apos; 2019-11-10 20:32:39.539 INFO 26402 --- [ main] c.o.s.authclient.AuthClientApplication : Started AuthClientApplication in 4.586 seconds (JVM running for 5.225) Test the Resource ServerNavigate in your browser of choice to your client app at http://localhost:9092/ Click the Login link, and you’ll be directed to the login page: Enter username “Shane” and password “abcd” (from the application.properties file of server). Click Sign In and you’ll be taken to the super fancy securePage.html template that should say “Secured Page” and “Shane”. Understand the code Login with BaiduCreate an app at Baidu Developer Center: http://developer.baidu.com/console#app/project Remember the API Key(client ID) and Secret Key. And set authorization redirect page as: www.baidu.com Here we request: https://openapi.baidu.com/oauth/2.0/authorize?client_id=R6udeb08h9FvRVNng0bKjZuY&amp;redirect_uri=https://www.baidu.com&amp;response_type=code&amp;scope=basic&amp;display=popup After the user click login, authorization code will be responsed as ‘code=xxx’ 经典访问控制模型RBAC：通过用户、角色、客体的偏序关系定义访问控制。数学上通过BLP模型定义了三个安全性。 ABAC采用属性级别的访问控制，目前不如RBAC好用，即比较考验管理员的能力，但是学术界比较推崇。","link":"/Nov-22nd-OAuth-project-research/"},{"title":"Spring Cloud microservices registration and discovery","text":"Spring Cloud Eureka 组件详解。 PrerequisitesJDK 1.8IDETomcat 初探：Spring Boot 启动 Eureka Server 和 Eureka Client微服务The first one is the server which needs only Eureka Server dependency.Spring Initializr &gt; (Repo location chooses: https://start.aliyun.com/) Generate a Maven Project &gt; Group: com.ustb &gt; Artifact: service-registration-and-discovery-service &gt; Dependencies: Eureka Server Then second one(a client) requires both Eureka Server and Eureka Discovery Client dependencies. 开启一个 Eureka 服务注册简单地使用注解就可以了，另外需要在application.properties中进行配置 与注册中心对话1234567891011121314151617181920212223242526272829303132333435package com.example.serviceregistrationanddiscoveryclient;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.boot.SpringApplication;import org.springframework.boot.autoconfigure.SpringBootApplication;import org.springframework.cloud.client.ServiceInstance;import org.springframework.cloud.client.discovery.DiscoveryClient;import org.springframework.cloud.client.discovery.EnableDiscoveryClient;import org.springframework.web.bind.annotation.PathVariable;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RestController;import java.util.*;@SpringBootApplication@EnableDiscoveryClientpublic class DemoApplication { public static void main(String[] args) { SpringApplication.run(DemoApplication.class, args); }}@RestControllerclass ServiceInstanceRestController { @Autowired private DiscoveryClient discoveryClient; @RequestMapping(&quot;/service-instances/{applicationName}&quot;) public List&lt;ServiceInstance&gt; serviceInstancesByApplicationName( @PathVariable String applicationName) { return this.discoveryClient.getInstances(applicationName); }} 这里通过注解EnableDiscoveryClient来继承注册微服务的接口 在类中通过注解@RequestMapping(“/service-instances/{applicationName}”) 提供该client的访问接口 提供服务微服务有两种方法注册到 Eureka 中心，一种是本地启动的Spring Boot程序添加注解 @EnableDiscoveryClient；第二种是在配置文件中添加 defaultZone: 后加Eureka中心的地址（http://localhost:8761/eureka） 要想从Eureka中心获取可用的微服务，默认的XML方式解析起来比较麻烦。我们可以通过在Eureka里写一个 discoveryClient 的 controller来实现。配置里写 eureka.client.fetch-registry=true。但同时又不想 eureka server 自己也被其他服务发现，这时需要配置 eureka.client.register-with-eureka=false 注意：Spring Cloud Gateway 依赖和 Spring Web不能同时添加 学习：源码启动 Eureka Server， Eureka Client 和微服务安装1. IDEA选2019.2-2020.1 的版本 ； jdk1.8 ; Tomcat 8/92. 注册码云帐号，然后克隆项目：1git clone -b web3 --single-branch https://gitee.com/Shane1501/eureka.git IDEA 打开项目确认已切换到 web3 分支 3. 配置gradle把项目根目录下的 build.gradle.IDEA版本号（我是 build.gradle.IDEA2019.3） 拷贝一份新的改为 build.gradle 1cp build.gradle.IDEA2019.3 build.gradle （可以选用用阿里云镜像，把下面文件保存成 init.gradle 放到 USER 目录下的 .gradle 文件夹里） 123456789101112131415161718192021222324252627282930313233allprojects{ repositories { def ALIYUN_REPOSITORY_URL = &apos;https://maven.aliyun.com/repository/public/&apos; def ALIYUN_JCENTER_URL = &apos;https://maven.aliyun.com/repository/jcenter/&apos; def ALIYUN_GOOGLE_URL = &apos;https://maven.aliyun.com/repository/google/&apos; def ALIYUN_GRADLE_PLUGIN_URL = &apos;https://maven.aliyun.com/repository/gradle-plugin/&apos; all { ArtifactRepository repo -&gt; if(repo instanceof MavenArtifactRepository){ def url = repo.url.toString() if (url.startsWith(&apos;https://repo1.maven.org/maven2/&apos;)) { project.logger.lifecycle &quot;Repository ${repo.url} replaced by $ALIYUN_REPOSITORY_URL.&quot; remove repo } if (url.startsWith(&apos;https://jcenter.bintray.com/&apos;)) { project.logger.lifecycle &quot;Repository ${repo.url} replaced by $ALIYUN_JCENTER_URL.&quot; remove repo } if (url.startsWith(&apos;https://dl.google.com/dl/android/maven2/&apos;)) { project.logger.lifecycle &quot;Repository ${repo.url} replaced by $ALIYUN_GOOGLE_URL.&quot; remove repo } if (url.startsWith(&apos;https://plugins.gradle.org/m2/&apos;)) { project.logger.lifecycle &quot;Repository ${repo.url} replaced by $ALIYUN_GRADLE_PLUGIN_URL.&quot; remove repo } } } maven { url ALIYUN_REPOSITORY_URL } maven { url ALIYUN_JCENTER_URL } maven { url ALIYUN_GOOGLE_URL } maven { url ALIYUN_GRADLE_PLUGIN_URL } }} 导入 4. 配置 Tomcat在Tomcat启动时添加 12-Deureka.waitTimeInMsWhenSyncEmpty=0-Deureka.numberRegistrySyncRetries=0 以加快 eureka 启动速度。 或直接修改 eureka-server/src/main/resources/eureka-server.properties 文件，取消配置注释 12eureka.waitTimeInMsWhenSyncEmpty=0eureka.numberRegistrySyncRetries=0 也可达到同样效果。 配置war包exploded模式可以方便运行时实时更新配置。 6. 点击启动Tomcat，会弹出eureka界面源码编译即告完成。 Eureka 源码解析服务发现组件 package com.netflix.discovery v1.1版本DiscoveryClient.java 12345678910111213141516/** * Makes remote calls with the corresponding action(register,renew etc). * * @param action * the action to be performed on eureka server. * * Try the fallback servers in case of problems communicating to * the primary one. * * @return ClientResponse the HTTP response object. * @throws Throwable * on any error. */private ClientResponse makeRemoteCall(Action action, int serviceUrlIndex) throws Throwable { ......} 接收端： package com.netflix.eureka;RemoteRegionRegistry.java 123public RemoteRegionRegistry(String regionName, URL remoteRegionURL) { ......} 那么，一个 InstanceInfo 实例是如何产生的呢？com/netflix/eureka/ExampleEurekaService.java 143 InstanceInfo instanceInfo = new EurekaConfigBasedInstanceInfoProvider(instanceConfig).get(); com/netflix/appinfo/providers/EurekaConfigBasedInstanceInfoProvider.java 1234567891011121314151617181920212284 builder.setNamespace(config.getNamespace()) .setInstanceId(instanceId) .setAppName(config.getAppname()) .setAppGroupName(config.getAppGroupName()) .setDataCenterInfo(config.getDataCenterInfo()) .setIPAddr(config.getIpAddress()) .setHostName(defaultAddress) .setPort(config.getNonSecurePort()) .enablePort(PortType.UNSECURE, config.isNonSecurePortEnabled()) .setSecurePort(config.getSecurePort()) .enablePort(PortType.SECURE, config.getSecurePortEnabled()) .setVIPAddress(config.getVirtualHostName()) .setSecureVIPAddress(config.getSecureVirtualHostName()) .setHomePageUrl(config.getHomePageUrlPath(), config.getHomePageUrl()) .setStatusPageUrl(config.getStatusPageUrlPath(), config.getStatusPageUrl()) .setASGName(config.getASGName()) .setHealthCheckUrls(config.getHealthCheckUrlPath(), config.getHealthCheckUrl(), config.getSecureHealthCheckUrl());125 instanceInfo = builder.build(); instanceInfo.setLeaseInfo(leaseInfoBuilder.build()); 而config的来源则是com/netflix/eureka/ExampleEurekaService.java 161 DynamicPropertyFactory configInstance = com.netflix.config.DynamicPropertyFactory.getInstance(); com/netflix/config/DynamicPropertyFactory.java 12279 initWithConfigurationSource(configFromManager);280 initializedWithDefaultConfig = !ConfigurationManager.isConfigurationInstalled(); jsp修改后不立即更新，应改为exploded war报错： 1Artifact Gradle : com.netflix.eureka : eureka-server-1.9.26-SNAPSHOT.war (exploded): Error during artifact deployment. See server log for details. 获取 eureka/v2/apps/{appId} 下的xml解析com.netflix.eureka.registry.ResponseCacheImpl.java 1private final ConcurrentMap&lt;Key, Value&gt; readOnlyCacheMap 12payload = readWriteCacheMap.get(key);readOnlyCacheMap.put(key, payload); 如果想往 app 的xml里添加字段（原有字段为appName和instances），即所链接的 合约地址列表 需要从 readWriteCacheMap 里读取，然后往 readOnlyCacheMap 里 put payload（此payload里包含app信息） generatePayload 里 1payload = getPayLoad(key, registry.getApplication(key.getName())); getPayLoad 函数对对象文件做一个 对象 到string的解析，而解析的对象就是 registry.getApplication(key.getName()) 里面的解析用converter写在Converters.java 函数里 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071/** * Serialize/deserialize {@link Applications} object types. */public static class ApplicationConverter implements Converter { private static final String ELEM_NAME = &quot;name&quot;; /* * (non-Javadoc) * * @see * com.thoughtworks.xstream.converters.ConverterMatcher#canConvert(java * .lang.Class) */ public boolean canConvert(@SuppressWarnings(&quot;rawtypes&quot;) Class clazz) { return Application.class == clazz; } /* * (non-Javadoc) * * @see * com.thoughtworks.xstream.converters.Converter#marshal(java.lang.Object * , com.thoughtworks.xstream.io.HierarchicalStreamWriter, * com.thoughtworks.xstream.converters.MarshallingContext) */ @Override public void marshal(Object source, HierarchicalStreamWriter writer, MarshallingContext context) { Application app = (Application) source; writer.startNode(ELEM_NAME); writer.setValue(app.getName()); writer.endNode(); for (InstanceInfo instanceInfo : app.getInstances()) { writer.startNode(NODE_INSTANCE); context.convertAnother(instanceInfo); writer.endNode(); } } /* * (non-Javadoc) * * @see * com.thoughtworks.xstream.converters.Converter#unmarshal(com.thoughtworks * .xstream.io.HierarchicalStreamReader, * com.thoughtworks.xstream.converters.UnmarshallingContext) */ @Override public Object unmarshal(HierarchicalStreamReader reader, UnmarshallingContext context) { Application app = new Application(); while (reader.hasMoreChildren()) { reader.moveDown(); String nodeName = reader.getNodeName(); if (ELEM_NAME.equals(nodeName)) { app.setName(reader.getValue()); } else if (NODE_INSTANCE.equals(nodeName)) { app.addInstance((InstanceInfo) context.convertAnother(app, InstanceInfo.class)); } reader.moveUp(); } return app; }} Renew 操作InstanceResource.java 里的 Renew 接口 123@PUTpublic Response renewLease( boolean isSuccess = registry.renew(app.getName(), id, isFromReplicaNode); PeerAwareInstanceRegistryImpl.java 1234567public boolean renew(final String appName, final String id, final boolean isReplication) { if (super.renew(appName, id, isReplication)) { replicateToPeers(Action.Heartbeat, appName, id, null, null, isReplication); return true; } return false; } AbstractInstanceRegistry.java 12public boolean renew(String appName, String id, boolean isReplication) { ... Status Update 操作InstanceResource.java 1234567@PUT@Path(&quot;status&quot;)public Response statusUpdate( boolean isSuccess = registry.statusUpdate(app.getName(), id, InstanceStatus.valueOf(newStatus), lastDirtyTimestamp, &quot;true&quot;.equals(isReplication)); 目前的状态数InstanceInfo.java 1234567891011121314151617181920public enum InstanceStatus { UP, // Ready to receive traffic DOWN, // Do not send traffic- healthcheck callback failed STARTING, // Just about starting- initializations to be done - do not // send traffic OUT_OF_SERVICE, // Intentionally shutdown for traffic UNKNOWN; public static InstanceStatus toEnum(String s) { if (s != null) { try { return InstanceStatus.valueOf(s.toUpperCase()); } catch (IllegalArgumentException e) { // ignore and fall through to unknown logger.debug(&quot;illegal argument supplied to InstanceStatus.valueOf: {}, defaulting to {}&quot;, s, UNKNOWN); } } return UNKNOWN; }} PeerAwareInstanceRegistryImpl.java 12345678910@Overridepublic boolean statusUpdate(final String appName, final String id, final InstanceStatus newStatus, String lastDirtyTimestamp, final boolean isReplication) { if (super.statusUpdate(appName, id, newStatus, lastDirtyTimestamp, isReplication)) { replicateToPeers(Action.StatusUpdate, appName, id, null, newStatus, isReplication); return true; } return false;} AbstractInstanceRegistry.java 12345@Override public boolean statusUpdate(String appName, String id, InstanceStatus newStatus, String lastDirtyTimestamp, boolean isReplication) { ...... v1.9.26 版本服务发现模块 com.netflix.discovery服务发现模块通过 Jersey 框架实现了 RESTful 风格访问的 http 客户端，定义在 eureka-client/src/main/java/com/netflix/discovery/DiscoveryClient.java 中。 RESTful(REpresentational State Transfer, 表现层状态转移) 是一种架构风格。它不再使用以往的 php, jsp 架构，而是将前后端明确分工，前端（Web端、客户端、app和第三方开发者）负责渲染和附带处理简单的商务逻辑，后端（Server端）负责处理资源和数据，前后端通过统一的API接口调用来进行交互，接口Uri面向资源为核心进行设计而不是操作。 DiscoveryClient 的职责主要包括：a) 注册微服务实例到 Eureka Serverb) 向 Eureka Server 更新微服务租约c) 服务关闭的时候进行租约取消d) 查询注册到 Eureka Server 中的服务/实例信息 Eureka 自身是可以作为一个微服务实例注册到自己的列表中的，通过配置文件中选项eureka.client.register-with-eureka为true或者false来决定是否注册到自己的列表中。 三级缓存 全量拉取与增量拉取 整体架构设计采用 MVC 模式Model：业务逻辑层，包括 InstanceInfo.java EurekaServerConfig.java eureka-core的registry文件夹下的InstanceRegistry.javaView：bootstrapControl：各种resource文件，包括Application(s)Resource.java Instance(s)Resource.java Register操作为例：接收Register请求的处理类有ApplicationResource.java下的 addInstanceAbstractInstanceRegistry.java 下的 register 函数 而发送Register请求的是 DiscoveryClient.java 下的 register 873 httpResponse = eurekaTransport.registrationClient.register(instanceInfo); EurekaHttpClientDecorator.java 1234567891011121314@Overridepublic EurekaHttpResponse&lt;Void&gt; register(final InstanceInfo info) { return execute(new RequestExecutor&lt;Void&gt;() { @Override public EurekaHttpResponse&lt;Void&gt; execute(EurekaHttpClient delegate) { return delegate.register(info); } @Override public RequestType getRequestType() { return RequestType.Register; } });} 调用的是 EurekaHttpClient 下的 register 函数。 java/com/netflix/discovery/shared/transport/jersey/AbstractJerseyEurekaHttpClient.java 做的一些尝试（Deprecated）为 Application 类添加一个服务提供商 party 的步骤 在 com.netflix.discovery.shared.Application 类定义中添加 String party 属性，并添上 getter setter toString 方法 在 com.netflix.discovery.converters.EurekaJacksonCodec 类中定义要解析的属性名：public static final String NODE_PARTY = “party”; 在 ApplicationSerializer 子类中添加对 party 属性的序列化处理：jgen.writeObjectField(NODE_PARTY, value.getParty()); 在 ApplicationDeserializer 子类中添加从json到对象的反序列化处理： 123456enum ApplicationField { NAME(ELEM_NAME), INSTANCE(ELEM_INSTANCE), PARTY(NODE_PARTY);}case PARTY: application.setParty(jp.getText()); break; 在 com.netflix.discovery.converters.Converters 类的 ApplicationConverter 子类中定义：public static final String NODE_PARTY = “party”; 在 marshal 方法添加： 123writer.startNode(NODE_PARTY);writer.setValue(app.getParty());writer.endNode(); 为了 XStream 解析对象至 str 使用。 unmarshal方法： 12} else if (NODE_PARTY.equals(nodeName)) { app.setParty(reader.getValue()); 将 str 解析到app中的对象 在 com.netflix.discovery.converters.jackson.serializer.ApplicationXmlDeserializer 类中 deserialize 方法中添加：12} else if (&quot;party&quot;.equals(fieldName)) { party = jp.getValueAsString(); 在测试过程中使用XStreamXml 序列化后 party = null， JacksonXml 反序列化的时候，由于 party 为空，传给 writeText(String text, boolean isAttribute) 的参数 text 为空，而后面又调用int length = text.length();导致抛出 NullPointerException. 解决办法，重写Application类的getter和setter为： 1234567891011public String getParty() { if (null == party) { party = &quot;&quot;; } return party;}public void setParty(String party) { if (null == party) return ; this.party = party;} 多级缓存机制Eureka Server 使用registry, readWriteCacheMap, readOnlyCacheMap 三个变量保存服务注册信息。默认情况下，定时任务每 30s 将 readWriteCacheMap 同步至 readOnlyCacheMap，每 60s 清理清理超过 90s 未续约的节点。Jsp UI 从 registry 更新服务注册信息Eureka Client 使用 localRegionApps 和 upServerListZoneMap 两个变量保存服务注册信息，每 30s 从 readOnlyCacheMap 更新服务注册信息。 微服务实例对自己的四种接口操作Register, Status Update, Renew 和 Cancel 四种操作。接口都写在 eureka-core/src/main/java/com/netflix/eureka/registry/resources/InstanceResource.java四个操作都是直接更新 registry Register注册动作Renew 续约Contract status update 操作的算法描述输入：服务名appName，服务实例信息instanceInfo，合约参与方contractParty，时间戳 timestamp输出：true/false/异常 检查当前实例信息的状态status是否为 UP，若不满足，则返回false退出;若满足条件，则继续下一步； 将服务app名称作为 key 查找注册信息，返回类型为 Map","link":"/Nov-27th-Spring-Cloud-microservices-management-Nacos/"},{"title":"Managing Java projects using Gradle or Maven","text":"Are you tired with downloading and managing dozens of jar files in your Java projects? Or you are confused by running and reading a large project source code built by Gradle or Maven. You are not alone. MavenMaven was born for solving such problems by making jar files management automatically. Let’s first install it by 1sudo pacman -Syu maven Then we create a simple Java project. To configure the proxy, create a settings.xml file under the folder ~/.m2/ and add the following: 123456789101112&lt;settings&gt; &lt;proxies&gt; &lt;proxy&gt; &lt;active&gt;true&lt;/active&gt; &lt;protocol&gt;http&lt;/protocol&gt; &lt;username&gt;&lt;username-optional&gt;&lt;/username&gt; &lt;password&gt;&lt;password-optional&gt;&lt;/password&gt; &lt;host&gt;&lt;hostname&gt;&lt;/host&gt; &lt;port&gt;&lt;port&gt;&lt;/port&gt; &lt;/proxy&gt; &lt;/proxies&gt;&lt;/settings&gt; Managing modules with parent pomparent project pom example 12345678910111213141516171819&lt;packaging&gt;pom&lt;/packaging&gt; &lt;modules&gt; &lt;module&gt;module-A&lt;/module&gt; &lt;module&gt;module-B&lt;/module&gt; &lt;module&gt;module-C&lt;/module&gt; &lt;/modules&gt;&lt;groupId&gt;edu.ustb&lt;/groupId&gt;&lt;artifactId&gt;SPESC-contract-execution-service&lt;/artifactId&gt;&lt;version&gt;${revision}&lt;/version&gt;&lt;description&gt;Spring Boot service project for executing SPESC Contract&lt;/description&gt; &lt;properties&gt; &lt;java.version&gt;1.8&lt;/java.version&gt; &lt;maven.compiler.source&gt;1.8&lt;/maven.compiler.source&gt; &lt;maven.compiler.target&gt;1.8&lt;/maven.compiler.target&gt; &lt;revision&gt;0.0.7-SNAPSHOT&lt;/revision&gt; &lt;/properties&gt; One of the module’s pom file 12345678&lt;parent&gt; &lt;artifactId&gt;SPESC-contract-execution-service&lt;/artifactId&gt; &lt;groupId&gt;edu.ustb&lt;/groupId&gt; &lt;version&gt;${revision}&lt;/version&gt;&lt;/parent&gt;&lt;groupId&gt;edu.ustb.springbootcontract&lt;/groupId&gt;&lt;artifactId&gt;module-A&lt;/artifactId&gt; Caution that the module must be set as ${revision}. An error will be thrown if one of the module set the accurate version like 0.0.7-SNAPSHOT. GradleBuild the project: under the project root, gradlew exsits, run 1./gradlew build","link":"/Nov-5th-2019-Managing-Java-project-using-Maven/"},{"title":"Serving Web Content with Spring MVC","text":"Spring MVC is one of the successful implementations of MVC design pattern, which is widely used in Java Web Development. First Example of Spring MVCOur goalsI will build an application that has a static home page, and also will accept HTTP GET requests at: http://localhost:9001/greeting and respond with a web page displaying HTML. The body of the HTML contains a greeting: &quot;Hello, World!&quot; You can customize the greeting with an optional name parameter in the query string: http://localhost:9001/greeting?name=User The name parameter value overrides the default value of “World” and is reflected in the response: &quot;Hello, User!&quot; Prerequites About 15 minutes A favorite text editor or IDE JDK 1.8 or later Maven 3.2 + Build with Mavenpom.xml 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt; &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt; &lt;parent&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt; &lt;version&gt;2.1.10.RELEASE&lt;/version&gt; &lt;relativePath/&gt; &lt;!-- lookup parent from repository --&gt; &lt;/parent&gt; &lt;groupId&gt;com.example&lt;/groupId&gt; &lt;artifactId&gt;springmvc&lt;/artifactId&gt; &lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt; &lt;name&gt;demo&lt;/name&gt; &lt;description&gt;Demo project for Spring Boot&lt;/description&gt; &lt;properties&gt; &lt;java.version&gt;1.8&lt;/java.version&gt; &lt;/properties&gt; &lt;dependencies&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-thymeleaf&lt;/artifactId&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-devtools&lt;/artifactId&gt; &lt;scope&gt;runtime&lt;/scope&gt; &lt;optional&gt;true&lt;/optional&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt; &lt;scope&gt;test&lt;/scope&gt; &lt;/dependency&gt; &lt;/dependencies&gt; &lt;build&gt; &lt;plugins&gt; &lt;plugin&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt; &lt;/plugin&gt; &lt;/plugins&gt; &lt;/build&gt;&lt;/project&gt; Build with your IDEHere I use VSCode - Java Delopment Pack extension with pressing Ctrl+Shift+P to call Spring Initializer. Checkout ‘Spring Web’ and ‘thymeleaf’ dependency. Create a web controllerIn Spring’s approach to building web sites, HTTP requests are handled by a controller. You can easily identify these requests by the @Controller annotation. In the following example, the GreetingController handles GET requests for “/greeting” by returning the name of a View, in this case, “demo”. A View is responsible for rendering the HTML content: src/main/java/com/example/springmvc/DemoController.java 123456789101112131415161718package com.example.springmvc;import org.springframework.stereotype.Controller;import org.springframework.ui.Model;import org.springframework.web.bind.annotation.GetMapping;import org.springframework.web.bind.annotation.RequestParam;@Controllerpublic class DemoController { @GetMapping(&quot;/greeting&quot;) public String greeting(@RequestParam(name=&quot;name&quot;, required=false, defaultValue=&quot;World&quot;) String name, Model model) { model.addAttribute(&quot;name&quot;, name); return &quot;demo&quot;; } } This controller is concise and simple, but there’s plenty going on. Let’s break it down step by step. The @GetMapping annotation ensures that HTTP GET requests to /greeting are mapped to the greeting() method. @RequestParam binds the value of the query String parameter ‘name’ into the name parameter of the greeting() method. This query String parameter is not required; if it is absent in the request, the defaultValue of “World” is used. The value of the name parameter is added to a Model object, ultimately making it accessible to the view template. The implementation of the method body relies on a ‘view technology’, in this case ‘Thymeleaf’, to perform server-side rendering of the HTML. Thymeleaf parses the demo.html template below and evaluates the th:text expression to render the value of the ${name} parameter that was set in the controller. src/main/resources/templates/demo.html 12345678910&lt;!DOCTYPE HTML&gt;&lt;html xmlns:th=&quot;http://www.thymeleaf.org&quot;&gt;&lt;head&gt; &lt;title&gt;Getting Started: Serving Web Content&lt;/title&gt; &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot; /&gt;&lt;/head&gt;&lt;body&gt; &lt;p th:text=&quot;&apos;Hello, &apos; + ${name} + &apos;!&apos;&quot; /&gt;&lt;/body&gt;&lt;/html&gt; Developing web appsA common feature of developing web apps is coding a change, restarting your app, and refreshing the browser to view the change. This entire process can eat up a lot of time. To speed up the cycle of things, Spring Boot comes with a handy module known as ‘spring-boot-devtools’: Enable hot swapping Switches template engines to disable caching Enable LiveReload to refresh browser automatically Other reasonable defaults based on development instead of production Make the application executableAlthough it is possible to package this service as a traditional WAR file for development to an external application server, the simpler approach demonstrated below creates a standalone application. You pakcage everything in a single, executable JAR file, driven by a good old Java main() method. Along the way, you use Spring’s support for embedding the Tomcat servlet container as the HTTP runtime, instead of deploying to an external instance. src/main/java/com/example/springmvc/DemoApplication.java 12345678910111213package com.example.springmvc;import org.springframework.boot.SpringApplication;import org.springframework.boot.autoconfigure.SpringBootApplication;@SpringBootApplicationpublic class DemoApplication { public static void main(String[] args) { SpringApplication.run(DemoApplication.class, args); }} @SpringBootApplication is a convenience annotation that adds all of the following: @Configuration: Tags the class as a source of bean definitions for the application context. @EnableAutoConfiguration: Tells Spring Boot to start adding beans based on classpath settings, other beans, and various property settings. For example, if spring-webmvc is on the classpath, this anootation flags the application as a web application and activates key behaviors, such as setting up a DispatcherServlet. @ComponentScan: Tells Spring to look for other components, configurations, and services in the hello package, letting it find the controllers. The main() method uses Spring Boot’s SpringApplication.run() method to launch an application. Did you notice that was not a single line of XML? There is no web.xml file, either. This web application is 100% pure Java and you did not have to deal with configuring any plumbing or infrastructure. Build an executable JARYou can run the application from the command line with Gradle or Maven. You can also build a single executable JAR file that contains all the neccessary dependencies, classes and resources and run that. Building an executable jar so makes it easy to ship, version, and deploy the service as an application throughout the development lifecycle, across different environments, and so forth. If you use Maven, you can run the application by using ./mvnw spring-boot:run. Alternatively, you can build the JAR file with ./mvnw clean package and then run the JAR file, as follows: java -jar target/springmvc-0.0.1-SNAPSHOT.jar Test the AppNow that the web site is running, visit http://localhost:9001/greeting, where you see: Provide a name query string parameter with http://localhost:9001/greeting?name=User. Notice how the message changes from “Hello, World!” to “Hello, User!”: This change demonstrates that the @RequestParam arrangement in GreetingController is working as expected. The name parameter has been given a default value of “World”, but can always be explicitly overridden through the query string. Add a Home PageStatic resources, like HTML or JavaScript or CSS, can easily be served from your Spring Boot application just by dropping them into the right place in the source code. By default Spring Boot serves static content from resources in the classpath at “/static” (or “/public”). The index.html resource is special because it is used as a “welcome page” if it exists, which means it will be served up as the root resource, i.e. at http://localhost:9001/ in our example. So create this file src/main/resources/static/index.html 12345678910&lt;!DOCTYPE HTML&gt;&lt;html&gt;&lt;head&gt; &lt;title&gt;Getting Started: Serving Web Content&lt;/title&gt; &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot; /&gt;&lt;/head&gt;&lt;body&gt; &lt;p&gt;Get your greeting &lt;a href=&quot;/greeting&quot;&gt;here&lt;/a&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt; and when you restart the app you will see the HTML at http://localhost:9001/ SummaryCongradulations! You have just developed a web page using Spring. ControllerIn Spring, if you want a class to be a controller you can use the annotation @RestController for this class. And in this class, use annotation @RequestMapping to show this is an RESTful API function. HTTP报文如何解析到Controller方法？Spring MVC框架的底层是Servlet。Servlet是一个标准，主要规定了处理请求与响应的service接口，在service接口中只需要实现业务逻辑即可。而Servlet由Servlet容器负责管理与运行，常见的Servlet容器有Tomcat，Jetty等。以Tomcat中的Servlet接口定义为例，如下所示： 由于Servlet只规定了接口，所以通常情况下不会直接继承Servlet进行实现，而是通过继承HttpServlet抽象类来有选择地覆盖相应的方法。而MVC更加方便，甚至不会去手动实现Servlet，只需要通过注解标注出Controller、Service、Model类即可，更加提高了开发的效率。 View: JSPJSP是动态执行文件，由Tomcat生成java servlet执行文件。jsp中的内容被放到 _jspService() 方法体的 try...catch 代码块里执行。一个JSP文件的例子如下所示： status.jsp 12345678&lt;li class=&quot;one&quot;&gt;&lt;a href=&quot;jsp/status.jsp&quot;&gt;Home&lt;/a&gt;&lt;/li&gt;&lt;div class=&quot;sectionTitle&quot;&gt;Instance Info&lt;/div&gt;&lt;table id=&apos;instanceInfo&apos; class=&quot;stripeable&quot;&gt; &lt;tr&gt;&lt;th&gt;Name&lt;/th&gt;&lt;th&gt;Value&lt;/th&gt;&lt;/tr&gt; &lt;tr&gt;&lt;td&gt;ipAddr&lt;/td&gt;&lt;td&gt;192.168.1.104&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;status&lt;/td&gt;&lt;td&gt;UP&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt; 那么，当前 Eureka Server 的 InstanceInfo 是如何获取的呢？status.jsp 1146 StatusInfo statusInfo = (new StatusUtil(serverContext)).getStatusInfo(); StatusUtil.java 129 this.instanceInfo = server.getApplicationInfoManager().getInfo(); ApplicationInfoManager.java 123456758 private static ApplicationInfoManager instance = new ApplicationInfoManager(null, null, null);@Injectpublic ApplicationInfoManager(EurekaInstanceConfig config, InstanceInfo instanceInfo, OptionalArgs optionalArgs) { this.instanceInfo = instanceInfo; ......} 调试后验证了，这里的instanceInfo一开始初始化是null，之后在BootStrap.java中才正式通过Builder初始化 @DeprecatedDiscoveryManager.java 12345678910111213141516171819/** * Initializes the &lt;tt&gt;Discovery Client&lt;/tt&gt; with the given configuration. * * @param config * the instance info configuration that will be used for * registration with Eureka. * @param eurekaConfig the eureka client configuration of the instance. */public void initComponent(EurekaInstanceConfig config, EurekaClientConfig eurekaConfig, AbstractDiscoveryClientOptionalArgs args) { this.eurekaInstanceConfig = config; this.eurekaClientConfig = eurekaConfig; if (ApplicationInfoManager.getInstance().getInfo() == null) { // Initialize application info ApplicationInfoManager.getInstance().initComponent(config); } InstanceInfo info = ApplicationInfoManager.getInstance().getInfo(); ......} ApplicationInfoManager.java 12345678public void initComponent(EurekaInstanceConfig config) { try { this.config = config; this.instanceInfo = new EurekaConfigBasedInstanceInfoProvider(config).get(); } catch (Throwable e) { throw new RuntimeException(&quot;Failed to initialize ApplicationInfoManager&quot;, e); }} EurekaBootStrap.java 12345161 EurekaInstanceConfig instanceConfig = isCloud(ConfigurationManager.getDeploymentContext()) ? new CloudInstanceConfig() : new MyDataCenterInstanceConfig(); // 调试发现用的是 MyDataCenterInstanceConfig()165 applicationInfoManager = new ApplicationInfoManager( instanceConfig, new EurekaConfigBasedInstanceInfoProvider(instanceConfig).get()); EurekaConfigBasedInstanceInfoProvider.java 123456789101112131415161718builder.setNamespace(config.getNamespace()) .setInstanceId(instanceId) .setAppName(config.getAppname()) .setAppGroupName(config.getAppGroupName()) .setDataCenterInfo(config.getDataCenterInfo()) .setIPAddr(config.getIpAddress()) .setHostName(defaultAddress) .setPort(config.getNonSecurePort()) .enablePort(PortType.UNSECURE, config.isNonSecurePortEnabled()) .setSecurePort(config.getSecurePort()) .enablePort(PortType.SECURE, config.getSecurePortEnabled()) .setVIPAddress(config.getVirtualHostName()) .setSecureVIPAddress(config.getSecureVirtualHostName()) .setHomePageUrl(config.getHomePageUrlPath(), config.getHomePageUrl()) .setStatusPageUrl(config.getStatusPageUrlPath(), config.getStatusPageUrl()) .setASGName(config.getASGName()) .setHealthCheckUrls(config.getHealthCheckUrlPath(), config.getHealthCheckUrl(), config.getSecureHealthCheckUrl()); 于是我们在builder. 后面加入 .setAccountAddress(accountAddress) 在 InstanceInfo.java 中的 Builder 类中添加 1234public Builder setAccountAddress(String accountAddress) { result.accountAddress = accountAddress; return this;} 继续调试发现 EurekaBootStrap.java 这段代码速度很慢 12214 // Copy registry from neighboring eureka node215 int registryCount = registry.syncUp();","link":"/Nov-8th-Serving-Web-Content-with-Spring-MVC/"},{"title":"FreeBSD survival manual","text":"BSD is a very stable and secure UNIX operating system. BUT:(On Jan 11th 2020) FreeBSD doesn’t well support Docker. This disadvantage will deter the testing procedure and deployment procedure. Spending lots of time learning this OS is not suggested now. If there is some time left, going to explore Kali Linux, Black Arch, RHEL, MacOS is more valuable. Virtual machine environmentTry FreeBSD virtual machine on Linux. Check kvm support12lsmod|grep kvmlsmod|grep virtio If not started, use sudo modprobe to load module. 1234wget http://mirrors.ustc.edu.cn/freebsd/releases/VM-IMAGES/12.0-RELEASE/amd64/Latest/FreeBSD-12.0-RELEASE-amd64.qcow2.xzcp FreeBSD-12.0-RELEASE-amd64.raw.xz FreeBSD-12.0-RELEASE-amd64-copy.raw.xzxz -d FreeBSD-12.0-RELEASE-amd64.raw.xzxz -d FreeBSD-12.0-RELEASE-amd64-copy.raw.xz create a shell scrpt for starting two virtual machines: 1234567891011121314151617qemu-system-x86_64 -enable-kvm \\-m 1G -name FreeBSD \\-drive file=FreeBSD-12.0-RELEASE-amd64.raw,index=1,media=disk,format=raw \\-chardev socket,path=/tmp/port1,server,nowait,id=port1-char \\-device virtio-serial \\-device virtserialport,id=port1,chardev=port1-char,name=org.freebsd.port.1 \\-net user,hostfwd=tcp::10022-:22 \\-net nicqemu-system-x86_64 -enable-kvm \\-m 1G -name FreeBSD2 \\-drive file=FreeBSD-12.0-RELEASE-amd64-copy.raw,index=2,media=disk,format=raw \\-chardev socket,path=/tmp/port2,server,nowait,id=port2-char \\-device virtio-serial \\-device virtserialport,id=port2,chardev=port2-char,name=org.freebsd.port.2 \\-net user,hostfwd=tcp::20022-:22 \\-net nic Link with the command: 12ssh -p10022 wsd@localhostssh -p20022 wsd@localhost Configure pkg and ports source123sumkdir -p /usr/local/etc/pkg/reposvi /usr/local/etc/pkg/repos/FreeBSD.conf FreeBSD.conf 123FreeBSD: { url: &quot;pkg+http://mirrors.ustc.edu.cn/freebsd-pkg/${ABI}/quarterly&quot;,} 1pkg update -f 1vi /etc/make.conf make.conf 1234MASTER_SITE_OVERRIDE?=\\http://mirrors.ustc.edu.cn/freebsd-ports/distfiles/${DIST_SUBDIR}/\\http://mirrors.163.com/freebsd/ports/distfiles/\\http://mirrors.aliyun.com/freebsd/ports/distfiles/ 12portsnap fetchportsnap extract Portsnap updating command is portsnap update Once done you will find new directory tree under /usr/ports/.","link":"/Sep-11th-FreeBSD-survival-manual/"},{"title":"Raspberry Pi parallel computing and cluster computing experiment","text":"We are going to use 4 Raspberry Pis to build a parallel computing cluster based on MPI protocol. As usual, we are going to install Raspbian OS for every RPi machine: Building programming environmentRaspbian Installation127za x 2019-09-26-raspbian-buster.zipdd bs=4M if=2019-07-10-raspbian-buster.img of=/dev/sdX status=progress conv=fsync To enable SSH, placing a file name ssh without any extension on the boot partition(rather than /boot/ on rootfs partition) of SD card. Network ProxyEdit ~/.bashrc 12export http_proxy=&quot;http://USER:PASS@IP_ADDRESS:PORT_NUM&quot;export https_proxy=&quot;http://USER:PASS@IP_ADDRESS:PORT_NUM&quot; 123suvisudo /etc/sudoersDefaults env_keep += &quot;all_proxy ftp_proxy http_proxy https_proxy no_proxy&quot; Time syncronizing1sudo date -s &quot;$(wget -S &quot;http://www.ustb.edu.cn/&quot; 2&gt;&amp;1 | grep -E &apos;^[[:space:]]*[dD]ate:&apos; | sed &apos;s/^[[:space:]]*[dD]ate:[[:space:]]*//&apos; | head -1l | awk &apos;{print $1, $3, $2, $5 ,&quot;GMT&quot;, $4 }&apos; | sed &apos;s/,//&apos;)&quot; Or replace wget -S with curl -I. install proxy tool from network 12curl -O https://raw.githubusercontent.com/v2fly/fhs-install-v2ray/master/install-release.sh --proxy &quot;http://ip:port&quot;sudo bash install-release.sh --proxy &quot;http://ip:port&quot; or copy the arm32-v7a install-pkg Tsinghua mirrorshttps://mirrors.tuna.tsinghua.edu.cn/help/raspbian/ /etc/apt/sources.list 12deb http://mirrors.tuna.tsinghua.edu.cn/raspbian/raspbian/ buster main non-free contribdeb-src http://mirrors.tuna.tsinghua.edu.cn/raspbian/raspbian/ buster main non-free contrib /etc/apt/sources.list.d/raspi.list 1deb http://mirrors.tuna.tsinghua.edu.cn/raspberrypi/ buster main ui Upgrade system12sudo apt updatesudo apt upgrade # It may take a long time ssh config for non-interactive shell12rpi0:~ $ ssh-keygen -t rsa -C &quot;you_email&quot;rpi0:~ $ cat .ssh/id_rsa.pub Copy the content into rpi1:~/.ssh/authorized_keys ExperimentsOpenmpi1sudo apt install build-essentials openmpi-bin openmpi-common openssh-server openssh-client libopenmpi3 libopenmpi-dev libopenmpi-dbg Python mpi4py1sudo apt install python-numpy python-mpi4py Obtain project1234567sudo apt install gitgit config --global user.name &quot;YourUserName&quot;git config --global user.email &quot;YourEmail&quot;git config --global http.proxy &quot;Your proxy&quot;git config --global https.proxy &quot;Your proxy&quot;git config --global http.proxyAuthMethod &apos;basic&apos;git clone https://github.com/BillyStudio/openmpi-demo.git","link":"/Oct-26th-Raspberry-Pi-parallel-computing-and-cluster-computing-experiment/"},{"title":"PAT 真题 | 1148 Werewolf - Simple version","text":"这道题既然要我们找出两个狼人。那么最直达中心的求解法就是设i和j为狼人，使用二重循环遍历。 如果根据假设能推出恰好有两个说谎者（liars），那么说明满足条件，i和j就是要找的狼人。 123456789101112131415161718192021222324252627282930313233343536#include&lt;cstdio&gt;#include&lt;algorithm&gt;#include&lt;vector&gt;using namespace std;const int maxn = 102;int say[maxn];int main(){ int N; scanf(&quot;%d&quot;, &amp;N); for(int i=1;i&lt;=N;++i){ scanf(&quot;%d&quot;, say+i); } for(int i=1;i&lt;=N;++i){ for(int j=i+1;j&lt;=N;++j){ // suppose i,j are wolvies vector&lt;int&gt; liar; int flag[maxn]; fill(flag, flag+maxn, 1); flag[i] = flag[j] = -1; for(int k=1;k&lt;=N;++k){ int wolf = abs(say[k]); if (say[k] * flag[wolf] &lt; 0){ // if k is liar liar.push_back(k); } } if (liar.size()==2 &amp;&amp; flag[liar[0]]+flag[liar[1]]==0){ printf(&quot;%d %d\\n&quot;, i, j); return 0; } } } puts(&quot;No Solution&quot;); return 0;} PS: 不敢再用C语言的 &lt;math.h&gt; 头文件了. 因为我使用 abs 函数的时候提示 error: ‘abs’ was not declared in this scope. 而我再Linux 下的 /usr/include/math.h 头文件下搜索 abs 的时候，发现真的没有这个函数！于是改用 &lt;cmath&gt; 或者 &lt;algorithm&gt; 了。从此写算法题对于c语言的头文件都不用 .h 写法了。","link":"/Sep-15th-PAT-Werewolf-simple-version/"},{"title":"PAT 真题 | 1029 Median","text":"这道题目通过率非常低, 自己也是花了大半天功夫才AC的. 特别感谢柳婼的Blog, 上面收集了每道PAT真题的题解, 收获很大. 网址放在文章最后面. 1029 Median（25 分）Given an increasing sequence S of N integers, the median is the number at the middle position. For example, the median of S1 = { 11, 12, 13, 14 } is 12, and the median of S2 = { 9, 10, 15, 16, 17 } is 15. The median of two sequences is defined to be the median of the nondecreasing sequence which contains all the elements of both sequences. For example, the median of S1 and S2 is 13. Given two increasing sequences of integers, you are asked to find their median. Input Specification:Each input file contains one test case. Each case occupies 2 lines, each gives the information of a sequence. For each sequence, the first positive integer N (≤2×10^5) is the size of that sequence. Then N integers follow, separated by a space. It is guaranteed that all the integers are in the range of long int. Output Specification:For each test case you should output the median of the two given sequences in a line. Sample Input:124 11 12 13 145 9 10 15 16 17 Sample Output:113 时间限制: 200 ms内存限制: 1.5 MB代码长度限制: 16 KB 题目分析这道题给出两个排好序的串, 求合并后有序串的中位数. 这道题的难点在于内存限制得很小, 无法满足开两个数组储存两个整数串, 只能开一个. 这道题主要的一个坑点是题目说整数全部在long int(8 bytes) 范围内, 实际全部是 int(4 bytes) 范围内. 解题思路是开一个int数组, 先把第一个串存进来. 然后动态读取第二个数组, 在读取的同时进行比较, 模拟归并排序. 最后若读取完毕第一个串还没有读取完毕, 则继续读取第一个串. 全过程位置不断增加, 中间位置 midpos 对应的就是中位数了. 1234567891011121314151617181920212223242526272829#include&lt;stdio.h&gt;#define For(i,n) for(int i=0;i&lt;n;++i)int N1, N2, temp, res;int main(){ scanf(&quot;%d&quot;, &amp;N1); int S1[N1]; For(i,N1) scanf(&quot;%d&quot;, S1+i); scanf(&quot;%d&quot;, &amp;N2); int midpos = (N1 + N2 - 1) / 2; int i = 0, j = 0; for( ; j&lt;N2; ++j){ scanf(&quot;%d&quot;, &amp;temp); while (S1[i] &lt; temp){ if ((i+j) == midpos) res = S1[i]; ++ i; if (i == N1) break; } if ((i+j) == midpos) res = temp; } while (i &lt; N1){ if ((i+j) == midpos) res = S1[i]; ++ i; } printf(&quot;%d\\n&quot;, res); return 0;} 参考资源: https://www.liuchuo.net/archives/2248","link":"/Sep-5th-PAT-median/"},{"title":"PAT 真题 | 1057 Stack","text":"这道题用到了一个 ACM 赛题中常见的数据结构——树状数组, 又称 Binary Index Tree. PAT 1057 Stack 题目分析让我们记录一个栈中的数据的中位数. 如果使用传统的前缀和方法，更新时的复杂度为O(n)，复杂度较大。考虑用一个辅助数组 c 来实现树状数组, 为了方便理解, 假设 c 对应的原始数组为 a[i]. 那么 a[i] 记录的是大小为 i 的数据的个数. 树状数组能对 a[0] … a[i] 的值进行O(lg n)时间复杂度的求和, 这个和表示的就是值小于等于 i 的数据的个数. 当这个和等于 (int)读入所有元素的个数/2 时, i 对应的就是中位数了. 树状数组的存储方式比较简单, 但是操作非常有技巧, 首先就是获取某数的二进制表示下最低的 1 对应数. 12#define lowbit(x) ((x) &amp; (-x))int c[maxn]; // 树状数组 当Push一个数 temp 后, 我们对树状数组进行更新就可以这样写，v=1: 12345void update(int start, int v) { for(int i = start; i &lt; maxn; i += lowbit(i)){ c[i] += v; // v是增加/减少的个数 }} 如果是Pop就把v=1变为-1即可. 如果要统计小于等于 x 的键值个数 sum, 复杂度也是 O(log n). 123456int askSum(int x) { int sum = 0; for(int i = x; i; i -= lowbit(i)){ sum += c[i]; }} 在查找最小为target的位置时使用二分查找的思想, 效率会更高. 12345678910111213// target 表示中位数的位置，（若栈中数据个数n，则target=(n+1)/2）int medianSearch(int target) { int left = 0, right = maxn-1; while(left &lt; right){ int mid = left + (right-left)/2; if (askSum(mid) &gt;= target){ right = mid; } else { left = mid + 1; } } return left;} 参考资料：[1]: 完全理解并深入应用树状数组 | 支持多种动态维护区间操作[2]: 柳婼 の blog","link":"/Sep-7th-PAT-1057/"},{"title":"C++ examples of leveldb","text":"LevelDB is a kind of key-value C++ database developped by Google engineers. My installation script is simple on Arch Linux: 1sudo pacman -Syu leveldb Example 1We create and then delete a leveldb database instance. Another important thing is to learn how to build with leveldb dynamic link library. 1234567891011121314151617181920#include &lt;iostream&gt;#include &lt;string&gt;#include &lt;assert.h&gt;#include &quot;leveldb/db.h&quot;using namespace std;int main(void){ leveldb::DB *db; leveldb::Options options; options.create_if_missing = true; leveldb::Status status = leveldb::DB::Open(options, &quot;/tmp/testdb&quot;, &amp;db); assert(status.ok()); delete db; return 0;} compile and link: g++ test-leveldb.cc -Iinclude -l:libleveldb.so -Iinclude means searching *.h files under /usr/include, so that we can write the relevant referencing path as #include &lt;leveldb/db.h&gt; since the full path of the header file is /usr/include/leveldb/db.h. By default /usr/include is included by gcc. Therefore, omitting -Iinclude is also acceptable. -l:libleveldb.so means searching for libleveldb.so under link library path, which by default is /usr/lib/. -l:libleveldb.so also has a shorten form: -lleveldb. Example 2Create, Delete, Update, Query 12345678910111213141516171819202122232425262728293031323334353637383940414243444546#include &lt;iostream&gt;#include &lt;string&gt;#include &lt;assert.h&gt;#include &quot;leveldb/db.h&quot;using namespace std;int main(void){ leveldb::DB *db; leveldb::Options options; options.create_if_missing = true; // open leveldb::Status status = leveldb::DB::Open(options, &quot;/tmp/testdb&quot;, &amp;db); assert(status.ok()); string key = &quot;name&quot;; string value = &quot;shane&quot;; // write status = db-&gt;Put(leveldb::WriteOptions(), key, value); assert(status.ok()); // read status = db-&gt;Get(leveldb::ReadOptions(), key, &amp;value); assert(status.ok()); cout &lt;&lt; value &lt;&lt; endl; // delete status = db-&gt;Delete(leveldb::WriteOptions(), key); assert(status.ok()); status = db-&gt;Get(leveldb::ReadOptions(), key, &amp;value); if (!status.ok()) { cerr &lt;&lt; key &lt;&lt; &quot; &quot; &lt;&lt; status.ToString() &lt;&lt; endl; } else { cout &lt;&lt; key &lt;&lt; &quot;===&quot; &lt;&lt; value &lt;&lt; endl; } //close delete db; return 0;} compile and link as example 1 shows.run ./a.out. /tmp/testdb will appear: Here we can notice that even though db is deleted, the files created under /tmp/cduq-db are still exist. If you want to delete this file, we can use leveldb::DestroyDB. LevelDB Structure:","link":"/Sept-13th-cpp-examples-of-leveldb/"},{"title":"Creating virtual machiness on Linux --- the hard way","text":"Two ways of using KVM-based vms on Linux are introduced. One is using virt-manager GUI, another is using the raw qemu-system. I. Prerequisites12pacman -S qemu bridge-utils iptables dnsmasq ebtablespacman -S libvirt check for module loading: 12lsmod | grep kvmlsmod | grep virtio To auto load a module at boot, create a file like ‘/etc/modules-load.d/virtio.conf’ 12# Load virtio at bootvirtio II. Virt Manager1pacman -S virt-manager 12sudo usermod --append --groups libvirt $(whoami)sudo systemctl start libvirtd check for nat: 12sudo virsh net-list --all# sudo virsh net-start default Then install using GUI.if you want a raw image, create the img file by yourself 1qemu-img create -f raw imgfile 20G II.A Win7 VM installation and usageaur install virtio-winpacman install dmidecode Under hard disk OS-images directory, find the file windows7_Ultimate_x64.iso and copy it into /var/lib/libvirt/images.This is a ghost OS image with some preinstall software. I use this because the activation tool is inside. Just put the script and Windows Loader.ext in the same directory and then run the script in Administrator. Real time clockIn virt manager, enable XML editing.Then replace &lt;clock offset=&apos;utc&apos;&gt; with &lt;clock offset=&apos;localtime&apos;&gt;Administrator open cmd: 1bcdedit /set {default} USEPLATFORMCLOCK on Office 2016 packmount the iso file: Office_2016_x64_ZH_16.0.7466.2038.isooff-line installer:start one of the Office appconvert and activate QXL Acceleration12lsmod|grep qxl # checksudo modprobe qxl bochs_drm # if not mod To auto load a module at boot, create a file like ‘/etc/modules-load.d/qxl.conf’ 123# Load qxl at bootqxlbochs_drm This is not enough. Because we just build a base on the server, but do nothing on the Windows guest. Look at this: Next install spice-guest-tools-latest.exe downloaded from https://www.spice-space.org/download.html. 比较不好的一个bug是虚拟机内部的复制粘贴不好用了，所以对于跨机的复制粘贴，还是采用原始的文件方式来实现。 make sure sshd on host is onopen one term on host and type tty to get device name，say /dev/pts/0 ssh to host using PuTTY from win7 clientecho &quot;copied text&quot; &gt;&gt; /dev/pts/0 You will see “copied text” on the host terminal. II.B Win10 VM InstallationBecause of two bugs of Win7 VM: the first is that copy-and-pasteing for office object always throws an error in VM; the second is that Office2016 on win7 cannot open remote-location file. I change to win10 vm, and I found that’s cool. II.B.a Launch VM as a desktop programGo to Virt-manager &gt; Connection Details to find Libvirt URI, here mine is qemu:///system Then open virtual machine, go to View &gt; Details to find the name of the virtual machine, here mine is win10 Now we can test the direct-open command: 1virt-manager --connect qemu:///system --show-domain-console win10 Then create your desktop file under ~/.local/share/applications: 123456789[Desktop Entry]Version=1.0Type=ApplicationName=win10Comment=Start Win10 VMExec=virt-manager --connect qemu:///system --show-domain-console win10Icon=your/logo/position/windows.svgTerminal=falseStartupNotify=false II.B.b Expand block image sizeTo add 5G to my win10 raw format volume, first check the state: 1234# virsh list --all Id Name State------------------------ - win10 shut off Then go to increase 123# cd /var/lib/libvirt/images/# ls -lh win10vol.img# qemu-img resize win10vol.img +5G Then start win10 VM and right click ‘Start Menu’ -&gt; Disk management -&gt; Extend Volumn C:\\ok. II.B.c PCI硬件设备直通Prerequisite: Enable IOMMU(Input/Output Memory Management Unit)Intel CPU上开启IOMMU需要VT-d的支持。VT-d(Intel Virtualization Technology for Direct I/O)是一个位于CPU、内存和I/O设备之间的硬件设备，它可以拦截I/O设备产生的中断请求和通过DMA方式对虚拟机内存的访问，然后重定向到通过虚拟机监视器（VMM）设定的虚拟机中。VT-d技术支持了虚拟机内部驱动程序直接与硬件设备通信，替代了传统的软件模拟方式，大大提升了虚拟化的I/O性能。 开启方式可分为临时开启和写配置文件开启两种方式：方式一（临时开启方法）：在计算机启动的grub页面按e进入kernal模式，在启动vmlinuz的参数后面添加 intel_iommu=on 和 iommu=pt这种开启方法在重启之后配置又会变成原来的样子。 方式二（写配置文件开启方法）： 12suvim /etc/default/grub 在 GRUB_CMDLINE_LINUX_DEFAULT 参数中添加 intel_iommu=on iommu=pt GRUB_CMDLINE_LINUX_DEFAULT=”loglevel=3 intel_iommu=on iommu=pt” 1grub-mkconfig -o /boot/grub/grub.cfg 1. 配置无线网卡直通默认的虚拟机使用NAT模式上网，对一些其他上网模式也是支持的。目前我对于桥接模式的配置没有成功，所以这里记录只成功了的网卡直通模式。在该模式下，虚拟机直接使用无线网卡联网，宿主机可以用有线连接，当时配置该模式只是为了暂时同步一下微信聊天记录（因为必须在同一wifi下） 成功开机后root使用下面命令检查无线网卡的pci地址： 1234567shopt -s nullglobfor g in `find /sys/kernel/iommu_groups/* -maxdepth 0 -type d | sort -V`; do echo &quot;IOMMU Group ${g##*/}:&quot; for d in $g/devices/*; do echo -e &quot;\\t$(lspci -nns ${d##*/})&quot; done;done; 我的是 IOMMU Group 15: 3a:00.0 Network controller [0280]: Qualcomm Atheros QCA6174 802.11ac Wireless Network Adapter [168c:003e] (rev 32) 再检查一下地址是否正确和是否支持iommu 12lspci -n -s 3a:00.0dmesg | grep -i iommu | grep 3a:00 显示是支持的： [ 0.452590] pci 0000:3a:00.0: Adding to iommu group 15 将无线网卡与宿主机解绑： 1echo &quot;0000:3a:00.0&quot; &gt; /sys/bus/pci/devices/0000\\:3a\\:00.0/driver/unbind 然后，打开虚拟机软件，添加pci device，与虚拟机绑定: 参考：https://www.cnblogs.com/xia-dong/p/11542771.html 2. 配置USB直通一般情况下，QEMU的USB软件重定向方式可以满足U盘等设备的使用需求，但是在一些需要特定驱动的方式下（比如无线投影、USB转VGA），需要开启USB直通功能。 12345[root@arch wsd]# lsusbBus 002 Device 001: ID 1d6b:0003 Linux Foundation 3.0 root hubBus 001 Device 003: ID 0c45:670c Microdia Integrated Webcam HDBus 001 Device 002: ID 0cf3:e300 Qualcomm Atheros Communications QCA61x4 Bluetooth 4.0Bus 001 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub 通过lsusb命令可以看到，USB接口和蓝牙、摄像头都挂在USB Bus 001下。 检查USB设置是否支持RESET功能： 12345678910111213141516171819202122232425262728293031323334[root@arch wsd]# for iommu_group in $(find /sys/kernel/iommu_groups/ -maxdepth 1 -mindepth 1 -type d);do echo &quot;IOMMU group $(basename &quot;$iommu_group&quot;)&quot;; for device in $(\\ls -1 &quot;$iommu_group&quot;/devices/); do if [[ -e &quot;$iommu_group&quot;/devices/&quot;$device&quot;/reset ]]; then echo -n &quot;[RESET]&quot;; fi; echo -n $&apos;\\t&apos;;lspci -nns &quot;$device&quot;; done; doneIOMMU group 7[RESET] 00:1c.4 PCI bridge [0604]: Intel Corporation Sunrise Point-LP PCI Express Root Port #5 [8086:9d14] (rev f1)IOMMU group 5 00:16.0 Communication controller [0780]: Intel Corporation Sunrise Point-LP CSME HECI #1 [8086:9d3a] (rev 21)IOMMU group 13[RESET] 3c:00.0 Non-Volatile memory controller [0108]: SK hynix PC401 NVMe Solid State Drive 256GB [1c5c:1527]IOMMU group 3 00:14.0 USB controller [0c03]: Intel Corporation Sunrise Point-LP USB 3.0 xHCI Controller [8086:9d2f] (rev 21) 00:14.2 Signal processing controller [1180]: Intel Corporation Sunrise Point-LP Thermal subsystem [8086:9d31] (rev 21)IOMMU group 11[RESET] 3a:00.0 Network controller [0280]: Qualcomm Atheros QCA6174 802.11ac Wireless Network Adapter [168c:003e] (rev 32)IOMMU group 1[RESET] 00:02.0 VGA compatible controller [0300]: Intel Corporation UHD Graphics 620 [8086:5917] (rev 07)IOMMU group 8[RESET] 00:1c.5 PCI bridge [0604]: Intel Corporation Sunrise Point-LP PCI Express Root Port #6 [8086:9d15] (rev f1)IOMMU group 6[RESET] 00:1c.0 PCI bridge [0604]: Intel Corporation Sunrise Point-LP PCI Express Root Port #1 [8086:9d10] (rev f1)IOMMU group 4 00:15.0 Signal processing controller [1180]: Intel Corporation Sunrise Point-LP Serial IO I2C Controller #0 [8086:9d60] (rev 21) 00:15.1 Signal processing controller [1180]: Intel Corporation Sunrise Point-LP Serial IO I2C Controller #1 [8086:9d61] (rev 21)IOMMU group 12[RESET] 3b:00.0 Unassigned class [ff00]: Realtek Semiconductor Co., Ltd. RTS525A PCI Express Card Reader [10ec:525a] (rev 01)IOMMU group 2 00:04.0 Signal processing controller [1180]: Intel Corporation Xeon E3-1200 v5/E3-1500 v5/6th Gen Core Processor Thermal Subsystem [8086:1903] (rev 08)IOMMU group 10 00:1f.0 ISA bridge [0601]: Intel Corporation Sunrise Point LPC Controller/eSPI Controller [8086:9d4e] (rev 21) 00:1f.2 Memory controller [0580]: Intel Corporation Sunrise Point-LP PMC [8086:9d21] (rev 21) 00:1f.3 Audio device [0403]: Intel Corporation Sunrise Point-LP HD Audio [8086:9d71] (rev 21) 00:1f.4 SMBus [0c05]: Intel Corporation Sunrise Point-LP SMBus [8086:9d23] (rev 21)IOMMU group 0 00:00.0 Host bridge [0600]: Intel Corporation Xeon E3-1200 v6/7th Gen Core Processor Host Bridge/DRAM Registers [8086:5914] (rev 08)IOMMU group 9[RESET] 00:1d.0 PCI bridge [0604]: Intel Corporation Sunrise Point-LP PCI Express Root Port #9 [8086:9d18] (rev f1) 每行前面带有RESET字样就是可以支持的，可以看到”00:14.0 USB controller”是不支持RESET的。 II.B.d CPU绑定通过 virsh vcpuinfo win10 可以查看当前使用的CPU情况 123456789101112wsd@xps13 ~ % sudo virsh vcpuinfo win10 [1]VCPU: 0CPU: 5State: runningCPU time: 45.5sCPU Affinity: yyyyyyyyVCPU: 1CPU: 1State: runningCPU time: 42.7sCPU Affinity: yyyyyyyy 通过virsh edit win10，在&lt;vcpu placement=&apos;static&apos;&gt;2&lt;/vcpu&gt;下一行添加： 1234&lt;cputune&gt; &lt;vcpupin vcpu=&apos;0&apos; cpuset=&apos;6&apos;/&gt; &lt;vcpupin vcpu=&apos;1&apos; cpuset=&apos;7&apos;/&gt;&lt;/cputune&gt; 将虚拟机两个vCPU分别绑定在宿主机6和7号CPU上再次检查CPU使用情况： 123456789101112[root@xps13 wsd]# virsh vcpuinfo win10VCPU: 0CPU: 6State: runningCPU time: 165.3sCPU Affinity: ------y-VCPU: 1CPU: 7State: runningCPU time: 105.4sCPU Affinity: -------y Referenceshttps://wiki.archlinux.org/index.php/PCI_passthrough_via_OVMF","link":"/Sept-17th-Create-vms-on-Linux-the-hard-way/"},{"title":"PAT 真题 | 1021 Deepest Root","text":"近期在刷 PAT 题库的时候遇到一个求树的最长根的问题, 觉得证明挺有意思的, 于是抽空记录下来. 1021 Deepest Root（25 分）A graph which is connected and acyclic can be considered a tree. The hight of the tree depends on the selected root. Now you are supposed to find the root that results in a highest tree. Such a root is called the deepest root. Input Specification:Each input file contains one test case. For each case, the first line contains a positive integer N (≤10^4) which is the number of nodes, and hence the nodes are numbered from 1 to N. Then N−1 lines follow, each describes an edge by given the two adjacent nodes’ numbers. Output Specification:For each test case, print each of the deepest roots in a line. If such a root is not unique, print them in increasing order of their numbers. In case that the given graph is not a tree, print Error: K components where K is the number of connected components in the graph. Sample Input 1:1234551 21 31 42 5 Sample Output 1:123345 Sample Input 2:1234551 31 42 53 4 Sample Output 2:1Error: 2 components 题目分析这道题首先要求我们判断输入的图能否构成一棵树. 如果能构成一棵树就按节点序号顺序输出这棵树的最长根节点, 最长根节点是能让一棵树的深度达到最大值的节点. 如果不能构成一棵树就输出错误, 并报告图的联通部分个数. 在确定能构成了一棵树后, 使用两次 dfs 或 bfs 搜索算法就能找到所有的最长根节点. 下面证明这个结论: 假设树的最大深度为 maxD. 首先以任意一点作为树的根节点, 假设第一次搜索出的叶子节点为 L = {L1, L2, …, Ln}. 对应的节点深度为 {A1, A2, …, An}. 节点深度的最大值为 maxA, 对应的节点集合假设为 {Lmax}. 从 L 中任选两个叶子节点的组合, 所有组合之间的距离最大值就是该树所能达到的最大深度 maxD.若找到了 i 和 j , 使得 maxD = Li 和 Lj 对应的深度, 不妨设 Ai &gt;= Aj.若Li和Lj不在同一支上, 则Li和Lj对应的深度 = Ai + Aj另一方面, Ai + Aj &lt;= maxA + Aj &lt;= maxD.所以, Ai + Aj = maxA + Aj = maxD, maxA = Ai, Ai 属于 {Lmax}. 根据定义, {Lmax} 集合中的元素为最长根节点. 第二次搜索从 {Lmax} 中任选一个元素, 即选择一个已经找到的最长根节点 D1. 根据定义, 以该点为根形成的树的最大深度是 maxD. 对应最大深度的节点假设为 Di, 那么反过来以 Di 为根产生的树的最大深度也是 maxD. 所以 Di 也是最长根节点.接下来还要证明已经找出了所有的最长根节点. 实例代码12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667#include&lt;stdio.h&gt;#include&lt;string.h&gt;#include&lt;vector&gt;#include&lt;set&gt;using namespace std;#define For(i,n) for(int i=0; i&lt;n; ++i)const int maxn = 10010;vector&lt;int&gt; G[maxn];int root[maxn]; // 并查集set&lt;int&gt; deepestroot;set&lt;int&gt; temproot;bool done[maxn]; // dfs标记void initSet(int n){ for(int i = 1; i &lt;= n; i++) root[i] = i;}int findSet(int x){ return root[x] == x ? x : root[x]=findSet(root[x]);}void dfs(int root, int height){ static int maxheight = 0; if (done[root]) return ; done[root] = true; For(i, G[root].size()){ dfs(G[root][i], height+1); } if (height &gt; maxheight){ maxheight = height; temproot.clear(); temproot.insert(root); } else if (height == maxheight){ temproot.insert(root); }}int main(){ int N; scanf(&quot;%d&quot;, &amp;N); initSet(N); For(i,N-1){ int a,b; scanf(&quot;%d%d&quot;, &amp;a, &amp;b); G[a].push_back(b); G[b].push_back(a); int x = findSet(a), y = findSet(b); if (x != y) root[x] = y; } set&lt;int&gt; components; for(int i = 1; i &lt;= N; ++i) components.insert(findSet(i)); if (components.size() &gt; 1){ printf(&quot;Error: %ld components\\n&quot;, components.size()); } else { memset(done, false, sizeof done); dfs(1, 0); deepestroot = temproot; memset(done, false, sizeof done); dfs(*temproot.begin(), 0); for (auto it=temproot.begin(); it!=temproot.end(); ++it) deepestroot.insert(*it); for (auto it=deepestroot.begin(); it!=deepestroot.end(); ++it) printf(&quot;%d\\n&quot;, *it); } return 0;}","link":"/Sept-4th-PAT-deepest-root/"},{"title":"Pandas Overview","text":"Pandas is a wide-spread used data structure in Tensorflow, the famous architecture in Machine Learning. We go through it briefly here. Installation and importThe prerequite Python packages are numpy and scipy. We can use pip or conda to install. pip install pandas When in Python 3 environment, importing pandas is easy from __future__ import print_function import pandas as pd pd.__version__ # check it DataFrame &amp; SeriesA pandas DataFrame, like a table in Excel, is consisted of one or more Series which resemble columns in Excel and share the same number of rows. See the following example: city_names = pd.Series([&apos;San Francisco&apos;, &apos;San Jose&apos;, &apos;Sacramento&apos;]) population = pd.Series([852469, 1015785, 485199]) sample=pd.DataFrame({&apos;City name&apos;: city_names, &apos;Population&apos;: population }) It is very convinent to get some statistics using describe() method sample.describe() Pandas can also import data from a file. Here we create a csv file named ‘housing_train.csv’. Here are the content of this file: “longitude”,”latitude”,”housing_median_age”,”total_rooms”,”total_bedrooms”,”population”,”households”,”median_income”,”median_house_value”-114.310000,34.190000,15.000000,5612.000000,1283.000000,1015.000000,472.000000,1.493600,66900.000000-114.470000,34.400000,19.000000,7650.000000,1901.000000,1129.000000,463.000000,1.820000,80100.000000-114.560000,33.690000,17.000000,720.000000,174.000000,333.000000,117.000000,1.650900,85700.000000-114.570000,33.640000,14.000000,1501.000000,337.000000,515.000000,226.000000,3.191700,73400.000000-114.570000,33.570000,20.000000,1454.000000,326.000000,624.000000,262.000000,1.925000,65500.000000-114.580000,33.630000,29.000000,1387.000000,236.000000,671.000000,239.000000,3.343800,74000.000000-114.580000,33.610000,25.000000,2907.000000,680.000000,1841.000000,633.000000,2.676800,82400.000000-114.590000,34.830000,41.000000,812.000000,168.000000,375.000000,158.000000,1.708300,48500.000000-114.590000,33.610000,34.000000,4789.000000,1175.000000,3134.000000,1056.000000,2.178200,58400.000000 I put it to my directory of Documents, so I import it by typing: housing_dataframe = pd.read_csv(&quot;~/Documents/housing_train.csv&quot;, sep=&quot;,&quot;) If the data is too big, you can check the front several rows by housing_dataframe.head() See the hist by typing import matplotlib.pyplot as plt housing_dataframe.hist(&apos;housing_median_age&apos;) plt.show() It can also be accessed using familiar Python dict / list operations &gt;&gt;&gt; type(housing_dataframe[&apos;households&apos;]) &lt;class &apos;pandas.core.series.Series&apos;&gt; &gt;&gt;&gt; housing_dataframe[&apos;households&apos;][0:2] 0 472.0 1 463.0 Name: households, dtype: float64 Manipulating dataActually, pandas Series can be used as arguments to most Numpy functions: &gt;&gt;&gt; import numpy as np &gt;&gt;&gt; np.log(population) 0 13.655892 1 13.831172 2 13.092314 dtype: float64 Modifying DataFrames is also straightforward. For example, the following code adds two Series to an existing DataFrame: cities = pd.DataFrame({&apos;City name&apos;: city_names, &apos;Population&apos;: population }) cities[&apos;Area square miles&apos;] = pd.Series([46.87, 176.53, 97.92]) cities[&apos;Population density&apos;] = cities[&apos;Population&apos;] / cities[&apos;Area square miles&apos;] cities Exercise 1Modify the cities table by adding a new boolean column that is True if and only if both of the following are True: The city is named after a San. The city has an area greater than 50 square miles. Hint: using lambda function and Python binary operation &amp; IndexesBy default, the indexes of the Dataframe or Series are stable. But we can use reindex to modify the presence just like rearrange the index: cities.reindex([2, 0, 1]) cities Reindexing is a great way to shuffle (randomise) a DataFrame. In the example below, we take the index, which is array-like, and pass it to NumPy’s random.permutation function, which shuffles its values in place. Calling reindex with this shuffled array causes the DataFrame rows to be shuffled in the same way. Try running the following cell multiple times! cities.reindex(np.random.permutation(cities.index))","link":"/fevr-4th-Pandas-Learning-Note/"},{"title":"heap-overflow","text":"new和malloc都是分配地址，不同的是new分配在堆中能改变缓冲区大小，malloc不能改变缓冲区，分配在栈中。 OJ Practice今天写代码的时候偶尔遇到了一个缓冲区溢出问题, 将其记下来后面再深入考虑一番 12345678// Input: 110 / 100int main(int argc, char const *argv[]){ char s1[40]; char op[1]; printf(&quot;%d\\n&quot;, scanf(&quot;%s%s&quot;, s1,op)); printf(&quot;%s\\n&quot;, s1);} 输出s1发现没有东西, 这是因为op长度仅为1, 读入字符串写入了0, 恰好是s1的第1个字符,所以s1的第一个字符被置0了.修改成下面的就没有问题了. 123456789// Input: 110 / 100// Output: 110int main(int argc, char const *argv[]){ char s1[40]; char op[2]; printf(&quot;%d\\n&quot;, scanf(&quot;%s%s&quot;, s1,op)); printf(&quot;%s\\n&quot;, s1);} C++下面的在C++面向对象中很常见 1void (*process) (char*); // 定义了一个函数指针process，该函数无返回值，接受参数char* 12345678910111213int main(){ chunk_t *next; setbuf(stdin. NULL) //清理输入缓冲区 next = malloc(sizeof(chunk_t)); next-&gt;process = showlen; printf(&quot;Enter value:&quot;); gets(next-&gt;imp); // 从标准输入中得到串 next-&gt;process(next-&gt;imp); printf(&quot;buffers done!\\n&quot;);} 系统空转命令：9090","link":"/heap-overflow/"},{"title":"Algebra | 共轭转置与 Hermite 矩阵","text":"介绍代数中共轭转置和 Hermite 矩阵以及在 Python 和 MATLAB 中的函数. 共轭转置共轭转置，又称复数转置，埃尔米特转置. 首先将一个矩阵转置, 如果是复数矩阵, 再将每个复数变为其共轭. MATLAB中的函数为ctranspose(). 12X = [2 2+i; 1-i 3];ctranspose(X) 输出 123ans = 2.0000 + 0.0000i 1.0000 + 1.0000i 2.0000 - 1.0000i 3.0000 + 0.0000i Python numpy 中虽然没有类似函数, 但是根据定义, 自己可以很方便地定义出计算函数. 12def hermite(x): return x.swapaxes(-2, -1).conj() Hermite 矩阵若一个矩阵和它的共轭转置矩阵相等, 即满足 $\\bar{A}’ = A$ 的矩阵称为 Hermite 矩阵.","link":"/matlab-conjugate-transpose/"},{"title":"work-hard-and-play-hard","text":"How to make working like playing a game Design/Choose a well environment Search outside surveillence Get uncertain responses A road with small and no-ending steps","link":"/work-hard-and-play-hard/"},{"title":"Android Studio 上手笔记","text":"本文将建立一个安卓模板应用并在真机上运行。 开发环境搭建 下载并安装java jdk 下载并安装Android Studio IDE（以下简称AS） 第一次打开AS时通过科学上网或配置国内镜像源的方法下载SDK 新建第一个真机运行项目配置阿里云Gradle在Project视图下，找到根目录下的build.gradle文件，将其中的allprojects部分改为 123456allprojects { repositories { maven{ url &apos;http://maven.aliyun.com/nexus/content/groups/public/&apos;} jcenter() }} 然后Sync project with gradle files，开始重新编译。这时候可能还会出现报错。 点击右下角的Install Build Tools … 下载API对应的SDK Build Tools。 然后继续重新同步Gradle，理所应当地又遇到了一个错误：Failed to resolve: com.android.support.constraint:constraint-layout:1.1.2 我们可以打开设置来查看当前安装的Constraint-layout版本。 可以看到最高只支持到1.0.2，所以会出现报错的情况。所以我们的解决办法是将当前支持的版本加入到app模块所对应的build.gradle（注意：不是全局的gradle）之中。将dependencies下的 1implementation &apos;com.android.support.constraint:constraint-layout:1.1.2&apos; 修改为 1implementation &apos;com.android.support.constraint:constraint-layout:1.0.2&apos; 解决完这些问题后，点击三角形的Run app按钮，选择我们使用USB MTP连接的安卓手机（小米5）。这时候手机上会弹出允许USB调试框，记得点击确定。","link":"/2018-6-15-Android-Studio-First-App-Note/"},{"title":"Configuration on Windows WSL","text":"Notes includes Windows subsystem Linux, VMWare Virtual machine, remote cloud and dual system. WSL InitializationBefore starting everything, make sure your Windows version support WSL function and enable it.(Also, you can use Powershell to enable it. the powershell command is Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Windows-Subsystem-Linux) Enter Microsoft Store and find a Linux distribution install, and then launch it then you will see (You can either click the software icon in start menu, or just open a cmd/powershell and type bash or wsl) If you don’t want to stay in cmd or powershell, just use wsl [Linux command] as an interface. 12~$ cat /proc/version~$ cat /etc/os-release to see the system version or use lsb_release -a for Ubuntu. System configurationcheck for updates1sudo apt update -qq set root pass1sudo passwd root 对于Server用户, 可能会出现没有通过认证的情况. 解决办法参考这篇文章: https://www.codevoila.com/post/26/fix-authentication-token-manipulation-error-when-changing-user-password-in-ubuntu Access Windows Filesunder /mnt/ It’s more convinient to setup a symbolic link 12ln -s /mnt/c/Users/Shane/Downloads/ln -s /mnt/c/Users/Shane/Documents/ static network config for Ubuntu 18.04 LTS/etc/netplan/50-cloud-init.yaml 123456789network: ethernets: enp1s0: addresses: [192.168.122.168/24] dhcp4: false gateway4: 192.168.122.1 nameservers: addresses: [192.168.122.1, 114.114.114.114] version: 2 1sudo netplan apply static network config for Ubuntu 14.04 LTSedit /etc/network/interfaces Ubuntu socks5 proxy setting1sudo apt-get install tsocks edit /etc/tsocks.conf 12345678local = 192.168.122.0/255.255.255.0local = 10.0.0.0/255.0.0.0server = 192.168.122.1# Server type defaults to 4 so we need to specify it as 5 for this oneserver_type = 5# The port defaults to 1080 but I&apos;ve stated it here for clarity server_port = 1080 12sudo -stsocks apt-get install -y package-name Install vim12sudo apt install vimsudo apt install vim-gnome 我们需要从VIM中将内容复制到系统剪切板里, check 1vim --version 查看clipboard前面是否有+号. if true, then use &quot;+y for yank and &quot;+p for paste. 更改默认镜像源(Optional, for users suffering slow update speed)备份系统原镜像源如果在安装的时候选择的区域为中国，那么默认镜像源是阿里云，也可以改为其他的，比如学校教育网连接清华的软件源速度也是不错的。修改文件在/etc/apt/sources.list中，修改之前记得先备份。 1sudo cp /etc/apt/sources.list /etc/apt/sources.list.bak /etc/apt/sources.list 12345678910111213# 默认注释了源码镜像以提高 apt update 速度，如有需要可自行取消注释deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic main restricted universe multiverse# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic main restricted universe multiversedeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-updates main restricted universe multiverse# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-updates main restricted universe multiversedeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-backports main restricted universe multiverse# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-backports main restricted universe multiversedeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-security main restricted universe multiverse# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-security main restricted universe multiverse# 预发布软件源，不建议启用# deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-proposed main restricted universe multiverse# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-proposed main restricted universe multiverse VMWare users: 安装 open-vm-toolsVMWare 官方建议用以替代 vmware tools, 123sudo apt install open-vm-toolssudo apt install open-vm-tools-devsudo apt install open-vm-tools-desktop 也可以手动安装. 下载网址：https://github.com/vmware/open-vm-tools在root用户下运行vmware-install.pl，然后疯狂地回车。参见网址：https://kb.vmware.com/s/article/2073803 配置PuTTY登陆(For linux server users, not for WSL)12sudo apt install net-toolssudo apt install openssh-server 一般ssh就会启动，可以使用命令 1sudo ps -e |grep ssh 查看。若没有开启，输入 1sudo service ssh start 开启。 产生密钥对Create the pair of key on local computer by the command ssh-keygen -t rsa. Then a directory ‘~/.ssh’ will be found with files ‘id_rsa’ and ‘id_rsa.pub’. PuTTY client on windowsAfter you get an SSH private key from Ubuntu server: Open PuTTYGen and load our private key. Choose “Save Private Key” as a .ppk file and then close PuTTYGen. enter Connection &gt; Data &gt; Auto-login username, then input your username. Go to Connection&gt;SSH&gt;Auth, browse your private key for authentication. Don’t forget to go back to Session&gt;Save 设置共享文件夹(For VMWare users, not for WSL)首先在VMWare中设置共享文件夹，然后再虚拟机上运行下面的命令就能看到共享文件夹名了。 1vmware-hgfsclient 进入/etc/systemd/system目录 1sudo vi /etc/systemd/system/mnt.hgfs.service 添加 1234567891011121314151617181920212223242526[Unit]Description=Load VMware shared foldersRequires=vmware-vmblock-fuse.serviceAfter=vmware-vmblock-fuse.serviceConditionPathExists=.host:/ConditionVirtualization=vmware[Service]Type=oneshotRemainAfterExit=yesExecStart=ExecStart=/usr/bin/vmhgfs-fuse -o allow_other -o auto_unmount .host:/ /mnt/hgfs[Install]WantedBy=multi-user.target 保存后使能这个service 1sudo systemctl enable mnt.hgfs.service 如果没有创建sudo mkdir -p /mnt/hgfs文件夹，需要创建 1sudo mkdir -p /mnt/hgfs 重启后检查共享目录是否已经挂载到/mnt/hgfs目录下. 与 Windows 时间同步(For BiSystem users)只对于硬盘安装的双系统来说，会有这个问题。注意Linux是否遵循UTC时间的这个问题。UTC是世界标准时，如果系统遵循这个时间，那么获取BIOS的时间后，会在实际显示时根据所在时区进行相应计算调整。如果不遵循UTC，那么系统显示时间直接就是BIOS的时间。对于虚拟机系统一般没有这个问题。如果出现问题，解决办法如下： 12sudo apt install ntpdatesudo ntpdate time.windows.com 这样就设置为和Windows时间一样了。然后再将统一后的时间更新到BIOS固件上： 1sudo hwclock --localtime --systohc 中文输入法(For Chinese-typing users)如果安装的是虚拟机系统并且能登陆谷歌，中文输入法不太必要。如果只有一个操作系统有安装中文输入法的必要，建议首先在右上角的System Settings &gt; Region &amp; Language &gt; Input Sources 中加入Chinese。然后点击 Manage installed languages 按钮，系统就会自动安装相应的语言包和输入法了。输入法系统默认是IBus（Intelligent Input Method），也可以选择XIM（搜狗输入法）。但是，安装了中文输入法后很可能会出现卡机的情况，这可能是个系统的bug。 关闭sudo密码(For lazy users)1sudo visudo 进入nano编辑器，找到 1%sudo ALL=(ALL:ALL) ALL 修改为不需要密码 1%sudo ALL=(ALL:ALL) NOPASSWD:ALL 然后就可以保存退出了（Ctrl+x） Modifying rm command(Optional)rm is a really really dangerous command for UNIX-like systems. Luckily, we may modify this command to let it not directly delete one file but move it to the trash where the location in Ubuntu Desktop System is ~/.local/share/Trash. sudo apt install trash-cli vi ~/.bashrc add alias rm=&quot;trash&quot; to the end, then :wq. After restart a new terminal, you can directly use rm file or rm directory to move the file to the trash. (Note: If you add after .profile file, it will take effect only once even if you source it. ) Command line enhancingHyperinstall Hyper on your Win10, and change the default shell to wsl shell: &apos;C:\\\\Windows\\\\System32\\\\bash.exe&apos; on file ‘.hyper.js’.and set shellArgs: [&apos;~&apos;] for starting default at WSL $HOME directory. 添加右键使用 WSL 打开打开注册表，新建 \\HKEY_CLASSES_ROOT\\Directory\\Background\\shell\\WSL 在WSL下新建command将bash的运行路径添加进去 可以在WSL下添加一个Icon的字符串值，将图标路径加入进去 不需要的时候，将WSL文件夹删除就好了（其实在文件管理器的地址栏输入bash，cmd或powershell就能在当前路径下进入对应的终端） 桌面系统增强奇怪的中文字体下载安装开源的文泉字体系.如果遇到中文显示为日文字形的，是因为没有配置字体显示优先级。在 /etc/fonts/conf.d 或 /etc/fonts/conf.avail 或 ~/.config/fontconfig/conf.d 文件夹下新建 64-language-selector-prefer.conf里面配置： 12345678910111213141516171819202122&lt;?xml version=&quot;1.0&quot;?&gt;&lt;!DOCTYPE fontconfig SYSTEM &quot;fonts.dtd&quot;&gt;&lt;fontconfig&gt; &lt;alias&gt; &lt;family&gt;sans-serif&lt;/family&gt; &lt;prefer&gt; &lt;family&gt;Noto Sans CJK SC&lt;/family&gt; &lt;family&gt;Noto Sans CJK TC&lt;/family&gt; &lt;family&gt;Noto Sans CJK JP&lt;/family&gt; &lt;/prefer&gt; &lt;/alias&gt; &lt;!--以上为设置无衬线字体优先度--&gt; &lt;alias&gt; &lt;family&gt;monospace&lt;/family&gt; &lt;prefer&gt; &lt;family&gt;Noto Sans Mono CJK SC&lt;/family&gt; &lt;family&gt;Noto Sans Mono CJK TC&lt;/family&gt; &lt;family&gt;Noto Sans Mono CJK JP&lt;/family&gt; &lt;/prefer&gt; &lt;/alias&gt; &lt;!--以上为设置等宽字体优先度--&gt;&lt;/fontconfig&gt; 安装Gnome Tweak Tool这是一个基本的增强工具，比如启用“单击时最小化”（Minimize on click）就可以直接在Tweak中设置 安装命令 12sudo apt install gnome-tweak-toolsudo apt install gnome-shell-extensions 设置DockerDock就是Ubuntu下的菜单栏。Settings下面有一些基本的设置，如果想进一步设置，需要安装 1sudo apt install dconf-tools 再命令行中输入dconf-editor打开配置编辑，然后进入org-&gt;gnome-&gt;shell-&gt;extensions-&gt;dash-to-dock进行更加细节化的修改，我这里修改了一个最大化时全屏：autohide-in-fullscreen当然，所有的设置都可以通过命令来完成。下面的命令将会把Dock变成MacOS类似的底部居中形式 12345gsettings set org.gnome.shell.extensions.dash-to-dock extend-height falsegsettings set org.gnome.shell.extensions.dash-to-dock dock-position BOTTOMgsettings set org.gnome.shell.extensions.dash-to-dock transparency-mode FIXEDgsettings set org.gnome.shell.extensions.dash-to-dock dash-max-icon-size 64gsettings set org.gnome.shell.extensions.dash-to-dock unity-backlit-items true 如果想回到原来的状态，通过gsettings reset命令，比如下面命令将Dock大小重置 1gsettings reset org.gnome.shell.extensions.dash-to-dock dash-max-icon-size 1sudo apt install gnome-shell-extension-dashtodock GNOME Tweak Tool &gt; Extensions &gt; Dash to Dock &gt; Appearance 设置窗口按钮位置为左上角打开dconf-editor org—&gt;gnome—&gt;desktop—&gt;wm—&gt;preferences—&gt;button-layout 改为‘close,minimize,maximize:’ Minimize single window applications on click‘’’gsettings set org.gnome.shell.extensions.dash-to-dock click-action ‘minimize’‘’’or set in Tweak Tool 安装多媒体编解码器(Codecs)123sudo dpkg --configure -asudo apt install libdvdnav4 libdvdread4 gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly libdvd-pkgsudo apt install ubuntu-restricted-extras 编程环境搭建C/C++123sudo apt install build-essentialsudo apt install cmakesudo apt install gdb Python环境的安装1sudo apt install python3 python3-pip Install numpy for system 12sudo apt install python3-scipysudo apt install python3-numpy 使用国内镜像源Python3 pip使用国内镜像源：新建~/.pip/pip.conf 12[global]index-url = https://pypi.tuna.tsinghua.edu.cn/simple 或者在安装时加入 1-i https://pypi.tuna.tsinghua.edu.cn/simple OpenCVhttps://docs.opencv.orgchoose the version that you’ve downloaded. for unzip, install unzip or 7zip. If there is error like “E: Unable to locate package libjasper-dev”. Use these commands to search and select the correct name: 1234sudo apt update -qqsudo apt-cache search [package name]sudo apt-cache show [the right package name]sudo apt install [package] -y cmake for supporting gstreamer 12sudo apt install libgstreamer1.0-dev libgstreamer-plugins-base1.0-devcmake -D CMAKE_BUILD_TYPE=Release -D CMAKE_INSTALL_PREFIX=/usr/local -D WITH_GSTREAMER=ON .. Texlive1sudo apt install texlive-full GNUPlothttp://www.gnuplot.info/ Deep LearningMiniconda12~$ sudo apt install bzip2 -qq~$ bash Directory/of/miniconda/install/file If you choose not to initialize Miniconda3 in your ~/.bashrc(which will override system python), you can do it yourself by adding export PATH=&quot;~/miniconda3/bin:$PATH&quot; to .bashrc of your home directory. Then reopen your terminal. Opencv for Python12conda install -c menpo opencvsudo apt install ffmpeg libdvdnav4 libdvdread4 gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly libdvd-pkg libavcodec-extra libavdevice-extra libavfilter-extra libavformat57 libavutil56 libpostproc55 libswscale5 ttf-mscorefonts-installer icedtea-plugin # 安装视频编解码器 Jupyter notebook1conda install jupyter PyTorchhttps://pytorch.org/get-started/locally/ matplotlib1pip install matplotlib 另参考：https://linuxconfig.org/things-to-do-after-installing-ubuntu-18-04-bionic-beaver-linux","link":"/config-after-install-ubuntu-18/"},{"title":"How to install MATALB 2017a on Windows 10","text":"I choose the latest version of MATLAB (i.e. MATLAB 2017a) to install. Install MATLABMATLAB 2017a installation packages are given on my Baidu NetDiskPass: t7ke On windows 10, just right click the dvd1 iso file and chose load. Find ‘setup.exe’ to start installation. As we want to crack it later, we choose offline activation and input the serial number: 09806-07443-53955-64350-21751-41297 After some time the program will elude you to insert dvd2. Then you can just quit dvd1 and then load dvd2 and continue installation. CrackAfter the installation process has finished, enter the installation path of MATLAB. Mine is D:\\Program Files\\MATLAB\\R2017a, for example. Unzip our crack zip file and paste .lic file into dir ‘licences’. Then we double click MATLAB 2017a and open it. It doesn’t matter if we met a error message box, just close it. Then paste our .dll file into relevant directory. Done! MATLAB2017a 与 VS2017 mex交叉编译环境搭建mex交叉编译需要安装外接的编译器来进行，但是MATLAB对于第三方的编译器版本有限制，各个版本可支持的第三方编译器可参看网址：https://www.mathworks.com/support/sysreq/previous_releases.html建议先安装C/C++的编译环境，这样在安装MATLAB的时候就能可能自动检测出所需要的编译环境，但也可能会失败。比如，我在MATLAB命令行中输入mex -setup，提示没有找到编译器，说明出现问题了。 出现问题就需要解决，我的环境配置： Windows 10 MATLAB 2017a Visual Studio 2017 对于MATLAB 2017b，已经修复了无法与VS2017交叉编译的问题。而对于2017a，需要前往论坛下载补丁，也可以从我的网盘链接中下载。然后按照下面的步骤执行: 在MATLAB命令行中输入matlabroot，显示MATLAB软件根目录，然后让MATLAB当前工作空间回到根目录，然后退出软件。 补丁下载成功后，解压并将bin文件夹中内容复制粘贴到MATLAB相应目录下。 重新打开MATLAB 2017a，输入mex -setup测试。 Done ! mex交叉编译设定为C++编译器编译：mex -setup C++ 编译文件：mex 文件名 编译成功后，会产生.mexw64后缀文件。 写在后面的话在涉足交叉编译之前，我并不知道MATLAB和C/C++编译器的版本号需要匹配，一开始安装了MATLAB 2014a和Visual Studio 2017，发现并不能兼容，同时也觉得MATLAB 2014a的版本号太老了，于是去下载安装了MATLAB 2017a（Crack Link），然后查找了论坛网站，找到了这个解决办法。 参考文章：【1】论坛——MATLAB 2017能不能配合Visual Studio 2017使用：https://www.mathworks.com/matlabcentral/answers/335092-can-i-use-microsoft-visual-studio-2017-with-matlab 【2】补丁报告——MATLAB 2017a与Visual Studio 2017交叉编译：https://www.mathworks.com/support/bugreports/1487958?s_tid=mwa_osa_a 【3】 https://blog.csdn.net/gisboygogogo/article/details/76793803","link":"/MATALB-2017a-installation-guide/"}],"tags":[{"name":"数据结构","slug":"数据结构","link":"/tags/数据结构/"},{"name":"算法","slug":"算法","link":"/tags/算法/"},{"name":"最小生成树","slug":"最小生成树","link":"/tags/最小生成树/"},{"name":"MST","slug":"MST","link":"/tags/MST/"},{"name":"ACM","slug":"ACM","link":"/tags/ACM/"},{"name":"并查集","slug":"并查集","link":"/tags/并查集/"},{"name":"cpp","slug":"cpp","link":"/tags/cpp/"},{"name":"MATLAB","slug":"MATLAB","link":"/tags/MATLAB/"},{"name":"Python","slug":"Python","link":"/tags/Python/"},{"name":"macOS","slug":"macOS","link":"/tags/macOS/"},{"name":"VM","slug":"VM","link":"/tags/VM/"},{"name":"MathJax","slug":"MathJax","link":"/tags/MathJax/"},{"name":"Hexo","slug":"Hexo","link":"/tags/Hexo/"},{"name":"NexT","slug":"NexT","link":"/tags/NexT/"},{"name":"blog","slug":"blog","link":"/tags/blog/"},{"name":"Markdown","slug":"Markdown","link":"/tags/Markdown/"},{"name":"Linux","slug":"Linux","link":"/tags/Linux/"},{"name":"串","slug":"串","link":"/tags/串/"},{"name":"树","slug":"树","link":"/tags/树/"},{"name":"DFS","slug":"DFS","link":"/tags/DFS/"},{"name":"PAT","slug":"PAT","link":"/tags/PAT/"},{"name":"MySQL","slug":"MySQL","link":"/tags/MySQL/"},{"name":"OOP","slug":"OOP","link":"/tags/OOP/"},{"name":"Java","slug":"Java","link":"/tags/Java/"},{"name":"OJ","slug":"OJ","link":"/tags/OJ/"},{"name":"排序","slug":"排序","link":"/tags/排序/"},{"name":"sorting","slug":"sorting","link":"/tags/sorting/"},{"name":"algorithm","slug":"algorithm","link":"/tags/algorithm/"},{"name":"data structure","slug":"data-structure","link":"/tags/data-structure/"},{"name":"交换排序","slug":"交换排序","link":"/tags/交换排序/"},{"name":"选择排序","slug":"选择排序","link":"/tags/选择排序/"},{"name":"冒泡排序","slug":"冒泡排序","link":"/tags/冒泡排序/"},{"name":"快速排序","slug":"快速排序","link":"/tags/快速排序/"},{"name":"直接选择排序","slug":"直接选择排序","link":"/tags/直接选择排序/"},{"name":"堆排序","slug":"堆排序","link":"/tags/堆排序/"},{"name":"归并排序","slug":"归并排序","link":"/tags/归并排序/"},{"name":"二分查找","slug":"二分查找","link":"/tags/二分查找/"},{"name":"DNS","slug":"DNS","link":"/tags/DNS/"},{"name":"计算机网络","slug":"计算机网络","link":"/tags/计算机网络/"},{"name":"algebra","slug":"algebra","link":"/tags/algebra/"},{"name":"SageMath","slug":"SageMath","link":"/tags/SageMath/"},{"name":"math","slug":"math","link":"/tags/math/"},{"name":"VS Code","slug":"VS-Code","link":"/tags/VS-Code/"},{"name":"LeetCode","slug":"LeetCode","link":"/tags/LeetCode/"},{"name":"English","slug":"English","link":"/tags/English/"},{"name":"Solidity","slug":"Solidity","link":"/tags/Solidity/"},{"name":"Ethereum","slug":"Ethereum","link":"/tags/Ethereum/"},{"name":"Smart Contracts","slug":"Smart-Contracts","link":"/tags/Smart-Contracts/"},{"name":"web3.js","slug":"web3-js","link":"/tags/web3-js/"},{"name":"Remix IDE","slug":"Remix-IDE","link":"/tags/Remix-IDE/"},{"name":"Assembly","slug":"Assembly","link":"/tags/Assembly/"},{"name":"Disassembly","slug":"Disassembly","link":"/tags/Disassembly/"},{"name":"Javascript","slug":"Javascript","link":"/tags/Javascript/"},{"name":"Wireshark","slug":"Wireshark","link":"/tags/Wireshark/"},{"name":"UML","slug":"UML","link":"/tags/UML/"},{"name":"astah","slug":"astah","link":"/tags/astah/"},{"name":"Design patterns","slug":"Design-patterns","link":"/tags/Design-patterns/"},{"name":"KDE","slug":"KDE","link":"/tags/KDE/"},{"name":"docker","slug":"docker","link":"/tags/docker/"},{"name":"设计模式","slug":"设计模式","link":"/tags/设计模式/"},{"name":"swagger","slug":"swagger","link":"/tags/swagger/"},{"name":"Spring","slug":"Spring","link":"/tags/Spring/"},{"name":"OS","slug":"OS","link":"/tags/OS/"},{"name":"Win10","slug":"Win10","link":"/tags/Win10/"},{"name":"git","slug":"git","link":"/tags/git/"},{"name":"LaTeX","slug":"LaTeX","link":"/tags/LaTeX/"},{"name":"Word","slug":"Word","link":"/tags/Word/"},{"name":"Office","slug":"Office","link":"/tags/Office/"},{"name":"Cpp","slug":"Cpp","link":"/tags/Cpp/"},{"name":"函数指针","slug":"函数指针","link":"/tags/函数指针/"},{"name":"Shellchain","slug":"Shellchain","link":"/tags/Shellchain/"},{"name":"Blockchain","slug":"Blockchain","link":"/tags/Blockchain/"},{"name":"Chrome","slug":"Chrome","link":"/tags/Chrome/"},{"name":"web browser","slug":"web-browser","link":"/tags/web-browser/"},{"name":"C","slug":"C","link":"/tags/C/"},{"name":"Scala","slug":"Scala","link":"/tags/Scala/"},{"name":"sbt","slug":"sbt","link":"/tags/sbt/"},{"name":"JVM","slug":"JVM","link":"/tags/JVM/"},{"name":"samba","slug":"samba","link":"/tags/samba/"},{"name":"nfs","slug":"nfs","link":"/tags/nfs/"},{"name":"ftp","slug":"ftp","link":"/tags/ftp/"},{"name":"openvpn","slug":"openvpn","link":"/tags/openvpn/"},{"name":"Postman","slug":"Postman","link":"/tags/Postman/"},{"name":"Spring Cloud","slug":"Spring-Cloud","link":"/tags/Spring-Cloud/"},{"name":"Kafka","slug":"Kafka","link":"/tags/Kafka/"},{"name":"RabbitMQ","slug":"RabbitMQ","link":"/tags/RabbitMQ/"},{"name":"Go","slug":"Go","link":"/tags/Go/"},{"name":"JUC","slug":"JUC","link":"/tags/JUC/"},{"name":"栈","slug":"栈","link":"/tags/栈/"},{"name":"队列","slug":"队列","link":"/tags/队列/"},{"name":"动态规划","slug":"动态规划","link":"/tags/动态规划/"},{"name":"SQL","slug":"SQL","link":"/tags/SQL/"},{"name":"OriginPro","slug":"OriginPro","link":"/tags/OriginPro/"},{"name":"绘图","slug":"绘图","link":"/tags/绘图/"},{"name":"Psychology","slug":"Psychology","link":"/tags/Psychology/"},{"name":"数据库","slug":"数据库","link":"/tags/数据库/"},{"name":"Ubuntu","slug":"Ubuntu","link":"/tags/Ubuntu/"},{"name":"SOA","slug":"SOA","link":"/tags/SOA/"},{"name":"JNI","slug":"JNI","link":"/tags/JNI/"},{"name":"智能合约","slug":"智能合约","link":"/tags/智能合约/"},{"name":"k8s","slug":"k8s","link":"/tags/k8s/"},{"name":"云原生","slug":"云原生","link":"/tags/云原生/"},{"name":"Hystrix","slug":"Hystrix","link":"/tags/Hystrix/"},{"name":"Gateway","slug":"Gateway","link":"/tags/Gateway/"},{"name":"Prometheus","slug":"Prometheus","link":"/tags/Prometheus/"},{"name":"IDEA","slug":"IDEA","link":"/tags/IDEA/"},{"name":"Vim","slug":"Vim","link":"/tags/Vim/"},{"name":"French","slug":"French","link":"/tags/French/"},{"name":"drawing","slug":"drawing","link":"/tags/drawing/"},{"name":"pickle","slug":"pickle","link":"/tags/pickle/"},{"name":"Arch Linux","slug":"Arch-Linux","link":"/tags/Arch-Linux/"},{"name":"shell","slug":"shell","link":"/tags/shell/"},{"name":"zsh","slug":"zsh","link":"/tags/zsh/"},{"name":"TeX","slug":"TeX","link":"/tags/TeX/"},{"name":"Haskell","slug":"Haskell","link":"/tags/Haskell/"},{"name":"STM32","slug":"STM32","link":"/tags/STM32/"},{"name":"MCU","slug":"MCU","link":"/tags/MCU/"},{"name":"Eclipse","slug":"Eclipse","link":"/tags/Eclipse/"},{"name":"numpy","slug":"numpy","link":"/tags/numpy/"},{"name":"练习题解答","slug":"练习题解答","link":"/tags/练习题解答/"},{"name":"HackRF","slug":"HackRF","link":"/tags/HackRF/"},{"name":"Raspberry Pi","slug":"Raspberry-Pi","link":"/tags/Raspberry-Pi/"},{"name":"socket","slug":"socket","link":"/tags/socket/"},{"name":"USART","slug":"USART","link":"/tags/USART/"},{"name":"统计与概率","slug":"统计与概率","link":"/tags/统计与概率/"},{"name":"Linux kernel","slug":"Linux-kernel","link":"/tags/Linux-kernel/"},{"name":"Android","slug":"Android","link":"/tags/Android/"},{"name":"Termux","slug":"Termux","link":"/tags/Termux/"},{"name":"machine learning","slug":"machine-learning","link":"/tags/machine-learning/"},{"name":"ssh","slug":"ssh","link":"/tags/ssh/"},{"name":"neural networks","slug":"neural-networks","link":"/tags/neural-networks/"},{"name":"image processing","slug":"image-processing","link":"/tags/image-processing/"},{"name":"Tmux","slug":"Tmux","link":"/tags/Tmux/"},{"name":"数字签名","slug":"数字签名","link":"/tags/数字签名/"},{"name":"Raspbian","slug":"Raspbian","link":"/tags/Raspbian/"},{"name":"贪心","slug":"贪心","link":"/tags/贪心/"},{"name":"字典序","slug":"字典序","link":"/tags/字典序/"},{"name":"Conda","slug":"Conda","link":"/tags/Conda/"},{"name":"pip","slug":"pip","link":"/tags/pip/"},{"name":"apt","slug":"apt","link":"/tags/apt/"},{"name":"pacman","slug":"pacman","link":"/tags/pacman/"},{"name":"计算机组成原理","slug":"计算机组成原理","link":"/tags/计算机组成原理/"},{"name":"Fortran","slug":"Fortran","link":"/tags/Fortran/"},{"name":"Gnome","slug":"Gnome","link":"/tags/Gnome/"},{"name":"C++","slug":"C","link":"/tags/C/"},{"name":"consumerism","slug":"consumerism","link":"/tags/consumerism/"},{"name":"MariaDB","slug":"MariaDB","link":"/tags/MariaDB/"},{"name":"OAuth","slug":"OAuth","link":"/tags/OAuth/"},{"name":"Microservices","slug":"Microservices","link":"/tags/Microservices/"},{"name":"Nacos","slug":"Nacos","link":"/tags/Nacos/"},{"name":"Maven","slug":"Maven","link":"/tags/Maven/"},{"name":"Gradle","slug":"Gradle","link":"/tags/Gradle/"},{"name":"FreeBSD","slug":"FreeBSD","link":"/tags/FreeBSD/"},{"name":"Parallel computing","slug":"Parallel-computing","link":"/tags/Parallel-computing/"},{"name":"Cluster computing","slug":"Cluster-computing","link":"/tags/Cluster-computing/"},{"name":"暴力求解","slug":"暴力求解","link":"/tags/暴力求解/"},{"name":"树状数组","slug":"树状数组","link":"/tags/树状数组/"},{"name":"LevelDB","slug":"LevelDB","link":"/tags/LevelDB/"},{"name":"qemu","slug":"qemu","link":"/tags/qemu/"},{"name":"kvm","slug":"kvm","link":"/tags/kvm/"},{"name":"搜索","slug":"搜索","link":"/tags/搜索/"},{"name":"Pandas","slug":"Pandas","link":"/tags/Pandas/"},{"name":"WSL","slug":"WSL","link":"/tags/WSL/"},{"name":"Windows","slug":"Windows","link":"/tags/Windows/"}],"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","link":"/categories/数据结构与算法/"},{"name":"Eureka项目","slug":"Eureka项目","link":"/categories/Eureka项目/"},{"name":"C++笔记","slug":"C-笔记","link":"/categories/C-笔记/"},{"name":"JuliuSC项目","slug":"JuliuSC项目","link":"/categories/JuliuSC项目/"},{"name":"Linux驱动开发","slug":"Linux驱动开发","link":"/categories/Linux驱动开发/"},{"name":"Linux shell","slug":"Linux-shell","link":"/categories/Linux-shell/"},{"name":"TBAC","slug":"TBAC","link":"/categories/TBAC/"}]}